{"paragraph_scenes_info": [{"x": 1, "text": "We describe latent Dirichlet allocation (LDA), a generative probabilistic model for collections of discrete data such as text corpora.LDA is a three-level hierarchical Bayesian model, in which each item of a collection is modeled as a finite mixture over an underlying set of topics.Each topic is, in turn, modeled as an infinite mixture over an underlying set of topic probabilities.In the context of text modeling, the topic probabilities provide an explicit representation of a document.We present efficient approximate inference techniques based on variational methods and an EM algorithm for empirical Bayes parameter estimation.We report results in document modeling, text classification, and collaborative filtering, comparing to a mixture of unigrams model and the probabilistic LSI model."}, {"x": 4, "text": "Significant progress has been made on this problem by researchers in the field of informa- tion retrieval (IR) (Baeza-Yates and Ribeiro-Neto, 1999).The basic methodology proposed by IR researchers for text corporaa methodology successfully deployed in modern Internet search enginesreduces each document in the corpus to a vector of real numbers, each of which repre- sents ratios of counts.In the popular tf-idf scheme (Salton and McGill, 1983), a basic vocabulary of words or terms is chosen, and, for each document in the corpus, a count is formed of the number of occurrences of each word.After suitable normalization, this term frequency count is compared to an inverse document frequency count, which measures the number of occurrences of a word in the entire corpus (generally on a log scale, and again suitably normalized).The end result is a term-by-document matrix X whose columns contain the tf-idf values for each of the documents in the corpus.Thus the tf-idf scheme reduces documents of arbitrary length to fixed-length lists of numbers."}, {"x": 5, "text": "While the tf-idf reduction has some appealing featuresnotably in its basic identification of sets of words that are discriminative for documents in the collectionthe approach also provides a rela- tively small amount of reduction in description length and reveals little in the way of inter- or intra- document statistical structure.To address these shortcomings, IR researchers have proposed several other dimensionality reduction techniques, most notably latent semantic indexing (LSI) (Deerwester et al., 1990).LSI uses a singular value decomposition of the X matrix to identify a linear subspace in the space of tf-idf features that captures most of the variance in the collection.This approach can achieve significant compression in large collections.Furthermore, Deerwester et al.argue that the derived features of LSI, which are linear combinations of the original tf-idf features, can capture some aspects of basic linguistic notions such as synonymy and polysemy."}, {"x": 6, "text": "To substantiate the claims regarding LSI, and to study its relative strengths and weaknesses, it is useful to develop a generative probabilistic model of text corpora and to study the ability of LSI to recover aspects of the generative model from data (Papadimitriou et al., 1998).Given a generative model of text, however, it is not clear why one should adopt the LSI methodologyone can attempt to proceed more directly, fitting the model to data using maximum likelihood or Bayesian methods."}, {"x": 7, "text": "A significant step forward in this regard was made by Hofmann (1999), who presented the probabilistic LSI (pLSI) model, also known as the aspect model, as an alternative to LSI.The pLSI approach, which we describe in detail in Section 4.3, models each word in a document as a sample from a mixture model, where the mixture components are multinomial random variables that can be viewed as representations of topics.Thus each word is generated from a single topic, and different words in a document may be generated from different topics.Each document is represented as a list of mixing proportions for these mixture components and thereby reduced to a probability distribution on a fixed set of topics.This distribution is the reduced description associated with the document."}, {"x": 8, "text": "While Hofmanns work is a useful step toward probabilistic modeling of text, it is incomplete in that it provides no probabilistic model at the level of documents.In pLSI, each document is represented as a list of numbers (the mixing proportions for topics), and there is no generative probabilistic model for these numbers.This leads to several problems: (1) the number of parame- ters in the model grows linearly with the size of the corpus, which leads to serious problems with overfitting, and (2) it is not clear how to assign probability to a document outside of the training set."}, {"x": 9, "text": "To see how to proceed beyond pLSI, let us consider the fundamental probabilistic assumptions underlying the class of dimensionality reduction methods that includes LSI and pLSI.All of these methods are based on the bag-of-words assumptionthat the order of words in a document can be neglected.In the language of probability theory, this is an assumption of exchangeability for the words in a document (Aldous, 1985).Moreover, although less often stated formally, these methods also assume that documents are exchangeable; the specific ordering of the documents in a corpus can also be neglected."}, {"x": 10, "text": "A classic representation theorem due to de Finetti (1990) establishes that any collection of ex- changeable random variables has a representation as a mixture distributionin general an infinite mixture.Thus, if we wish to consider exchangeable representations for documents and words, we need to consider mixture models that capture the exchangeability of both words and documents."}, {"x": 11, "text": "This line of thinking leads to the latent Dirichlet allocation (LDA) model that we present in the current paper."}, {"x": 12, "text": "It is important to emphasize that an assumption of exchangeability is not equivalent to an as- sumption that the random variables are independent and identically distributed.Rather, exchange- ability essentially can be interpreted as meaning conditionally independent and identically dis- tributed, where the conditioning is with respect to an underlying latent parameter of a probability distribution.Conditionally, the joint distribution of the random variables is simple and factored while marginally over the latent parameter, the joint distribution can be quite complex.Thus, while an assumption of exchangeability is clearly a major simplifying assumption in the domain of text modeling, and its principal justification is that it leads to methods that are computationally efficient, the exchangeability assumptions do not necessarily lead to methods that are restricted to simple frequency counts or linear operations.We aim to demonstrate in the current paper that, by taking the de Finetti theorem seriously, we can capture significant intra-document statistical structure via the mixing distribution."}, {"x": 14, "text": "The paper is organized as follows.In Section 2 we introduce basic notation and terminology.The LDA model is presented in Section 3 and is compared to related latent variable models in Section 4.We discuss inference and parameter estimation for LDA in Section 5.An illustrative example of fitting LDA to data is provided in Section 6.Empirical results in text modeling, text classification and collaborative filtering are presented in Section 7.Finally, Section 8 presents our conclusions."}, {"x": 16, "text": "We use the language of text collections throughout the paper, referring to entities such as words, documents, and corpora.This is useful in that it helps to guide intuition, particularly when we introduce latent variables which aim to capture abstract notions such as topics.It is important to note, however, that the LDA model is not necessarily tied to text, and has applications to other problems involving collections of data, including data from domains such as collaborative filtering, content-based image retrieval and bioinformatics.Indeed, in Section 7.3, we present experimental results in the collaborative filtering domain."}, {"x": 23, "text": "3.Latent Dirichlet allocation"}, {"x": 26, "text": "1.Choose N  Poisson()."}, {"x": 31, "text": "Several simplifying assumptions are made in this basic model, some of which we remove in subsequent sections.First, the dimensionality k of the Dirichlet distribution (and thus the dimensionality of the topic variable z) is assumed known and fixed.Second, the word probabilities are parameter- ized by a kV matrix  where  = p(wj = 1|zi = 1), which for now we treat as a fixed quantity ij that is to be estimated.Finally, the Poisson assumption is not critical to anything that follows and more realistic document length distributions can be used as needed.Furthermore, note that N is independent of all the other data generating variables ( and z).It is thus an ancillary variable and we will generally ignore its randomness in the subsequent development."}, {"x": 32, "text": "A k-dimensional Dirichlet random variable  can take values in the (k  1)-simplex (a k-vector  lies in the (k  1)-simplex if i  0, ki=1 i = 1), and has the following probability density on this simplex: where the parameter  is a k-vector with components i > 0, and where (x) is the Gamma function.The Dirichlet is a convenient distribution on the simplex  it is in the exponential family, has finite dimensional sufficient statistics, and is conjugate to the multinomial distribution.In Section 5, these properties will facilitate the development of inference and parameter estimation algorithms for LDA."}, {"x": 36, "text": "It is important to distinguish LDA from a simple Dirichlet-multinomial clustering model.A classical clustering model would involve a two-level model in which a Dirichlet is sampled once for a corpus, a multinomial clustering variable is selected once for each document in the corpus, and a set of words are selected for the document conditional on the cluster variable.As with many clustering models, such a model restricts a document to being associated with a single topic.LDA, on the other hand, involves three levels, and notably the topic node is sampled repeatedly within the document.Under this model, documents can be associated with multiple topics."}, {"x": 37, "text": "Structures similar to that shown in Figure 1 are often studied in Bayesian statistical modeling, where they are referred to as hierarchical models (Gelman et al., 1995), or more precisely as con- ditionally independent hierarchical models (Kass and Steffey, 1989).Such models are also often referred to as parametric empirical Bayes models, a term that refers not only to a particular model structure, but also to the methods used for estimating parameters in the model (Morris, 1983).In- deed, as we discuss in Section 5, we adopt the empirical Bayes approach to estimating parameters such as  and  in simple implementations of LDA, but we also consider fuller Bayesian approaches as well."}, {"x": 39, "text": "A finite set of random variables <z1,...,zN> is said to be exchangeable if the joint distribution is invariant to permutation.If  is a permutation of the integers from 1 to N: p(z1,... ,zN) = p(z(1),... ,z(N))."}, {"x": 42, "text": "In LDA, we assume that words are generated by topics (by fixed conditional distributions) and that those topics are infinitely exchangeable within a document.By de Finettis theorem, the prob- ability of a sequence of words and topics must therefore have the form: where  is the random parameter of a multinomial over topics.We obtain the LDA distribution on documents in Eq.(3) by marginalizing out the topic variables and endowing  with a Dirichlet distribution."}, {"x": 44, "text": "The LDA model shown in Figure 1 is somewhat more elaborate than the two-level models often studied in the classical hierarchical Bayesian literature.By marginalizing over the hidden topic variable z, however, we can understand LDA as a two-level model."}, {"x": 52, "text": "Figure 2 illustrates this interpretation of LDA.It depicts the distribution on p(w|,) which is induced from a particular instance of an LDA model.Note that this distribution on the (V  1)- simplex is attained with only k + kV parameters yet exhibits a very interesting multimodal structure."}, {"x": 54, "text": "In this section we compare LDA to simpler latent variable models for textthe unigram model, a mixture of unigrams, and the pLSI model.Furthermore, we present a unified geometric interpreta- tion of these models which highlights their key differences and similarities."}, {"x": 55, "text": "4.1 Unigram model"}, {"x": 64, "text": "Probabilistic latent semantic indexing (pLSI) is another widely used document model (Hofmann, 1999).The pLSI model, illustrated in Figure 3c, posits that a document label d and a word wn are"}, {"x": 66, "text": "The pLSI model attempts to relax the simplifying assumption made in the mixture of unigrams model that each document is generated from only one topic.In a sense, it does capture the possibility that a document may contain multiple topics since p(z|d) serves as the mixture weights of the topics for a particular document d.However, it is important to note that d is a dummy index into the list of documents in the training set.Thus, d is a multinomial random variable with as many possible values as there are training documents and the model learns the topic mixtures p(z|d) only for those documents on which it is trained.For this reason, pLSI is not a well-defined generative model of documents; there is no natural way to use it to assign probability to a previously unseen document."}, {"x": 67, "text": "A further difficulty with pLSI, which also stems from the use of a distribution indexed by train- ing documents, is that the number of parameters which must be estimated grows linearly with the number of training documents.The parameters for a k-topic pLSI model are k multinomial distri- butions of size V and M mixtures over the k hidden topics.This gives kV + kM parameters and therefore linear growth in M. The linear growth in parameters suggests that the model is prone to overfitting and, empirically, overfitting is indeed a serious problem (see Section 7.1).In prac- tice, a tempering heuristic is used to smooth the parameters of the model for acceptable predic- tive performance.It has been shown, however, that overfitting can occur even when tempering is used (Popescul et al., 2001)."}, {"x": 68, "text": "LDA overcomes both of these problems by treating the topic mixture weights as a k-parameter hidden random variable rather than a large set of individual parameters which are explicitly linked to the training set.As described in Section 3, LDA is a well-defined generative model and generalizes easily to new documents.Furthermore, the k + kV parameters in a k-topic LDA model do not grow with the size of the training corpus.We will see in Section 7.1 that LDA does not suffer from the same overfitting issues as pLSI."}, {"x": 70, "text": "A good way of illustrating the differences between LDA and the other latent topic models is by considering the geometry of the latent space, and seeing how a document is represented in that geometry under each model."}, {"x": 71, "text": "All four of the models described aboveunigram, mixture of unigrams, pLSI, and LDA operate in the space of distributions over words.Each such distribution can be viewed as a point on the (V  1)-simplex, which we call the word simplex."}, {"x": 73, "text": "The pLSI model posits that each word of a training document comes from a randomly chosen topic.The topics are themselves drawn from a document-specific distribution over topics, i.e., a point on the topic simplex.There is one such distribution for each document; the set of training documents thus defines an empirical distribution on the topic simplex."}, {"x": 76, "text": "5.Inference and Parameter Estimation"}, {"x": 77, "text": "We have described the motivation behind LDA and illustrated its conceptual advantages over other latent topic models.In this section, we turn our attention to procedures for inference and parameter estimation under LDA."}, {"x": 80, "text": "The key inferential problem that we need to solve in order to use LDA is that of computing the posterior distribution of the hidden variables given a document:"}, {"x": 82, "text": "Unfortunately, this distribution is intractable to compute in general.Indeed, to normalize the distri- bution we marginalize over the hidden variables and write Eq.(3) in terms of the model parameters: a function which is intractable due to the coupling between  and  in the summation over latent topics (Dickey, 1983).Dickey shows that this function is an expectation under a particular extension to the Dirichlet distribution which can be represented with special hypergeometric functions.It has been used in a Bayesian context for censored discrete data to represent the posterior on  which, in that setting, is a random parameter (Dickey et al., 1987)."}, {"x": 83, "text": "Although the posterior distribution is intractable for exact inference, a wide variety of approxi- mate inference algorithms can be considered for LDA, including Laplace approximation, variational approximation, and Markov chain Monte Carlo (Jordan, 1999).In this section we describe a simple convexity-based variational algorithm for inference in LDA, and discuss some of the alternatives in Section 8."}, {"x": 86, "text": "A simple way to obtain a tractable family of lower bounds is to consider simple modifications of the original graphical model in which some of the edges and nodes are removed.Consider in particular the LDA model shown in Figure 5 (left).The problematic coupling between  and  arises due to the edges between , z, and w.By dropping these edges and the w nodes, and endow- ing the resulting simplified graphical model with free variational parameters, we obtain a family of distributions on the latent variables.This family is characterized by the following variational distribution: where the Dirichlet parameter  and the multinomial parameters (1 , ..., N ) are the free variational parameters."}, {"x": 89, "text": "Thus the optimizing values of the variational parameters are found by minimizing the Kullback- Leibler (KL) divergence between the variational distribution and the true posterior p(,z|w,,).This minimization can be achieved via an iterative fixed-point method.In particular, we show in Appendix A.3 that by computing the derivatives of the KL divergence and setting them equal to zero, we obtain the following pair of update equations:"}, {"x": 91, "text": "As we show in Appendix A.1, the expectation in the multinomial update can be computed as follows: E <log( )|> = ( ) k   , (8) where  is the first derivative of the log function which is computable via Taylor approxima- tions (Abramowitz and Stegun, 1970)."}, {"x": 92, "text": "Eqs.(6) and (7) have an appealing intuitive interpretation.The Dirichlet update is a poste- rior Dirichlet given expected observations taken under the variational distribution, E<zn |n>.The multinomial update is akin to using Bayes theorem, p(zn |wn)  p(wn |zn)p(zn), where p(zn) is approximated by the exponential of the expected value of its logarithm under the variational distri- bution."}, {"x": 94, "text": "In the language of text, the optimizing parameters ((w),(w)) are document-specific.In particular, we view the Dirichlet parameters (w) as providing a representation of a document in the topic simplex."}, {"x": 95, "text": "We summarize the variational inference procedure in Figure 6, with appropriate starting points for  and n.From the pseudocode it is clear that each iteration of variational inference for LDA requires O((N + 1)k) operations.Empirically, we find that the number of iterations required for a single document is on the order of the number of words in the document.This yields a total number of operations roughly on the order of N2k."}, {"x": 96, "text": "5.3 Parameter estimation"}, {"x": 97, "text": "In this section we present an empirical Bayes method for parameter estimation in the LDA model (see Section 5.4 for a fuller Bayesian approach).In particular, given a corpus of documents D = <w1,w2,...,wM>, we wish to find parameters  and  that maximize the (marginal) log likelihood of the data:"}, {"x": 98, "text": "As we have described above, the quantity p(w|,) cannot be computed tractably.However, variational inference provides us with a tractable lower bound on the log likelihood, a bound which we can maximize with respect to  and .We can thus find approximate empirical Bayes estimates for the LDA model via an alternating variational EM procedure that maximizes a lower bound with respect to the variational parameters  and , and then, for fixed values of the variational parameters, maximizes the lower bound with respect to the model parameters  and ."}, {"x": 99, "text": "We provide a detailed derivation of the variational EM algorithm for LDA in Appendix A.4.The derivation yields the following iterative algorithm:"}, {"x": 100, "text": "1.(E-step) For each document, find the optimizing values of the variational parameters <d , d : d  D>.This is done as described in the previous section."}, {"x": 103, "text": "In Appendix A.4, we show that the M-step update for the conditional multinomial parameter  can be written out analytically:"}, {"x": 104, "text": "We further show that the M-step update for Dirichlet parameter  can be implemented using an efficient Newton-Raphson method in which the Hessian is inverted in linear time."}, {"x": 106, "text": "The large vocabulary size that is characteristic of many document corpora creates serious problems of sparsity.A new document is very likely to contain words that did not appear in any of the documents in a training corpus.Maximum likelihood estimates of the multinomial parameters assign zero probability to such words, and thus zero probability to new documents.The standard approach to coping with this problem is to smooth the multinomial parameters, assigning positive probability to all vocabulary items whether or not they are observed in the training set (Jelinek, 1997).Laplace smoothing is commonly used; this essentially yields the mean of the posterior distribution under a uniform Dirichlet prior on the multinomial parameters."}, {"x": 107, "text": "Unfortunately, in the mixture model setting, simple Laplace smoothing is no longer justified as a maximum a posteriori method (although it is often implemented in practice; cf.Nigam et al., 1999).In fact, by placing a Dirichlet prior on the multinomial parameter we obtain an intractable posterior in the mixture model setting, for much the same reason that one obtains an intractable posterior in the basic LDA model.Our proposed solution to this problem is to simply apply variational inference methods to the extended model that includes Dirichlet smoothing on the multinomial parameter."}, {"x": 108, "text": "In the LDA setting, we obtain the extended graphical model shown in Figure 7.We treat  as a k  V random matrix (one row for each mixture component), where we assume that each row is independently drawn from an exchangeable Dirichlet distribution.2 We now extend our infer- ence procedures to treat the i as random variables that are endowed with a posterior distribution,conditioned on the data.Thus we move beyond the empirical Bayes procedure of Section 5.3 and consider a fuller Bayesian approach to LDA."}, {"x": 109, "text": "We consider a variational approach to Bayesian inference that places a separable distribution on the random variables , , and z (Attias, 2000):"}, {"x": 110, "text": "where qd(,z|,) is the variational distribution defined for LDA in Eq.(4).As is easily verified, the resulting variational inference procedure again yields Eqs.(6) and (7) as the update equations for the variational parameters  and , respectively, as well as an additional update for the new variational parameter :"}, {"x": 111, "text": "Iterating these equations to convergence yields an approximate posterior distribution on , , and z.We are now left with the hyperparameter  on the exchangeable Dirichlet, as well as the hy- perparameter  from before.Our approach to setting these hyperparameters is again (approximate) empirical Bayeswe use variational EM to find maximum likelihood estimates of these parameters"}, {"x": 114, "text": "In this section, we provide an illustrative example of the use of an LDA model on real data.Our data are 16,000 documents from a subset of the TREC AP corpus (Harman, 1992).After removing a standard list of stop words, we used the EM algorithm described in Section 5.3 to find the Dirichlet and conditional multinomial parameters for a 100-topic LDA model.The top words from some of the resulting multinomial distributions p(w|z) are illustrated in Figure 8 (top).As we have hoped, these distributions seem to capture some of the underlying topics in the corpus (and we have named them according to these topics)."}, {"x": 119, "text": "While demonstrating the power of LDA, the posterior analysis also highlights some of its lim- itations.In particular, the bag-of-words assumption allows words that should be generated by the same topic (e.g., William Randolph Hearst Foundation) to be allocated to several different top- ics.Overcoming this limitation would require some form of extension of the basic LDA model; in particular, we might relax the bag-of-words assumption by assuming partial exchangeability or"}, {"x": 122, "text": "In this section, we discuss our empirical evaluation of LDA in several problem domainsdocument modeling, document classification, and collaborative filtering."}, {"x": 123, "text": "In all of the mixture models, the expected complete log likelihood of the data has local max- ima at the points where all or some of the mixture components are equal to each other.To avoid these local maxima, it is important to initialize the EM algorithm appropriately.In our experiments, we initialize EM by seeding each conditional multinomial distribution with five documents, reduc- ing their effective total length to two words, and smoothing across the whole vocabulary.This is essentially an approximation to the scheme described in Heckerman and Meila (2001)."}, {"x": 125, "text": "We trained a number of latent variable models, including LDA, on two text corpora to compare the generalization performance of these models.The documents in the corpora are treated as unlabeled; thus, our goal is density estimationwe wish to achieve high likelihood on a held-out test set.In particular, we computed the perplexity of a held-out test set to evaluate the models.The perplexity, used by convention in language modeling, is monotonically decreasing in the likelihood of the test data, and is algebraicly equivalent to the inverse of the geometric mean per-word likelihood.A lower perplexity score indicates better generalization performance.3 More formally, for a test set of M documents, the perplexity is:"}, {"x": 126, "text": "In our experiments, we used a corpus of scientific abstracts from the C. Elegans community (Av- ery, 2002) containing 5,225 abstracts with 28,414 unique terms, and a subset of the TREC AP corpus containing 16,333 newswire articles with 23,075 unique terms.In both cases, we held out 10% of the data for test purposes and trained the models on the remaining 90%.In preprocessing the data,we removed a standard list of 50 stop words from each corpus.From the AP data, we further removed words that occurred only once."}, {"x": 127, "text": "We compared LDA with the unigram, mixture of unigrams, and pLSI models described in Sec- tion 4.We trained all the hidden variable models using EM with exactly the same stopping criteria, that the average change in expected log likelihood is less than 0.001%."}, {"x": 128, "text": "Both the pLSI model and the mixture of unigrams suffer from serious overfitting issues, though for different reasons.This phenomenon is illustrated in Table 1.In the mixture of unigrams model, overfitting is a result of peaked posteriors in the training set; a phenomenon familiar in the super- vised setting, where this model is known as the naive Bayes model (Rennie, 2001).This leads to a nearly deterministic clustering of the training documents (in the E-step) which is used to determine the word probabilities in each mixture component (in the M-step).A previously unseen document may best fit one of the resulting mixture components, but will probably contain at least one word which did not occur in the training documents that were assigned to that component.Such words will have a very small probability, which causes the perplexity of the new document to explode.As k increases, the documents of the training corpus are partitioned into finer collections and thus induce more words with small probabilities."}, {"x": 129, "text": "In the mixture of unigrams, we can alleviate overfitting through the variational Bayesian smooth- ing scheme presented in Section 5.4.This ensures that all words will have some probability under every mixture component."}, {"x": 130, "text": "In the pLSI case, the hard clustering problem is alleviated by the fact that each document is allowed to exhibit a different proportion of topics.However, pLSI only refers to the training doc- uments and a different overfitting problem arises that is due to the dimensionality of the p(z|d) parameter.One reasonable approach to assigning probability to a previously unseen document is by marginalizing over d:"}, {"x": 131, "text": "Essentially, we are integrating over the empirical distribution on the topic simplex (see Figure 4).This method of inference, though theoretically sound, causes the model to overfit.The document-specific topic distribution has some components which are close to zero for those topics that do not appear in the document.Thus, certain words will have very small probability in the estimates of each mixture component.When determining the probability of a new document through marginal- ization, only those training documents which exhibit a similar proportion of topics will contribute to the likelihood.For a given training documents topic proportions, any word which has small probability in all the constituent topics will cause the perplexity to explode.As k gets larger, the chance that a training document will exhibit topics that cover all the words in the new document decreases and thus the perplexity grows.Note that pLSI does not overfit as quickly (with respect to k) as the mixture of unigrams."}, {"x": 132, "text": "This overfitting problem essentially stems from the restriction that each future document exhibit the same topic proportions as were seen in one or more of the training documents.Given this constraint, we are not free to choose the most likely proportions of topics for the new document.An alternative approach is the folding-in heuristic suggested by Hofmann (1999), where one ignores the p(z|d) parameters and refits p(z|dnew).Note that this gives the pLSI model an unfair advantage by allowing it to refit k  1 parameters to the test data."}, {"x": 133, "text": "LDA suffers from neither of these problems.As in pLSI, each document can exhibit a different proportion of underlying topics.However, LDA can easily assign probability to a new document; no heuristics are needed for a new document to be endowed with a different set of topic proportions than were associated with documents in the training corpus."}, {"x": 134, "text": "Figure 9 presents the perplexity for each model on both corpora for different values of k.The pLSI model and mixture of unigrams are suitably corrected for overfitting.The latent variable models perform better than the simple unigram model.LDA consistently performs better than the other models."}, {"x": 135, "text": "7.2 Document classification"}, {"x": 136, "text": "In the text classification problem, we wish to classify a document into two or more mutually ex- clusive classes.As in any classification problem, we may wish to consider generative approaches or discriminative approaches.In particular, by using one LDA module for each class, we obtain a generative model for classification.It is also of interest to use LDA in the discriminative framework, and this is our focus in this section."}, {"x": 137, "text": "A challenging aspect of the document classification problem is the choice of features.Treating individual words as features yields a rich but very large feature set (Joachims, 1999).One way to reduce this feature set is to use an LDA model for dimensionality reduction.In particular, LDA reduces any document to a fixed set of real-valued featuresthe posterior Dirichlet parameters (w) associated with the document.It is of interest to see how much discriminatory information we lose in reducing the document description to these parameters."}, {"x": 139, "text": "In these experiments, we estimated the parameters of an LDA model on all the documents, without reference to their true class label.We then trained a support vector machine (SVM) on the low-dimensional representations provided by LDA and compared this SVM to an SVM trained on all the word features."}, {"x": 140, "text": "Using the SVMLight software package (Joachims, 1999), we compared an SVM trained on all the word features with those trained on features induced by a 50-topic LDA model.Note that we reduce the feature space by 99.6 percent in this case."}, {"x": 141, "text": "Figure 10 shows our results.We see that there is little reduction in classification performance in using the LDA-based features; indeed, in almost all cases the performance is improved with the LDA features.Although these results need further substantiation, they suggest that the topic-based representation provided by LDA may be useful as a fast filtering algorithm for feature selection in text classification."}, {"x": 147, "text": "In the pLSI model, the probability of a held-out movie is given by the same equation except that p(z|wobs) is computed by folding in the previously seen movies.Finally, in the LDA model, the probability of a held-out movie is given by integrating over the posterior Dirichlet:"}, {"x": 148, "text": "where p(|wobs) is given by the variational inference method described in Section 5.2.Note that this quantity is efficient to compute.We can interchange the sum and integral sign, and compute a linear combination of k Dirichlet expectations."}, {"x": 149, "text": "With a vocabulary of 1600 movies, we find the predictive perplexities illustrated in Figure 11.Again, the mixture of unigrams model and pLSI are corrected for overfitting, but the best predictive perplexities are obtained by the LDA model."}, {"x": 151, "text": "We have described latent Dirichlet allocation, a flexible generative probabilistic model for collec- tions of discrete data.LDA is based on a simple exchangeability assumption for the words and topics in a document; it is therefore realized by a straightforward application of de Finettis repre- sentation theorem.We can view LDA as a dimensionality reduction technique, in the spirit of LSI, but with proper underlying generative probabilistic semantics that make sense for the type of data that it models."}, {"x": 152, "text": "Exact inference is intractable for LDA, but any of a large suite of approximate inference algo- rithms can be used for inference and parameter estimation within the LDA framework.We have presented a simple convexity-based variational approach for inference, showing that it yields a fast algorithm resulting in reasonable comparative performance in terms of test set likelihood.Other approaches that might be considered include Laplace approximation, higher-order variational tech- niques, and Monte Carlo methods.In particular, Leisink and Kappen (2002) have presented a general methodology for converting low-order variational lower bounds into higher-order varia- tional bounds.It is also possible to achieve higher accuracy by dispensing with the requirement of maintaining a bound, and indeed Minka and Lafferty (2002) have shown that improved inferential accuracy can be obtained for the LDA model via a higher-order variational technique known as ex- pectation propagation.Finally, Griffiths and Steyvers (2002) have presented a Markov chain Monte Carlo algorithm for LDA."}, {"x": 153, "text": "LDA is a simple model, and although we view it as a competitor to methods such as LSI and pLSI in the setting of dimensionality reduction for document collections and other discrete cor- pora, it is also intended to be illustrative of the way in which probabilistic models can be scaled up to provide useful inferential machinery in domains involving multiple levels of structure.In- deed, the principal advantages of generative models such as LDA include their modularity and their extensibility.As a probabilistic module, LDA can be readily embedded in a more complex model a property that is not possessed by LSI.In recent work we have used pairs of LDA modules to model relationships between images and their corresponding descriptive captions (Blei and Jordan, 2002).Moreover, there are numerous possible extensions of LDA.For example, LDA is readily extended to continuous data or other non-multinomial data.As is the case for other mixture models, including finite mixture models and hidden Markov models, the emission probability p(wn |zn) contributes only a likelihood value to the inference procedures for LDA, and other likelihoods are readily substituted in its place.In particular, it is straightforward to develop a continuous variant of LDA in which Gaussian observables are used in place of multinomials.Another simple extension of LDA comes from allowing mixtures of Dirichlet distributions in the place of the single Dirichlet of LDA.This allows a richer structure in the latent topic space and in particular allows a form of document clustering that is different from the clustering that is achieved via shared topics.Finally, a variety of extensions of LDA can be considered in which the distributions on the topic variables are elaborated.For example, we could arrange the topics in a time series, essentially relaxing the full exchangeability assumption to one of partial exchangeability.We could also consider partially exchangeable models in which we condition on exogenous variables; thus, for example, the topic distribution could be conditioned on features such as paragraph or sentence, providing a more powerful text model that makes use of information obtained from a parser."}], "sentence_id_text_dict": {"0": "Abstract", "1": "We describe latent Dirichlet allocation (LDA), a generative probabilistic model for collections of discrete data such as text corpora.", "2": "LDA is a three-level hierarchical Bayesian model, in which each item of a collection is modeled as a finite mixture over an underlying set of topics.", "3": "Each topic is, in turn, modeled as an infinite mixture over an underlying set of topic probabilities.", "4": "In the context of text modeling, the topic probabilities provide an explicit representation of a document.", "5": "We present efficient approximate inference techniques based on variational methods and an EM algorithm for empirical Bayes parameter estimation.", "6": "We report results in document modeling, text classification, and collaborative filtering, comparing to a mixture of unigrams model and the probabilistic LSI model.", "7": "1.", "8": "Introduction", "9": "In this paper we consider the problem of modeling text corpora and other collections of discrete data.", "10": "The goal is to find short descriptions of the members of a collection that enable efficient processing of large collections while preserving the essential statistical relationships that are useful for basic tasks such as classification, novelty detection, summarization, and similarity and relevance judgments.", "11": "Significant progress has been made on this problem by researchers in the field of informa- tion retrieval (IR) (Baeza-Yates and Ribeiro-Neto, 1999).", "12": "The basic methodology proposed by IR researchers for text corporaa methodology successfully deployed in modern Internet search enginesreduces each document in the corpus to a vector of real numbers, each of which repre- sents ratios of counts.", "13": "In the popular tf-idf scheme (Salton and McGill, 1983), a basic vocabulary of words or terms is chosen, and, for each document in the corpus, a count is formed of the number of occurrences of each word.", "14": "After suitable normalization, this term frequency count is compared to an inverse document frequency count, which measures the number of occurrences of a word in the entire corpus (generally on a log scale, and again suitably normalized).", "15": "The end result is a term-by-document matrix X whose columns contain the tf-idf values for each of the documents in the corpus.", "16": "Thus the tf-idf scheme reduces documents of arbitrary length to fixed-length lists of numbers.", "17": "While the tf-idf reduction has some appealing featuresnotably in its basic identification of sets of words that are discriminative for documents in the collectionthe approach also provides a rela- tively small amount of reduction in description length and reveals little in the way of inter- or intra- document statistical structure.", "18": "To address these shortcomings, IR researchers have proposed several other dimensionality reduction techniques, most notably latent semantic indexing (LSI) (Deerwester et al., 1990).", "19": "LSI uses a singular value decomposition of the X matrix to identify a linear subspace in the space of tf-idf features that captures most of the variance in the collection.", "20": "This approach can achieve significant compression in large collections.", "21": "Furthermore, Deerwester et al.", "22": "argue that the derived features of LSI, which are linear combinations of the original tf-idf features, can capture some aspects of basic linguistic notions such as synonymy and polysemy.", "23": "To substantiate the claims regarding LSI, and to study its relative strengths and weaknesses, it is useful to develop a generative probabilistic model of text corpora and to study the ability of LSI to recover aspects of the generative model from data (Papadimitriou et al., 1998).", "24": "Given a generative model of text, however, it is not clear why one should adopt the LSI methodologyone can attempt to proceed more directly, fitting the model to data using maximum likelihood or Bayesian methods.", "25": "A significant step forward in this regard was made by Hofmann (1999), who presented the probabilistic LSI (pLSI) model, also known as the aspect model, as an alternative to LSI.", "26": "The pLSI approach, which we describe in detail in Section 4.3, models each word in a document as a sample from a mixture model, where the mixture components are multinomial random variables that can be viewed as representations of topics.", "27": "Thus each word is generated from a single topic, and different words in a document may be generated from different topics.", "28": "Each document is represented as a list of mixing proportions for these mixture components and thereby reduced to a probability distribution on a fixed set of topics.", "29": "This distribution is the reduced description associated with the document.", "30": "While Hofmanns work is a useful step toward probabilistic modeling of text, it is incomplete in that it provides no probabilistic model at the level of documents.", "31": "In pLSI, each document is represented as a list of numbers (the mixing proportions for topics), and there is no generative probabilistic model for these numbers.", "32": "This leads to several problems: (1) the number of parame- ters in the model grows linearly with the size of the corpus, which leads to serious problems with overfitting, and (2) it is not clear how to assign probability to a document outside of the training set.", "33": "To see how to proceed beyond pLSI, let us consider the fundamental probabilistic assumptions underlying the class of dimensionality reduction methods that includes LSI and pLSI.", "34": "All of these methods are based on the bag-of-words assumptionthat the order of words in a document can be neglected.", "35": "In the language of probability theory, this is an assumption of exchangeability for the words in a document (Aldous, 1985).", "36": "Moreover, although less often stated formally, these methods also assume that documents are exchangeable; the specific ordering of the documents in a corpus can also be neglected.", "37": "A classic representation theorem due to de Finetti (1990) establishes that any collection of ex- changeable random variables has a representation as a mixture distributionin general an infinite mixture.", "38": "Thus, if we wish to consider exchangeable representations for documents and words, we need to consider mixture models that capture the exchangeability of both words and documents.", "39": "This line of thinking leads to the latent Dirichlet allocation (LDA) model that we present in the current paper.", "40": "It is important to emphasize that an assumption of exchangeability is not equivalent to an as- sumption that the random variables are independent and identically distributed.", "41": "Rather, exchange- ability essentially can be interpreted as meaning conditionally independent and identically dis- tributed, where the conditioning is with respect to an underlying latent parameter of a probability distribution.", "42": "Conditionally, the joint distribution of the random variables is simple and factored while marginally over the latent parameter, the joint distribution can be quite complex.", "43": "Thus, while an assumption of exchangeability is clearly a major simplifying assumption in the domain of text modeling, and its principal justification is that it leads to methods that are computationally efficient, the exchangeability assumptions do not necessarily lead to methods that are restricted to simple frequency counts or linear operations.", "44": "We aim to demonstrate in the current paper that, by taking the de Finetti theorem seriously, we can capture significant intra-document statistical structure via the mixing distribution.", "45": "It is also worth noting that there are a large number of generalizations of the basic notion of exchangeability, including various forms of partial exchangeability, and that representation theo- rems are available for these cases as well (Diaconis, 1988).", "46": "Thus, while the work that we discuss in the current paper focuses on simple bag-of-words models, which lead to mixture distributions for single words (unigrams), our methods are also applicable to richer models that involve mixtures for larger structural units such as n-grams or paragraphs.", "47": "The paper is organized as follows.", "48": "In Section 2 we introduce basic notation and terminology.", "49": "The LDA model is presented in Section 3 and is compared to related latent variable models in Section 4.", "50": "We discuss inference and parameter estimation for LDA in Section 5.", "51": "An illustrative example of fitting LDA to data is provided in Section 6.", "52": "Empirical results in text modeling, text classification and collaborative filtering are presented in Section 7.", "53": "Finally, Section 8 presents our conclusions.", "54": "2.", "55": "Notation and terminology", "56": "We use the language of text collections throughout the paper, referring to entities such as words, documents, and corpora.", "57": "This is useful in that it helps to guide intuition, particularly when we introduce latent variables which aim to capture abstract notions such as topics.", "58": "It is important to note, however, that the LDA model is not necessarily tied to text, and has applications to other problems involving collections of data, including data from domains such as collaborative filtering, content-based image retrieval and bioinformatics.", "59": "Indeed, in Section 7.3, we present experimental results in the collaborative filtering domain.", "60": "Formally, we define the following terms:", "61": "A word is the basic unit of discrete data, defined to be an item from a vocabulary indexed by", "62": "<1, .", "63": ".", "64": ".", "65": ", V >.", "66": "We represent words using unit-basis vectors that have a single component equal to one and all other components equal to zero.", "67": "Thus, using superscripts to denote components, the vth word in the vocabulary is represented by a V -vector w such that wv = 1 and wu = 0 for u=v.", "68": "A document is a sequence of N words denoted by w = (w1,w2,... ,wN), where wn is the nth word in the sequence.", "69": "A corpus is a collection of M documents denoted by D = <w1,w2,... ,wM>.", "70": "We wish to find a probabilistic model of a corpus that not only assigns high probability to members of the corpus, but also assigns high probability to other similar documents.", "71": "3.", "72": "Latent Dirichlet allocation", "73": "Latent Dirichlet allocation (LDA) is a generative probabilistic model of a corpus.", "74": "The basic idea is that documents are represented as random mixtures over latent topics, where each topic is charac- terized by a distribution over words.1", "75": "LDA assumes the following generative process for each document w in a corpus D:", "76": "1.", "77": "Choose N  Poisson().", "78": "2.", "79": "ChooseDir().", "80": "3.", "81": "For each of the N words wn:", "82": "(a) Choose a topic zn  Multinomial().", "83": "(b) Choose a word wn from p(wn |zn,), a multinomial probability conditioned on the topic", "84": "Several simplifying assumptions are made in this basic model, some of which we remove in subsequent sections.", "85": "First, the dimensionality k of the Dirichlet distribution (and thus the dimensionality of the topic variable z) is assumed known and fixed.", "86": "Second, the word probabilities are parameter- ized by a kV matrix  where  = p(wj = 1|zi = 1), which for now we treat as a fixed quantity ij that is to be estimated.", "87": "Finally, the Poisson assumption is not critical to anything that follows and more realistic document length distributions can be used as needed.", "88": "Furthermore, note that N is independent of all the other data generating variables ( and z).", "89": "It is thus an ancillary variable and we will generally ignore its randomness in the subsequent development.", "90": "A k-dimensional Dirichlet random variable  can take values in the (k  1)-simplex (a k-vector  lies in the (k  1)-simplex if i  0, ki=1 i = 1), and has the following probability density on this simplex: where the parameter  is a k-vector with components i > 0, and where (x) is the Gamma function.", "91": "The Dirichlet is a convenient distribution on the simplex  it is in the exponential family, has finite dimensional sufficient statistics, and is conjugate to the multinomial distribution.", "92": "In Section 5, these properties will facilitate the development of inference and parameter estimation algorithms for LDA.", "93": "Given the parameters  and , the joint distribution of a topic mixture , a set of N topics z, and asetofN wordswisgivenby: where p(z | ) is simply  for the unique i such that zi = 1.", "94": "Integrating over  and summing over nin", "95": "z, we obtain the marginal distribution of a document:", "96": "The LDA model is represented as a probabilistic graphical model in Figure 1.", "97": "As the figure makes clear, there are three levels to the LDA representation.", "98": "The parameters  and  are corpus- level parameters, assumed to be sampled once in the process of generating a corpus.", "99": "The variables d are document-level variables, sampled once per document.", "100": "Finally, the variables zdn and wdn are word-level variables and are sampled once for each word in each document.", "101": "It is important to distinguish LDA from a simple Dirichlet-multinomial clustering model.", "102": "A classical clustering model would involve a two-level model in which a Dirichlet is sampled once for a corpus, a multinomial clustering variable is selected once for each document in the corpus, and a set of words are selected for the document conditional on the cluster variable.", "103": "As with many clustering models, such a model restricts a document to being associated with a single topic.", "104": "LDA, on the other hand, involves three levels, and notably the topic node is sampled repeatedly within the document.", "105": "Under this model, documents can be associated with multiple topics.", "106": "Structures similar to that shown in Figure 1 are often studied in Bayesian statistical modeling, where they are referred to as hierarchical models (Gelman et al., 1995), or more precisely as con- ditionally independent hierarchical models (Kass and Steffey, 1989).", "107": "Such models are also often referred to as parametric empirical Bayes models, a term that refers not only to a particular model structure, but also to the methods used for estimating parameters in the model (Morris, 1983).", "108": "In- deed, as we discuss in Section 5, we adopt the empirical Bayes approach to estimating parameters such as  and  in simple implementations of LDA, but we also consider fuller Bayesian approaches as well.", "109": "3.1 LDA and exchangeability", "110": "A finite set of random variables <z1,...,zN> is said to be exchangeable if the joint distribution is invariant to permutation.", "111": "If  is a permutation of the integers from 1 to N: p(z1,... ,zN) = p(z(1),... ,z(N)).", "112": "An infinite sequence of random variables is infinitely exchangeable if every finite subsequence is exchangeable.", "113": "De Finettis representation theorem states that the joint distribution of an infinitely exchangeable sequence of random variables is as if a random parameter were drawn from some distribution and then the random variables in question were independent and identically distributed, conditioned on that parameter.", "114": "In LDA, we assume that words are generated by topics (by fixed conditional distributions) and that those topics are infinitely exchangeable within a document.", "115": "By de Finettis theorem, the prob- ability of a sequence of words and topics must therefore have the form: where  is the random parameter of a multinomial over topics.", "116": "We obtain the LDA distribution on documents in Eq.", "117": "(3) by marginalizing out the topic variables and endowing  with a Dirichlet distribution.", "118": "3.2 A continuous mixture of unigrams", "119": "The LDA model shown in Figure 1 is somewhat more elaborate than the two-level models often studied in the classical hierarchical Bayesian literature.", "120": "By marginalizing over the hidden topic variable z, however, we can understand LDA as a two-level model.", "121": "In particular, let us form the word distribution p(w|,): p(w|,) = p(w|z,)p(z|).", "122": "Note that this is a random quantity since it depends on .", "123": "We now define the following generative process for a document w:", "124": "1.", "125": "ChooseDir().", "126": "2.", "127": "For each of the N words wn:", "128": "(a) Choose a word wn from p(wn | , ).", "129": "This process defines the marginal distribution of a document as a continuous mixture distribution: where p(wn | , ) are the mixture components and p( | ) are the mixture weights.", "130": "Figure 2 illustrates this interpretation of LDA.", "131": "It depicts the distribution on p(w|,) which is induced from a particular instance of an LDA model.", "132": "Note that this distribution on the (V  1)- simplex is attained with only k + kV parameters yet exhibits a very interesting multimodal structure.", "133": "4.", "134": "Relationship with other latent variable models", "135": "In this section we compare LDA to simpler latent variable models for textthe unigram model, a mixture of unigrams, and the pLSI model.", "136": "Furthermore, we present a unified geometric interpreta- tion of these models which highlights their key differences and similarities.", "137": "4.1 Unigram model", "138": "Under the unigram model, the words of every document are drawn independently from a single multinomial distribution:", "139": "4.2 Mixture of unigrams", "140": "If we augment the unigram model with a discrete random topic variable z (Figure 3b), we obtain a mixture of unigrams model (Nigam et al., 2000).", "141": "Under this mixture model, each document is gen- erated by first choosing a topic z and then generating N words independently from the conditional multinomial p(w|z).", "142": "The probability of a document is:", "143": "N p(w)=p(z)p(wn|z).", "144": "z n=1", "145": "When estimated from a corpus, the word distributions can be viewed as representations of topics under the assumption that each document exhibits exactly one topic.", "146": "As the empirical results in Section 7 illustrate, this assumption is often too limiting to effectively model a large collection of documents.", "147": "In contrast, the LDA model allows documents to exhibit multiple topics to different degrees.", "148": "This is achieved at a cost of just one additional parameter: there are k  1 parameters associated with p(z) in the mixture of unigrams, versus the k parameters associated with p(|) in LDA.", "149": "4.3 Probabilistic latent semantic indexing", "150": "Probabilistic latent semantic indexing (pLSI) is another widely used document model (Hofmann, 1999).", "151": "The pLSI model, illustrated in Figure 3c, posits that a document label d and a word wn are", "152": "This is illustrated in the graphical model in Figure 3a.", "153": "conditionally independent given an unobserved topic z:", "154": "The pLSI model attempts to relax the simplifying assumption made in the mixture of unigrams model that each document is generated from only one topic.", "155": "In a sense, it does capture the possibility that a document may contain multiple topics since p(z|d) serves as the mixture weights of the topics for a particular document d.", "156": "However, it is important to note that d is a dummy index into the list of documents in the training set.", "157": "Thus, d is a multinomial random variable with as many possible values as there are training documents and the model learns the topic mixtures p(z|d) only for those documents on which it is trained.", "158": "For this reason, pLSI is not a well-defined generative model of documents; there is no natural way to use it to assign probability to a previously unseen document.", "159": "A further difficulty with pLSI, which also stems from the use of a distribution indexed by train- ing documents, is that the number of parameters which must be estimated grows linearly with the number of training documents.", "160": "The parameters for a k-topic pLSI model are k multinomial distri- butions of size V and M mixtures over the k hidden topics.", "161": "This gives kV + kM parameters and therefore linear growth in M. The linear growth in parameters suggests that the model is prone to overfitting and, empirically, overfitting is indeed a serious problem (see Section 7.1).", "162": "In prac- tice, a tempering heuristic is used to smooth the parameters of the model for acceptable predic- tive performance.", "163": "It has been shown, however, that overfitting can occur even when tempering is used (Popescul et al., 2001).", "164": "LDA overcomes both of these problems by treating the topic mixture weights as a k-parameter hidden random variable rather than a large set of individual parameters which are explicitly linked to the training set.", "165": "As described in Section 3, LDA is a well-defined generative model and generalizes easily to new documents.", "166": "Furthermore, the k + kV parameters in a k-topic LDA model do not grow with the size of the training corpus.", "167": "We will see in Section 7.1 that LDA does not suffer from the same overfitting issues as pLSI.", "168": "4.4 A geometric interpretation", "169": "A good way of illustrating the differences between LDA and the other latent topic models is by considering the geometry of the latent space, and seeing how a document is represented in that geometry under each model.", "170": "All four of the models described aboveunigram, mixture of unigrams, pLSI, and LDA operate in the space of distributions over words.", "171": "Each such distribution can be viewed as a point on the (V  1)-simplex, which we call the word simplex.", "172": "The unigram model finds a single point on the word simplex and posits that all words in the corpus come from the corresponding distribution.", "173": "The latent variable models consider k points on the word simplex and form a sub-simplex based on those points, which we call the topic simplex.", "174": "Note that any point on the topic simplex is also a point on the word simplex.", "175": "The different latent variable models use the topic simplex in different ways to generate a document.", "176": "The pLSI model posits that each word of a training document comes from a randomly chosen topic.", "177": "The topics are themselves drawn from a document-specific distribution over topics, i.e., a point on the topic simplex.", "178": "There is one such distribution for each document; the set of training documents thus defines an empirical distribution on the topic simplex.", "179": "LDA posits that each word of both the observed and unseen documents is generated by a randomly chosen topic which is drawn from a distribution with a randomly chosen parameter.", "180": "This parameter is sampled once per document from a smooth distribution on the topic simplex.", "181": "These differences are highlighted in Figure 4.", "182": "5.", "183": "Inference and Parameter Estimation", "184": "We have described the motivation behind LDA and illustrated its conceptual advantages over other latent topic models.", "185": "In this section, we turn our attention to procedures for inference and parameter estimation under LDA.", "186": "Themixtureofunigramsmodelpositsthatforeachdocument,oneofthekpointsontheword simplex (that is, one of the corners of the topic simplex) is chosen randomly and all the words of the document are drawn from the distribution corresponding to that point.", "187": "5.1 Inference", "188": "The key inferential problem that we need to solve in order to use LDA is that of computing the posterior distribution of the hidden variables given a document:", "189": "p(,z|w,,) = p(,z,w|,).", "190": "p(w|,)", "191": "Unfortunately, this distribution is intractable to compute in general.", "192": "Indeed, to normalize the distri- bution we marginalize over the hidden variables and write Eq.", "193": "(3) in terms of the model parameters: a function which is intractable due to the coupling between  and  in the summation over latent topics (Dickey, 1983).", "194": "Dickey shows that this function is an expectation under a particular extension to the Dirichlet distribution which can be represented with special hypergeometric functions.", "195": "It has been used in a Bayesian context for censored discrete data to represent the posterior on  which, in that setting, is a random parameter (Dickey et al., 1987).", "196": "Although the posterior distribution is intractable for exact inference, a wide variety of approxi- mate inference algorithms can be considered for LDA, including Laplace approximation, variational approximation, and Markov chain Monte Carlo (Jordan, 1999).", "197": "In this section we describe a simple convexity-based variational algorithm for inference in LDA, and discuss some of the alternatives in Section 8.", "198": "5.2 Variational inference", "199": "The basic idea of convexity-based variational inference is to make use of Jensens inequality to ob- tain an adjustable lower bound on the log likelihood (Jordan et al., 1999).", "200": "Essentially, one considers a family of lower bounds, indexed by a set of variational parameters.", "201": "The variational parameters are chosen by an optimization procedure that attempts to find the tightest possible lower bound.", "202": "A simple way to obtain a tractable family of lower bounds is to consider simple modifications of the original graphical model in which some of the edges and nodes are removed.", "203": "Consider in particular the LDA model shown in Figure 5 (left).", "204": "The problematic coupling between  and  arises due to the edges between , z, and w.", "205": "By dropping these edges and the w nodes, and endow- ing the resulting simplified graphical model with free variational parameters, we obtain a family of distributions on the latent variables.", "206": "This family is characterized by the following variational distribution: where the Dirichlet parameter  and the multinomial parameters (1 , .", "207": ".", "208": ".", "209": ", N ) are the free variational parameters.", "210": "Having specified a simplified family of probability distributions, the next step is to set up an optimization problem that determines the values of the variational parameters  and .", "211": "As we show in Appendix A, the desideratum of finding a tight lower bound on the log likelihood translates directly into the following optimization problem:", "212": "(,) = argminD(q(,z|,)  p(,z|w,,)).", "213": "(5) (,)", "214": "Thus the optimizing values of the variational parameters are found by minimizing the Kullback- Leibler (KL) divergence between the variational distribution and the true posterior p(,z|w,,).", "215": "This minimization can be achieved via an iterative fixed-point method.", "216": "In particular, we show in Appendix A.3 that by computing the derivatives of the KL divergence and setting them equal to zero, we obtain the following pair of update equations:", "217": "ni  iwn exp<Eq<log(i)|>> (6) i = i +Nn=1 ni.", "218": "(7)", "219": "As we show in Appendix A.1, the expectation in the multinomial update can be computed as follows: E <log( )|> = ( ) k   , (8) where  is the first derivative of the log function which is computable via Taylor approxima- tions (Abramowitz and Stegun, 1970).", "220": "Eqs.", "221": "(6) and (7) have an appealing intuitive interpretation.", "222": "The Dirichlet update is a poste- rior Dirichlet given expected observations taken under the variational distribution, E<zn |n>.", "223": "The multinomial update is akin to using Bayes theorem, p(zn |wn)  p(wn |zn)p(zn), where p(zn) is approximated by the exponential of the expected value of its logarithm under the variational distri- bution.", "224": "It is important to note that the variational distribution is actually a conditional distribution, varying as a function of w.", "225": "This occurs because the optimization problem in Eq.", "226": "(5) is conducted for fixed w, and thus yields optimizing parameters (,) that are a function of w.", "227": "We can write the resulting variational distribution as q(,z|(w),(w)), where we have made the dependence on w explicit.", "228": "Thus the variational distribution can be viewed as an approximation to the posterior distribution p(,z|w,,).", "229": "In the language of text, the optimizing parameters ((w),(w)) are document-specific.", "230": "In particular, we view the Dirichlet parameters (w) as providing a representation of a document in the topic simplex.", "231": "We summarize the variational inference procedure in Figure 6, with appropriate starting points for  and n.", "232": "From the pseudocode it is clear that each iteration of variational inference for LDA requires O((N + 1)k) operations.", "233": "Empirically, we find that the number of iterations required for a single document is on the order of the number of words in the document.", "234": "This yields a total number of operations roughly on the order of N2k.", "235": "5.3 Parameter estimation", "236": "In this section we present an empirical Bayes method for parameter estimation in the LDA model (see Section 5.4 for a fuller Bayesian approach).", "237": "In particular, given a corpus of documents D = <w1,w2,...,wM>, we wish to find parameters  and  that maximize the (marginal) log likelihood of the data:", "238": "As we have described above, the quantity p(w|,) cannot be computed tractably.", "239": "However, variational inference provides us with a tractable lower bound on the log likelihood, a bound which we can maximize with respect to  and .", "240": "We can thus find approximate empirical Bayes estimates for the LDA model via an alternating variational EM procedure that maximizes a lower bound with respect to the variational parameters  and , and then, for fixed values of the variational parameters, maximizes the lower bound with respect to the model parameters  and .", "241": "We provide a detailed derivation of the variational EM algorithm for LDA in Appendix A.4.", "242": "The derivation yields the following iterative algorithm:", "243": "1.", "244": "(E-step) For each document, find the optimizing values of the variational parameters <d , d : d  D>.", "245": "This is done as described in the previous section.", "246": "2.", "247": "(M-step) Maximize the resulting lower bound on the log likelihood with respect to the model parameters  and .", "248": "This corresponds to finding maximum likelihood estimates with expected sufficient statistics for each document under the approximate posterior which is computed in the E-step.", "249": "These two steps are repeated until the lower bound on the log likelihood converges.", "250": "In Appendix A.4, we show that the M-step update for the conditional multinomial parameter  can be written out analytically:", "251": "We further show that the M-step update for Dirichlet parameter  can be implemented using an efficient Newton-Raphson method in which the Hessian is inverted in linear time.", "252": "5.4 Smoothing", "253": "The large vocabulary size that is characteristic of many document corpora creates serious problems of sparsity.", "254": "A new document is very likely to contain words that did not appear in any of the documents in a training corpus.", "255": "Maximum likelihood estimates of the multinomial parameters assign zero probability to such words, and thus zero probability to new documents.", "256": "The standard approach to coping with this problem is to smooth the multinomial parameters, assigning positive probability to all vocabulary items whether or not they are observed in the training set (Jelinek, 1997).", "257": "Laplace smoothing is commonly used; this essentially yields the mean of the posterior distribution under a uniform Dirichlet prior on the multinomial parameters.", "258": "Unfortunately, in the mixture model setting, simple Laplace smoothing is no longer justified as a maximum a posteriori method (although it is often implemented in practice; cf.", "259": "Nigam et al., 1999).", "260": "In fact, by placing a Dirichlet prior on the multinomial parameter we obtain an intractable posterior in the mixture model setting, for much the same reason that one obtains an intractable posterior in the basic LDA model.", "261": "Our proposed solution to this problem is to simply apply variational inference methods to the extended model that includes Dirichlet smoothing on the multinomial parameter.", "262": "In the LDA setting, we obtain the extended graphical model shown in Figure 7.", "263": "We treat  as a k  V random matrix (one row for each mixture component), where we assume that each row is independently drawn from an exchangeable Dirichlet distribution.2 We now extend our infer- ence procedures to treat the i as random variables that are endowed with a posterior distribution,conditioned on the data.", "264": "Thus we move beyond the empirical Bayes procedure of Section 5.3 and consider a fuller Bayesian approach to LDA.", "265": "We consider a variational approach to Bayesian inference that places a separable distribution on the random variables , , and z (Attias, 2000):", "266": "where qd(,z|,) is the variational distribution defined for LDA in Eq.", "267": "(4).", "268": "As is easily verified, the resulting variational inference procedure again yields Eqs.", "269": "(6) and (7) as the update equations for the variational parameters  and , respectively, as well as an additional update for the new variational parameter :", "270": "Iterating these equations to convergence yields an approximate posterior distribution on , , and z.", "271": "We are now left with the hyperparameter  on the exchangeable Dirichlet, as well as the hy- perparameter  from before.", "272": "Our approach to setting these hyperparameters is again (approximate) empirical Bayeswe use variational EM to find maximum likelihood estimates of these parameters", "273": "based on the marginal likelihood.", "274": "These procedures are described in Appendix A.4.", "275": "6.", "276": "Example", "277": "In this section, we provide an illustrative example of the use of an LDA model on real data.", "278": "Our data are 16,000 documents from a subset of the TREC AP corpus (Harman, 1992).", "279": "After removing a standard list of stop words, we used the EM algorithm described in Section 5.3 to find the Dirichlet and conditional multinomial parameters for a 100-topic LDA model.", "280": "The top words from some of the resulting multinomial distributions p(w|z) are illustrated in Figure 8 (top).", "281": "As we have hoped, these distributions seem to capture some of the underlying topics in the corpus (and we have named them according to these topics).", "282": "Further insight comes from examining the n parameters.", "283": "These distributions approximate", "284": "p(zn | w) and tend to peak towards one of the k possible topic values.", "285": "In the article text in Figure 8,", "286": "the words are color coded according to these values (i.e., the ith color is used if q (zi = 1) > 0.9).", "287": "nn", "288": "With this illustration, one can identify how the different topics mixed in the document text.", "289": "While demonstrating the power of LDA, the posterior analysis also highlights some of its lim- itations.", "290": "In particular, the bag-of-words assumption allows words that should be generated by the same topic (e.g., William Randolph Hearst Foundation) to be allocated to several different top- ics.", "291": "Overcoming this limitation would require some form of extension of the basic LDA model; in particular, we might relax the bag-of-words assumption by assuming partial exchangeability or", "292": "Markovianity of word sequences.", "293": "7.", "294": "Applications and Empirical Results", "295": "In this section, we discuss our empirical evaluation of LDA in several problem domainsdocument modeling, document classification, and collaborative filtering.", "296": "In all of the mixture models, the expected complete log likelihood of the data has local max- ima at the points where all or some of the mixture components are equal to each other.", "297": "To avoid these local maxima, it is important to initialize the EM algorithm appropriately.", "298": "In our experiments, we initialize EM by seeding each conditional multinomial distribution with five documents, reduc- ing their effective total length to two words, and smoothing across the whole vocabulary.", "299": "This is essentially an approximation to the scheme described in Heckerman and Meila (2001).", "300": "7.1 Document modeling", "301": "We trained a number of latent variable models, including LDA, on two text corpora to compare the generalization performance of these models.", "302": "The documents in the corpora are treated as unlabeled; thus, our goal is density estimationwe wish to achieve high likelihood on a held-out test set.", "303": "In particular, we computed the perplexity of a held-out test set to evaluate the models.", "304": "The perplexity, used by convention in language modeling, is monotonically decreasing in the likelihood of the test data, and is algebraicly equivalent to the inverse of the geometric mean per-word likelihood.", "305": "A lower perplexity score indicates better generalization performance.3 More formally, for a test set of M documents, the perplexity is:", "306": "In our experiments, we used a corpus of scientific abstracts from the C. Elegans community (Av- ery, 2002) containing 5,225 abstracts with 28,414 unique terms, and a subset of the TREC AP corpus containing 16,333 newswire articles with 23,075 unique terms.", "307": "In both cases, we held out 10% of the data for test purposes and trained the models on the remaining 90%.", "308": "In preprocessing the data,we removed a standard list of 50 stop words from each corpus.", "309": "From the AP data, we further removed words that occurred only once.", "310": "We compared LDA with the unigram, mixture of unigrams, and pLSI models described in Sec- tion 4.", "311": "We trained all the hidden variable models using EM with exactly the same stopping criteria, that the average change in expected log likelihood is less than 0.001%.", "312": "Both the pLSI model and the mixture of unigrams suffer from serious overfitting issues, though for different reasons.", "313": "This phenomenon is illustrated in Table 1.", "314": "In the mixture of unigrams model, overfitting is a result of peaked posteriors in the training set; a phenomenon familiar in the super- vised setting, where this model is known as the naive Bayes model (Rennie, 2001).", "315": "This leads to a nearly deterministic clustering of the training documents (in the E-step) which is used to determine the word probabilities in each mixture component (in the M-step).", "316": "A previously unseen document may best fit one of the resulting mixture components, but will probably contain at least one word which did not occur in the training documents that were assigned to that component.", "317": "Such words will have a very small probability, which causes the perplexity of the new document to explode.", "318": "As k increases, the documents of the training corpus are partitioned into finer collections and thus induce more words with small probabilities.", "319": "In the mixture of unigrams, we can alleviate overfitting through the variational Bayesian smooth- ing scheme presented in Section 5.4.", "320": "This ensures that all words will have some probability under every mixture component.", "321": "In the pLSI case, the hard clustering problem is alleviated by the fact that each document is allowed to exhibit a different proportion of topics.", "322": "However, pLSI only refers to the training doc- uments and a different overfitting problem arises that is due to the dimensionality of the p(z|d) parameter.", "323": "One reasonable approach to assigning probability to a previously unseen document is by marginalizing over d:", "324": "Essentially, we are integrating over the empirical distribution on the topic simplex (see Figure 4).", "325": "This method of inference, though theoretically sound, causes the model to overfit.", "326": "The document-specific topic distribution has some components which are close to zero for those topics that do not appear in the document.", "327": "Thus, certain words will have very small probability in the estimates of each mixture component.", "328": "When determining the probability of a new document through marginal- ization, only those training documents which exhibit a similar proportion of topics will contribute to the likelihood.", "329": "For a given training documents topic proportions, any word which has small probability in all the constituent topics will cause the perplexity to explode.", "330": "As k gets larger, the chance that a training document will exhibit topics that cover all the words in the new document decreases and thus the perplexity grows.", "331": "Note that pLSI does not overfit as quickly (with respect to k) as the mixture of unigrams.", "332": "This overfitting problem essentially stems from the restriction that each future document exhibit the same topic proportions as were seen in one or more of the training documents.", "333": "Given this constraint, we are not free to choose the most likely proportions of topics for the new document.", "334": "An alternative approach is the folding-in heuristic suggested by Hofmann (1999), where one ignores the p(z|d) parameters and refits p(z|dnew).", "335": "Note that this gives the pLSI model an unfair advantage by allowing it to refit k  1 parameters to the test data.", "336": "LDA suffers from neither of these problems.", "337": "As in pLSI, each document can exhibit a different proportion of underlying topics.", "338": "However, LDA can easily assign probability to a new document; no heuristics are needed for a new document to be endowed with a different set of topic proportions than were associated with documents in the training corpus.", "339": "Figure 9 presents the perplexity for each model on both corpora for different values of k.", "340": "The pLSI model and mixture of unigrams are suitably corrected for overfitting.", "341": "The latent variable models perform better than the simple unigram model.", "342": "LDA consistently performs better than the other models.", "343": "7.2 Document classification", "344": "In the text classification problem, we wish to classify a document into two or more mutually ex- clusive classes.", "345": "As in any classification problem, we may wish to consider generative approaches or discriminative approaches.", "346": "In particular, by using one LDA module for each class, we obtain a generative model for classification.", "347": "It is also of interest to use LDA in the discriminative framework, and this is our focus in this section.", "348": "A challenging aspect of the document classification problem is the choice of features.", "349": "Treating individual words as features yields a rich but very large feature set (Joachims, 1999).", "350": "One way to reduce this feature set is to use an LDA model for dimensionality reduction.", "351": "In particular, LDA reduces any document to a fixed set of real-valued featuresthe posterior Dirichlet parameters (w) associated with the document.", "352": "It is of interest to see how much discriminatory information we lose in reducing the document description to these parameters.", "353": "We conducted two binary classification experiments using the Reuters-21578 dataset.", "354": "The dataset contains 8000 documents and 15,818 words.", "355": "In these experiments, we estimated the parameters of an LDA model on all the documents, without reference to their true class label.", "356": "We then trained a support vector machine (SVM) on the low-dimensional representations provided by LDA and compared this SVM to an SVM trained on all the word features.", "357": "Using the SVMLight software package (Joachims, 1999), we compared an SVM trained on all the word features with those trained on features induced by a 50-topic LDA model.", "358": "Note that we reduce the feature space by 99.6 percent in this case.", "359": "Figure 10 shows our results.", "360": "We see that there is little reduction in classification performance in using the LDA-based features; indeed, in almost all cases the performance is improved with the LDA features.", "361": "Although these results need further substantiation, they suggest that the topic-based representation provided by LDA may be useful as a fast filtering algorithm for feature selection in text classification.", "362": "7.3 Collaborative filtering", "363": "Our final experiment uses the EachMovie collaborative filtering data.", "364": "In this data set, a collection of users indicates their preferred movie choices.", "365": "A user and the movies chosen are analogous to a document and the words in the document (respectively).", "366": "The collaborative filtering task is as follows.", "367": "We train a model on a fully observed set of users.", "368": "Then, for each unobserved user, we are shown all but one of the movies preferred by that user and are asked to predict what the held-out movie is.", "369": "The different algorithms are evaluated according to the likelihood they assign to the held-out movie.", "370": "More precisely, define the predictive perplexity on M test users to be:", "371": "We restricted the EachMovie dataset to users that positively rated at least 100 movies (a positive rating is at least four out of five stars).", "372": "We divided this set of users into 3300 training users and 390 testing users.", "373": "Under the mixture of unigrams model, the probability of a movie given a set of observed movies is obtained from the posterior distribution over topics:", "374": "In the pLSI model, the probability of a held-out movie is given by the same equation except that p(z|wobs) is computed by folding in the previously seen movies.", "375": "Finally, in the LDA model, the probability of a held-out movie is given by integrating over the posterior Dirichlet:", "376": "where p(|wobs) is given by the variational inference method described in Section 5.2.", "377": "Note that this quantity is efficient to compute.", "378": "We can interchange the sum and integral sign, and compute a linear combination of k Dirichlet expectations.", "379": "With a vocabulary of 1600 movies, we find the predictive perplexities illustrated in Figure 11.", "380": "Again, the mixture of unigrams model and pLSI are corrected for overfitting, but the best predictive perplexities are obtained by the LDA model.", "381": "8.", "382": "Discussion", "383": "We have described latent Dirichlet allocation, a flexible generative probabilistic model for collec- tions of discrete data.", "384": "LDA is based on a simple exchangeability assumption for the words and topics in a document; it is therefore realized by a straightforward application of de Finettis repre- sentation theorem.", "385": "We can view LDA as a dimensionality reduction technique, in the spirit of LSI, but with proper underlying generative probabilistic semantics that make sense for the type of data that it models.", "386": "Exact inference is intractable for LDA, but any of a large suite of approximate inference algo- rithms can be used for inference and parameter estimation within the LDA framework.", "387": "We have presented a simple convexity-based variational approach for inference, showing that it yields a fast algorithm resulting in reasonable comparative performance in terms of test set likelihood.", "388": "Other approaches that might be considered include Laplace approximation, higher-order variational tech- niques, and Monte Carlo methods.", "389": "In particular, Leisink and Kappen (2002) have presented a general methodology for converting low-order variational lower bounds into higher-order varia- tional bounds.", "390": "It is also possible to achieve higher accuracy by dispensing with the requirement of maintaining a bound, and indeed Minka and Lafferty (2002) have shown that improved inferential accuracy can be obtained for the LDA model via a higher-order variational technique known as ex- pectation propagation.", "391": "Finally, Griffiths and Steyvers (2002) have presented a Markov chain Monte Carlo algorithm for LDA.", "392": "LDA is a simple model, and although we view it as a competitor to methods such as LSI and pLSI in the setting of dimensionality reduction for document collections and other discrete cor- pora, it is also intended to be illustrative of the way in which probabilistic models can be scaled up to provide useful inferential machinery in domains involving multiple levels of structure.", "393": "In- deed, the principal advantages of generative models such as LDA include their modularity and their extensibility.", "394": "As a probabilistic module, LDA can be readily embedded in a more complex model a property that is not possessed by LSI.", "395": "In recent work we have used pairs of LDA modules to model relationships between images and their corresponding descriptive captions (Blei and Jordan, 2002).", "396": "Moreover, there are numerous possible extensions of LDA.", "397": "For example, LDA is readily extended to continuous data or other non-multinomial data.", "398": "As is the case for other mixture models, including finite mixture models and hidden Markov models, the emission probability p(wn |zn) contributes only a likelihood value to the inference procedures for LDA, and other likelihoods are readily substituted in its place.", "399": "In particular, it is straightforward to develop a continuous variant of LDA in which Gaussian observables are used in place of multinomials.", "400": "Another simple extension of LDA comes from allowing mixtures of Dirichlet distributions in the place of the single Dirichlet of LDA.", "401": "This allows a richer structure in the latent topic space and in particular allows a form of document clustering that is different from the clustering that is achieved via shared topics.", "402": "Finally, a variety of extensions of LDA can be considered in which the distributions on the topic variables are elaborated.", "403": "For example, we could arrange the topics in a time series, essentially relaxing the full exchangeability assumption to one of partial exchangeability.", "404": "We could also consider partially exchangeable models in which we condition on exogenous variables; thus, for example, the topic distribution could be conditioned on features such as paragraph or sentence, providing a more powerful text model that makes use of information obtained from a parser."}, "scenes": [["Latent_Dirichlet_allocation"], ["Bayesian_network"], ["Empirical_Bayes_method", "Expectation\u2013maximization_algorithm"], ["Latent_semantic_indexing"], ["Ricardo_Baeza-Yates", "Information_retrieval"], ["Web_search_engine", "Information_retrieval"], ["McGill_University"], ["Latent_semantic_indexing", "Information_retrieval"], ["Latent_semantic_indexing"], ["Latent_semantic_indexing"], ["Latent_semantic_indexing", "Bayesian_inference"], ["Latent_semantic_indexing", "Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Latent_semantic_indexing", "Probabilistic_latent_semantic_analysis"], ["David_Aldous"], ["De_Finetti's_theorem"], ["Latent_Dirichlet_allocation"], ["De_Finetti's_theorem"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Poisson_distribution"], ["Dirichlet_distribution"], ["Volt"], ["Poisson_distribution"], ["Dirichlet_distribution", "Gamma_function"], ["Dirichlet_distribution"], ["Dirichlet_distribution"], ["Bayesian_inference"], ["Morris,_Minnesota", "Empirical_Bayes_method"], ["Empirical_Bayes_method", "Bayesian_inference"], ["Multiplicative_group_of_integers_modulo_n"], ["Multiplicative_group_of_integers_modulo_n"], ["Dirichlet_distribution"], ["Bayesian_inference"], ["Volt"], ["Probabilistic_latent_semantic_analysis"], ["N-gram"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Volt"], ["Volt"], ["Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Probabilistic_latent_semantic_analysis", "Latent_Dirichlet_allocation"], ["Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Statistical_inference"], ["Parameter"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Bayesian_inference"], ["Laplace's_method", "Markov_chain_Monte_Carlo", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Kullback\u2013Leibler_divergence"], ["Kullback\u2013Leibler_divergence"], ["Abramowitz_and_Stegun", "Taylor_series"], ["Dirichlet_distribution"], ["Bayes'_theorem"], ["Dirichlet_distribution"], ["Latent_Dirichlet_allocation"], ["Parameter"], ["Empirical_Bayes_method", "Latent_Dirichlet_allocation", "Bayesian_inference"], ["Empirical_Bayes_method", "Expectation\u2013maximization_algorithm", "Latent_Dirichlet_allocation"], ["Expectation\u2013maximization_algorithm", "Latent_Dirichlet_allocation"], ["Dungeons_&_Dragons"], ["Memphis,_Tennessee"], ["Memphis,_Tennessee", "Hessian_matrix", "Newton's_method", "Dirichlet_distribution"], ["Maximum_likelihood"], ["Additive_smoothing"], ["Dirichlet_distribution"], ["Additive_smoothing"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Empirical_Bayes_method", "Bayesian_inference"], ["Bayesian_inference"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Expectation\u2013maximization_algorithm"], ["Latent_Dirichlet_allocation"], ["Associated_Press"], ["Dirichlet_distribution", "Expectation\u2013maximization_algorithm", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["William_Randolph_Hearst"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Expectation\u2013maximization_algorithm"], ["Expectation\u2013maximization_algorithm"], ["Latent_Dirichlet_allocation"], ["Caenorhabditis_elegans", "Associated_Press"], ["Associated_Press"], ["Probabilistic_latent_semantic_analysis", "Latent_Dirichlet_allocation"], ["Expectation\u2013maximization_algorithm"], ["Probabilistic_latent_semantic_analysis"], ["Naive_Bayes_classifier"], ["Memphis,_Tennessee"], ["Bayesian_inference"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis"], ["Probabilistic_latent_semantic_analysis", "Latent_Dirichlet_allocation"], ["Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Document_classification"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Support_vector_machine", "Latent_Dirichlet_allocation"], ["Support_vector_machine", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Probabilistic_latent_semantic_analysis", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Latent_semantic_indexing", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Pierre-Simon_Laplace", "Monte_Carlo_method"], ["Latent_Dirichlet_allocation"], ["Markov_chain_Monte_Carlo"], ["Latent_semantic_indexing", "Probabilistic_latent_semantic_analysis"], ["Latent_Dirichlet_allocation"], ["Latent_semantic_indexing", "Latent_Dirichlet_allocation"], ["Jordan", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Hidden_Markov_model", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Latent_Dirichlet_allocation"]], "chapters": [{"text": "1.", "sentence_id": "s_7", "sentence_rank": "7", "paragraph_id": "p_2", "paragraph_rank": 2}, {"text": "2.", "sentence_id": "s_54", "sentence_rank": "54", "paragraph_id": "p_15", "paragraph_rank": 15}, {"text": "3.", "sentence_id": "s_71", "sentence_rank": "71", "paragraph_id": "p_23", "paragraph_rank": 23}, {"text": "3.1 LDA and exchangeability", "sentence_id": "s_109", "sentence_rank": "109", "paragraph_id": "p_38", "paragraph_rank": 38}, {"text": "3.2 A continuous mixture of unigrams", "sentence_id": "s_118", "sentence_rank": "118", "paragraph_id": "p_43", "paragraph_rank": 43}, {"text": "4.", "sentence_id": "s_133", "sentence_rank": "133", "paragraph_id": "p_53", "paragraph_rank": 53}, {"text": "4.1 Unigram model", "sentence_id": "s_137", "sentence_rank": "137", "paragraph_id": "p_55", "paragraph_rank": 55}, {"text": "4.2 Mixture of unigrams", "sentence_id": "s_139", "sentence_rank": "139", "paragraph_id": "p_57", "paragraph_rank": 57}, {"text": "4.3 Probabilistic latent semantic indexing", "sentence_id": "s_149", "sentence_rank": "149", "paragraph_id": "p_63", "paragraph_rank": 63}, {"text": "4.4 A geometric interpretation", "sentence_id": "s_168", "sentence_rank": "168", "paragraph_id": "p_69", "paragraph_rank": 69}, {"text": "5.", "sentence_id": "s_182", "sentence_rank": "182", "paragraph_id": "p_76", "paragraph_rank": 76}, {"text": "5.1 Inference", "sentence_id": "s_187", "sentence_rank": "187", "paragraph_id": "p_79", "paragraph_rank": 79}, {"text": "5.2 Variational inference", "sentence_id": "s_198", "sentence_rank": "198", "paragraph_id": "p_84", "paragraph_rank": 84}, {"text": "5.3 Parameter estimation", "sentence_id": "s_235", "sentence_rank": "235", "paragraph_id": "p_96", "paragraph_rank": 96}, {"text": "5.4 Smoothing", "sentence_id": "s_252", "sentence_rank": "252", "paragraph_id": "p_105", "paragraph_rank": 105}, {"text": "6.", "sentence_id": "s_275", "sentence_rank": "275", "paragraph_id": "p_113", "paragraph_rank": 113}, {"text": "7.", "sentence_id": "s_293", "sentence_rank": "293", "paragraph_id": "p_121", "paragraph_rank": 121}, {"text": "7.1 Document modeling", "sentence_id": "s_300", "sentence_rank": "300", "paragraph_id": "p_124", "paragraph_rank": 124}, {"text": "7.2 Document classification", "sentence_id": "s_343", "sentence_rank": "343", "paragraph_id": "p_135", "paragraph_rank": 135}, {"text": "7.3 Collaborative filtering", "sentence_id": "s_362", "sentence_rank": "362", "paragraph_id": "p_142", "paragraph_rank": 142}, {"text": "8.", "sentence_id": "s_381", "sentence_rank": "381", "paragraph_id": "p_150", "paragraph_rank": 150}], "all_paragraphs": [{"paragraph_info": {"end": 8, "start": 0, "text": "Abstract", "rank": 0, "paragraph_comparative_number": 1, "entities": [], "id": "p_0"}, "sentences": [{"end": 8, "text": "Abstract", "rank": 0, "start": 0, "IsComparative": "1", "id": "st_0"}]}, {"paragraph_info": {"end": 805, "start": 8, "text": "We describe latent Dirichlet allocation (LDA), a generative probabilistic model for collections of discrete data such as text corpora.LDA is a three-level hierarchical Bayesian model, in which each item of a collection is modeled as a finite mixture over an underlying set of topics.Each topic is, in turn, modeled as an infinite mixture over an underlying set of topic probabilities.In the context of text modeling, the topic probabilities provide an explicit representation of a document.We present efficient approximate inference techniques based on variational methods and an EM algorithm for empirical Bayes parameter estimation.We report results in document modeling, text classification, and collaborative filtering, comparing to a mixture of unigrams model and the probabilistic LSI model.", "rank": 1, "paragraph_comparative_number": 2, "entities": [], "id": "p_1"}, "sentences": [{"end": 142, "text": "We describe latent Dirichlet allocation (LDA), a generative probabilistic model for collections of discrete data such as text corpora.", "rank": 1, "start": 8, "IsComparative": "0", "id": "st_1"}, {"end": 291, "text": "LDA is a three-level hierarchical Bayesian model, in which each item of a collection is modeled as a finite mixture over an underlying set of topics.", "rank": 2, "start": 142, "IsComparative": "0", "id": "st_2"}, {"end": 392, "text": "Each topic is, in turn, modeled as an infinite mixture over an underlying set of topic probabilities.", "rank": 3, "start": 291, "IsComparative": "0", "id": "st_3"}, {"end": 498, "text": "In the context of text modeling, the topic probabilities provide an explicit representation of a document.", "rank": 4, "start": 392, "IsComparative": "1", "id": "st_4"}, {"end": 642, "text": "We present efficient approximate inference techniques based on variational methods and an EM algorithm for empirical Bayes parameter estimation.", "rank": 5, "start": 498, "IsComparative": "1", "id": "st_5"}, {"end": 805, "text": "We report results in document modeling, text classification, and collaborative filtering, comparing to a mixture of unigrams model and the probabilistic LSI model.", "rank": 6, "start": 642, "IsComparative": "0", "id": "st_6"}]}, {"paragraph_info": {"end": 819, "start": 805, "text": "1.Introduction", "rank": 2, "paragraph_comparative_number": 2, "entities": [], "id": "p_2"}, "sentences": [{"end": 807, "text": "1.", "rank": 7, "start": 805, "IsComparative": "1", "id": "st_7"}, {"end": 819, "text": "Introduction", "rank": 8, "start": 807, "IsComparative": "1", "id": "st_8"}]}, {"paragraph_info": {"end": 1231, "start": 819, "text": "In this paper we consider the problem of modeling text corpora and other collections of discrete data.The goal is to find short descriptions of the members of a collection that enable efficient processing of large collections while preserving the essential statistical relationships that are useful for basic tasks such as classification, novelty detection, summarization, and similarity and relevance judgments.", "rank": 3, "paragraph_comparative_number": 1, "entities": [], "id": "p_3"}, "sentences": [{"end": 921, "text": "In this paper we consider the problem of modeling text corpora and other collections of discrete data.", "rank": 9, "start": 819, "IsComparative": "0", "id": "st_9"}, {"end": 1231, "text": "The goal is to find short descriptions of the members of a collection that enable efficient processing of large collections while preserving the essential statistical relationships that are useful for basic tasks such as classification, novelty detection, summarization, and similarity and relevance judgments.", "rank": 10, "start": 921, "IsComparative": "1", "id": "st_10"}]}, {"paragraph_info": {"end": 2282, "start": 1231, "text": "Significant progress has been made on this problem by researchers in the field of informa- tion retrieval (IR) (Baeza-Yates and Ribeiro-Neto, 1999).The basic methodology proposed by IR researchers for text corporaa methodology successfully deployed in modern Internet search enginesreduces each document in the corpus to a vector of real numbers, each of which repre- sents ratios of counts.In the popular tf-idf scheme (Salton and McGill, 1983), a basic vocabulary of words or terms is chosen, and, for each document in the corpus, a count is formed of the number of occurrences of each word.After suitable normalization, this term frequency count is compared to an inverse document frequency count, which measures the number of occurrences of a word in the entire corpus (generally on a log scale, and again suitably normalized).The end result is a term-by-document matrix X whose columns contain the tf-idf values for each of the documents in the corpus.Thus the tf-idf scheme reduces documents of arbitrary length to fixed-length lists of numbers.", "rank": 4, "paragraph_comparative_number": 1, "entities": [], "id": "p_4"}, "sentences": [{"end": 1379, "text": "Significant progress has been made on this problem by researchers in the field of informa- tion retrieval (IR) (Baeza-Yates and Ribeiro-Neto, 1999).", "rank": 11, "start": 1231, "IsComparative": "0", "id": "st_11"}, {"end": 1622, "text": "The basic methodology proposed by IR researchers for text corporaa methodology successfully deployed in modern Internet search enginesreduces each document in the corpus to a vector of real numbers, each of which repre- sents ratios of counts.", "rank": 12, "start": 1379, "IsComparative": "1", "id": "st_12"}, {"end": 1824, "text": "In the popular tf-idf scheme (Salton and McGill, 1983), a basic vocabulary of words or terms is chosen, and, for each document in the corpus, a count is formed of the number of occurrences of each word.", "rank": 13, "start": 1622, "IsComparative": "0", "id": "st_13"}, {"end": 2062, "text": "After suitable normalization, this term frequency count is compared to an inverse document frequency count, which measures the number of occurrences of a word in the entire corpus (generally on a log scale, and again suitably normalized).", "rank": 14, "start": 1824, "IsComparative": "0", "id": "st_14"}, {"end": 2188, "text": "The end result is a term-by-document matrix X whose columns contain the tf-idf values for each of the documents in the corpus.", "rank": 15, "start": 2062, "IsComparative": "0", "id": "st_15"}, {"end": 2282, "text": "Thus the tf-idf scheme reduces documents of arbitrary length to fixed-length lists of numbers.", "rank": 16, "start": 2188, "IsComparative": "0", "id": "st_16"}]}, {"paragraph_info": {"end": 3254, "start": 2282, "text": "While the tf-idf reduction has some appealing featuresnotably in its basic identification of sets of words that are discriminative for documents in the collectionthe approach also provides a rela- tively small amount of reduction in description length and reveals little in the way of inter- or intra- document statistical structure.To address these shortcomings, IR researchers have proposed several other dimensionality reduction techniques, most notably latent semantic indexing (LSI) (Deerwester et al., 1990).LSI uses a singular value decomposition of the X matrix to identify a linear subspace in the space of tf-idf features that captures most of the variance in the collection.This approach can achieve significant compression in large collections.Furthermore, Deerwester et al.argue that the derived features of LSI, which are linear combinations of the original tf-idf features, can capture some aspects of basic linguistic notions such as synonymy and polysemy.", "rank": 5, "paragraph_comparative_number": 3, "entities": [], "id": "p_5"}, "sentences": [{"end": 2615, "text": "While the tf-idf reduction has some appealing featuresnotably in its basic identification of sets of words that are discriminative for documents in the collectionthe approach also provides a rela- tively small amount of reduction in description length and reveals little in the way of inter- or intra- document statistical structure.", "rank": 17, "start": 2282, "IsComparative": "1", "id": "st_17"}, {"end": 2796, "text": "To address these shortcomings, IR researchers have proposed several other dimensionality reduction techniques, most notably latent semantic indexing (LSI) (Deerwester et al., 1990).", "rank": 18, "start": 2615, "IsComparative": "0", "id": "st_18"}, {"end": 2967, "text": "LSI uses a singular value decomposition of the X matrix to identify a linear subspace in the space of tf-idf features that captures most of the variance in the collection.", "rank": 19, "start": 2796, "IsComparative": "1", "id": "st_19"}, {"end": 3038, "text": "This approach can achieve significant compression in large collections.", "rank": 20, "start": 2967, "IsComparative": "1", "id": "st_20"}, {"end": 3068, "text": "Furthermore, Deerwester et al.", "rank": 21, "start": 3038, "IsComparative": "0", "id": "st_21"}, {"end": 3254, "text": "argue that the derived features of LSI, which are linear combinations of the original tf-idf features, can capture some aspects of basic linguistic notions such as synonymy and polysemy.", "rank": 22, "start": 3068, "IsComparative": "0", "id": "st_22"}]}, {"paragraph_info": {"end": 3747, "start": 3254, "text": "To substantiate the claims regarding LSI, and to study its relative strengths and weaknesses, it is useful to develop a generative probabilistic model of text corpora and to study the ability of LSI to recover aspects of the generative model from data (Papadimitriou et al., 1998).Given a generative model of text, however, it is not clear why one should adopt the LSI methodologyone can attempt to proceed more directly, fitting the model to data using maximum likelihood or Bayesian methods.", "rank": 6, "paragraph_comparative_number": 2, "entities": [], "id": "p_6"}, "sentences": [{"end": 3535, "text": "To substantiate the claims regarding LSI, and to study its relative strengths and weaknesses, it is useful to develop a generative probabilistic model of text corpora and to study the ability of LSI to recover aspects of the generative model from data (Papadimitriou et al., 1998).", "rank": 23, "start": 3254, "IsComparative": "1", "id": "st_23"}, {"end": 3747, "text": "Given a generative model of text, however, it is not clear why one should adopt the LSI methodologyone can attempt to proceed more directly, fitting the model to data using maximum likelihood or Bayesian methods.", "rank": 24, "start": 3535, "IsComparative": "1", "id": "st_24"}]}, {"paragraph_info": {"end": 4523, "start": 3747, "text": "A significant step forward in this regard was made by Hofmann (1999), who presented the probabilistic LSI (pLSI) model, also known as the aspect model, as an alternative to LSI.The pLSI approach, which we describe in detail in Section 4.3, models each word in a document as a sample from a mixture model, where the mixture components are multinomial random variables that can be viewed as representations of topics.Thus each word is generated from a single topic, and different words in a document may be generated from different topics.Each document is represented as a list of mixing proportions for these mixture components and thereby reduced to a probability distribution on a fixed set of topics.This distribution is the reduced description associated with the document.", "rank": 7, "paragraph_comparative_number": 0, "entities": [], "id": "p_7"}, "sentences": [{"end": 3924, "text": "A significant step forward in this regard was made by Hofmann (1999), who presented the probabilistic LSI (pLSI) model, also known as the aspect model, as an alternative to LSI.", "rank": 25, "start": 3747, "IsComparative": "0", "id": "st_25"}, {"end": 4162, "text": "The pLSI approach, which we describe in detail in Section 4.3, models each word in a document as a sample from a mixture model, where the mixture components are multinomial random variables that can be viewed as representations of topics.", "rank": 26, "start": 3924, "IsComparative": "0", "id": "st_26"}, {"end": 4284, "text": "Thus each word is generated from a single topic, and different words in a document may be generated from different topics.", "rank": 27, "start": 4162, "IsComparative": "0", "id": "st_27"}, {"end": 4449, "text": "Each document is represented as a list of mixing proportions for these mixture components and thereby reduced to a probability distribution on a fixed set of topics.", "rank": 28, "start": 4284, "IsComparative": "0", "id": "st_28"}, {"end": 4523, "text": "This distribution is the reduced description associated with the document.", "rank": 29, "start": 4449, "IsComparative": "0", "id": "st_29"}]}, {"paragraph_info": {"end": 5108, "start": 4523, "text": "While Hofmanns work is a useful step toward probabilistic modeling of text, it is incomplete in that it provides no probabilistic model at the level of documents.In pLSI, each document is represented as a list of numbers (the mixing proportions for topics), and there is no generative probabilistic model for these numbers.This leads to several problems: (1) the number of parame- ters in the model grows linearly with the size of the corpus, which leads to serious problems with overfitting, and (2) it is not clear how to assign probability to a document outside of the training set.", "rank": 8, "paragraph_comparative_number": 2, "entities": [], "id": "p_8"}, "sentences": [{"end": 4685, "text": "While Hofmanns work is a useful step toward probabilistic modeling of text, it is incomplete in that it provides no probabilistic model at the level of documents.", "rank": 30, "start": 4523, "IsComparative": "1", "id": "st_30"}, {"end": 4846, "text": "In pLSI, each document is represented as a list of numbers (the mixing proportions for topics), and there is no generative probabilistic model for these numbers.", "rank": 31, "start": 4685, "IsComparative": "0", "id": "st_31"}, {"end": 5108, "text": "This leads to several problems: (1) the number of parame- ters in the model grows linearly with the size of the corpus, which leads to serious problems with overfitting, and (2) it is not clear how to assign probability to a document outside of the training set.", "rank": 32, "start": 4846, "IsComparative": "1", "id": "st_32"}]}, {"paragraph_info": {"end": 5703, "start": 5108, "text": "To see how to proceed beyond pLSI, let us consider the fundamental probabilistic assumptions underlying the class of dimensionality reduction methods that includes LSI and pLSI.All of these methods are based on the bag-of-words assumptionthat the order of words in a document can be neglected.In the language of probability theory, this is an assumption of exchangeability for the words in a document (Aldous, 1985).Moreover, although less often stated formally, these methods also assume that documents are exchangeable; the specific ordering of the documents in a corpus can also be neglected.", "rank": 9, "paragraph_comparative_number": 2, "entities": [], "id": "p_9"}, "sentences": [{"end": 5285, "text": "To see how to proceed beyond pLSI, let us consider the fundamental probabilistic assumptions underlying the class of dimensionality reduction methods that includes LSI and pLSI.", "rank": 33, "start": 5108, "IsComparative": "1", "id": "st_33"}, {"end": 5401, "text": "All of these methods are based on the bag-of-words assumptionthat the order of words in a document can be neglected.", "rank": 34, "start": 5285, "IsComparative": "0", "id": "st_34"}, {"end": 5524, "text": "In the language of probability theory, this is an assumption of exchangeability for the words in a document (Aldous, 1985).", "rank": 35, "start": 5401, "IsComparative": "1", "id": "st_35"}, {"end": 5703, "text": "Moreover, although less often stated formally, these methods also assume that documents are exchangeable; the specific ordering of the documents in a corpus can also be neglected.", "rank": 36, "start": 5524, "IsComparative": "0", "id": "st_36"}]}, {"paragraph_info": {"end": 6084, "start": 5703, "text": "A classic representation theorem due to de Finetti (1990) establishes that any collection of ex- changeable random variables has a representation as a mixture distributionin general an infinite mixture.Thus, if we wish to consider exchangeable representations for documents and words, we need to consider mixture models that capture the exchangeability of both words and documents.", "rank": 10, "paragraph_comparative_number": 2, "entities": [], "id": "p_10"}, "sentences": [{"end": 5905, "text": "A classic representation theorem due to de Finetti (1990) establishes that any collection of ex- changeable random variables has a representation as a mixture distributionin general an infinite mixture.", "rank": 37, "start": 5703, "IsComparative": "1", "id": "st_37"}, {"end": 6084, "text": "Thus, if we wish to consider exchangeable representations for documents and words, we need to consider mixture models that capture the exchangeability of both words and documents.", "rank": 38, "start": 5905, "IsComparative": "1", "id": "st_38"}]}, {"paragraph_info": {"end": 6196, "start": 6084, "text": "This line of thinking leads to the latent Dirichlet allocation (LDA) model that we present in the current paper.", "rank": 11, "paragraph_comparative_number": 1, "entities": [], "id": "p_11"}, "sentences": [{"end": 6196, "text": "This line of thinking leads to the latent Dirichlet allocation (LDA) model that we present in the current paper.", "rank": 39, "start": 6084, "IsComparative": "1", "id": "st_39"}]}, {"paragraph_info": {"end": 7306, "start": 6196, "text": "It is important to emphasize that an assumption of exchangeability is not equivalent to an as- sumption that the random variables are independent and identically distributed.Rather, exchange- ability essentially can be interpreted as meaning conditionally independent and identically dis- tributed, where the conditioning is with respect to an underlying latent parameter of a probability distribution.Conditionally, the joint distribution of the random variables is simple and factored while marginally over the latent parameter, the joint distribution can be quite complex.Thus, while an assumption of exchangeability is clearly a major simplifying assumption in the domain of text modeling, and its principal justification is that it leads to methods that are computationally efficient, the exchangeability assumptions do not necessarily lead to methods that are restricted to simple frequency counts or linear operations.We aim to demonstrate in the current paper that, by taking the de Finetti theorem seriously, we can capture significant intra-document statistical structure via the mixing distribution.", "rank": 12, "paragraph_comparative_number": 4, "entities": [], "id": "p_12"}, "sentences": [{"end": 6370, "text": "It is important to emphasize that an assumption of exchangeability is not equivalent to an as- sumption that the random variables are independent and identically distributed.", "rank": 40, "start": 6196, "IsComparative": "1", "id": "st_40"}, {"end": 6598, "text": "Rather, exchange- ability essentially can be interpreted as meaning conditionally independent and identically dis- tributed, where the conditioning is with respect to an underlying latent parameter of a probability distribution.", "rank": 41, "start": 6370, "IsComparative": "0", "id": "st_41"}, {"end": 6771, "text": "Conditionally, the joint distribution of the random variables is simple and factored while marginally over the latent parameter, the joint distribution can be quite complex.", "rank": 42, "start": 6598, "IsComparative": "1", "id": "st_42"}, {"end": 7121, "text": "Thus, while an assumption of exchangeability is clearly a major simplifying assumption in the domain of text modeling, and its principal justification is that it leads to methods that are computationally efficient, the exchangeability assumptions do not necessarily lead to methods that are restricted to simple frequency counts or linear operations.", "rank": 43, "start": 6771, "IsComparative": "1", "id": "st_43"}, {"end": 7306, "text": "We aim to demonstrate in the current paper that, by taking the de Finetti theorem seriously, we can capture significant intra-document statistical structure via the mixing distribution.", "rank": 44, "start": 7121, "IsComparative": "1", "id": "st_44"}]}, {"paragraph_info": {"end": 7852, "start": 7306, "text": "It is also worth noting that there are a large number of generalizations of the basic notion of exchangeability, including various forms of partial exchangeability, and that representation theo- rems are available for these cases as well (Diaconis, 1988).Thus, while the work that we discuss in the current paper focuses on simple bag-of-words models, which lead to mixture distributions for single words (unigrams), our methods are also applicable to richer models that involve mixtures for larger structural units such as n-grams or paragraphs.", "rank": 13, "paragraph_comparative_number": 1, "entities": [], "id": "p_13"}, "sentences": [{"end": 7561, "text": "It is also worth noting that there are a large number of generalizations of the basic notion of exchangeability, including various forms of partial exchangeability, and that representation theo- rems are available for these cases as well (Diaconis, 1988).", "rank": 45, "start": 7306, "IsComparative": "0", "id": "st_45"}, {"end": 7852, "text": "Thus, while the work that we discuss in the current paper focuses on simple bag-of-words models, which lead to mixture distributions for single words (unigrams), our methods are also applicable to richer models that involve mixtures for larger structural units such as n-grams or paragraphs.", "rank": 46, "start": 7561, "IsComparative": "1", "id": "st_46"}]}, {"paragraph_info": {"end": 8340, "start": 7852, "text": "The paper is organized as follows.In Section 2 we introduce basic notation and terminology.The LDA model is presented in Section 3 and is compared to related latent variable models in Section 4.We discuss inference and parameter estimation for LDA in Section 5.An illustrative example of fitting LDA to data is provided in Section 6.Empirical results in text modeling, text classification and collaborative filtering are presented in Section 7.Finally, Section 8 presents our conclusions.", "rank": 14, "paragraph_comparative_number": 1, "entities": [], "id": "p_14"}, "sentences": [{"end": 7886, "text": "The paper is organized as follows.", "rank": 47, "start": 7852, "IsComparative": "0", "id": "st_47"}, {"end": 7943, "text": "In Section 2 we introduce basic notation and terminology.", "rank": 48, "start": 7886, "IsComparative": "0", "id": "st_48"}, {"end": 8046, "text": "The LDA model is presented in Section 3 and is compared to related latent variable models in Section 4.", "rank": 49, "start": 7943, "IsComparative": "0", "id": "st_49"}, {"end": 8113, "text": "We discuss inference and parameter estimation for LDA in Section 5.", "rank": 50, "start": 8046, "IsComparative": "0", "id": "st_50"}, {"end": 8185, "text": "An illustrative example of fitting LDA to data is provided in Section 6.", "rank": 51, "start": 8113, "IsComparative": "0", "id": "st_51"}, {"end": 8296, "text": "Empirical results in text modeling, text classification and collaborative filtering are presented in Section 7.", "rank": 52, "start": 8185, "IsComparative": "0", "id": "st_52"}, {"end": 8340, "text": "Finally, Section 8 presents our conclusions.", "rank": 53, "start": 8296, "IsComparative": "1", "id": "st_53"}]}, {"paragraph_info": {"end": 8366, "start": 8340, "text": "2.Notation and terminology", "rank": 15, "paragraph_comparative_number": 1, "entities": [], "id": "p_15"}, "sentences": [{"end": 8342, "text": "2.", "rank": 54, "start": 8340, "IsComparative": "1", "id": "st_54"}, {"end": 8366, "text": "Notation and terminology", "rank": 55, "start": 8342, "IsComparative": "0", "id": "st_55"}]}, {"paragraph_info": {"end": 9001, "start": 8366, "text": "We use the language of text collections throughout the paper, referring to entities such as words, documents, and corpora.This is useful in that it helps to guide intuition, particularly when we introduce latent variables which aim to capture abstract notions such as topics.It is important to note, however, that the LDA model is not necessarily tied to text, and has applications to other problems involving collections of data, including data from domains such as collaborative filtering, content-based image retrieval and bioinformatics.Indeed, in Section 7.3, we present experimental results in the collaborative filtering domain.", "rank": 16, "paragraph_comparative_number": 2, "entities": [], "id": "p_16"}, "sentences": [{"end": 8488, "text": "We use the language of text collections throughout the paper, referring to entities such as words, documents, and corpora.", "rank": 56, "start": 8366, "IsComparative": "1", "id": "st_56"}, {"end": 8641, "text": "This is useful in that it helps to guide intuition, particularly when we introduce latent variables which aim to capture abstract notions such as topics.", "rank": 57, "start": 8488, "IsComparative": "1", "id": "st_57"}, {"end": 8907, "text": "It is important to note, however, that the LDA model is not necessarily tied to text, and has applications to other problems involving collections of data, including data from domains such as collaborative filtering, content-based image retrieval and bioinformatics.", "rank": 58, "start": 8641, "IsComparative": "0", "id": "st_58"}, {"end": 9001, "text": "Indeed, in Section 7.3, we present experimental results in the collaborative filtering domain.", "rank": 59, "start": 8907, "IsComparative": "0", "id": "st_59"}]}, {"paragraph_info": {"end": 9041, "start": 9001, "text": "Formally, we define the following terms:", "rank": 17, "paragraph_comparative_number": 0, "entities": [], "id": "p_17"}, "sentences": [{"end": 9041, "text": "Formally, we define the following terms:", "rank": 60, "start": 9001, "IsComparative": "0", "id": "st_60"}]}, {"paragraph_info": {"end": 9134, "start": 9041, "text": "A word is the basic unit of discrete data, defined to be an item from a vocabulary indexed by", "rank": 18, "paragraph_comparative_number": 1, "entities": [], "id": "p_18"}, "sentences": [{"end": 9134, "text": "A word is the basic unit of discrete data, defined to be an item from a vocabulary indexed by", "rank": 61, "start": 9041, "IsComparative": "1", "id": "st_61"}]}, {"paragraph_info": {"end": 9418, "start": 9134, "text": "<1, ..., V >.We represent words using unit-basis vectors that have a single component equal to one and all other components equal to zero.Thus, using superscripts to denote components, the vth word in the vocabulary is represented by a V -vector w such that wv = 1 and wu = 0 for u=v.", "rank": 19, "paragraph_comparative_number": 2, "entities": [], "id": "p_19"}, "sentences": [{"end": 9139, "text": "<1, .", "rank": 62, "start": 9134, "IsComparative": "1", "id": "st_62"}, {"end": 9140, "text": ".", "rank": 63, "start": 9139, "IsComparative": "0", "id": "st_63"}, {"end": 9141, "text": ".", "rank": 64, "start": 9140, "IsComparative": "0", "id": "st_64"}, {"end": 9147, "text": ", V >.", "rank": 65, "start": 9141, "IsComparative": "0", "id": "st_65"}, {"end": 9272, "text": "We represent words using unit-basis vectors that have a single component equal to one and all other components equal to zero.", "rank": 66, "start": 9147, "IsComparative": "1", "id": "st_66"}, {"end": 9418, "text": "Thus, using superscripts to denote components, the vth word in the vocabulary is represented by a V -vector w such that wv = 1 and wu = 0 for u=v.", "rank": 67, "start": 9272, "IsComparative": "0", "id": "st_67"}]}, {"paragraph_info": {"end": 9527, "start": 9418, "text": "A document is a sequence of N words denoted by w = (w1,w2,... ,wN), where wn is the nth word in the sequence.", "rank": 20, "paragraph_comparative_number": 0, "entities": [], "id": "p_20"}, "sentences": [{"end": 9527, "text": "A document is a sequence of N words denoted by w = (w1,w2,... ,wN), where wn is the nth word in the sequence.", "rank": 68, "start": 9418, "IsComparative": "0", "id": "st_68"}]}, {"paragraph_info": {"end": 9598, "start": 9527, "text": "A corpus is a collection of M documents denoted by D = <w1,w2,... ,wM>.", "rank": 21, "paragraph_comparative_number": 0, "entities": [], "id": "p_21"}, "sentences": [{"end": 9598, "text": "A corpus is a collection of M documents denoted by D = <w1,w2,... ,wM>.", "rank": 69, "start": 9527, "IsComparative": "0", "id": "st_69"}]}, {"paragraph_info": {"end": 9774, "start": 9598, "text": "We wish to find a probabilistic model of a corpus that not only assigns high probability to members of the corpus, but also assigns high probability to other similar documents.", "rank": 22, "paragraph_comparative_number": 1, "entities": [], "id": "p_22"}, "sentences": [{"end": 9774, "text": "We wish to find a probabilistic model of a corpus that not only assigns high probability to members of the corpus, but also assigns high probability to other similar documents.", "rank": 70, "start": 9598, "IsComparative": "1", "id": "st_70"}]}, {"paragraph_info": {"end": 9803, "start": 9774, "text": "3.Latent Dirichlet allocation", "rank": 23, "paragraph_comparative_number": 2, "entities": [], "id": "p_23"}, "sentences": [{"end": 9776, "text": "3.", "rank": 71, "start": 9774, "IsComparative": "1", "id": "st_71"}, {"end": 9803, "text": "Latent Dirichlet allocation", "rank": 72, "start": 9776, "IsComparative": "1", "id": "st_72"}]}, {"paragraph_info": {"end": 10039, "start": 9803, "text": "Latent Dirichlet allocation (LDA) is a generative probabilistic model of a corpus.The basic idea is that documents are represented as random mixtures over latent topics, where each topic is charac- terized by a distribution over words.1", "rank": 24, "paragraph_comparative_number": 0, "entities": [], "id": "p_24"}, "sentences": [{"end": 9885, "text": "Latent Dirichlet allocation (LDA) is a generative probabilistic model of a corpus.", "rank": 73, "start": 9803, "IsComparative": "0", "id": "st_73"}, {"end": 10039, "text": "The basic idea is that documents are represented as random mixtures over latent topics, where each topic is charac- terized by a distribution over words.1", "rank": 74, "start": 9885, "IsComparative": "0", "id": "st_74"}]}, {"paragraph_info": {"end": 10118, "start": 10039, "text": "LDA assumes the following generative process for each document w in a corpus D:", "rank": 25, "paragraph_comparative_number": 0, "entities": [], "id": "p_25"}, "sentences": [{"end": 10118, "text": "LDA assumes the following generative process for each document w in a corpus D:", "rank": 75, "start": 10039, "IsComparative": "0", "id": "st_75"}]}, {"paragraph_info": {"end": 10140, "start": 10118, "text": "1.Choose N  Poisson().", "rank": 26, "paragraph_comparative_number": 1, "entities": [], "id": "p_26"}, "sentences": [{"end": 10120, "text": "1.", "rank": 76, "start": 10118, "IsComparative": "1", "id": "st_76"}, {"end": 10140, "text": "Choose N  Poisson().", "rank": 77, "start": 10120, "IsComparative": "0", "id": "st_77"}]}, {"paragraph_info": {"end": 10154, "start": 10140, "text": "2.ChooseDir().", "rank": 27, "paragraph_comparative_number": 1, "entities": [], "id": "p_27"}, "sentences": [{"end": 10142, "text": "2.", "rank": 78, "start": 10140, "IsComparative": "1", "id": "st_78"}, {"end": 10154, "text": "ChooseDir().", "rank": 79, "start": 10142, "IsComparative": "0", "id": "st_79"}]}, {"paragraph_info": {"end": 10183, "start": 10154, "text": "3.For each of the N words wn:", "rank": 28, "paragraph_comparative_number": 1, "entities": [], "id": "p_28"}, "sentences": [{"end": 10156, "text": "3.", "rank": 80, "start": 10154, "IsComparative": "1", "id": "st_80"}, {"end": 10183, "text": "For each of the N words wn:", "rank": 81, "start": 10156, "IsComparative": "0", "id": "st_81"}]}, {"paragraph_info": {"end": 10220, "start": 10183, "text": "(a) Choose a topic zn  Multinomial().", "rank": 29, "paragraph_comparative_number": 0, "entities": [], "id": "p_29"}, "sentences": [{"end": 10220, "text": "(a) Choose a topic zn  Multinomial().", "rank": 82, "start": 10183, "IsComparative": "0", "id": "st_82"}]}, {"paragraph_info": {"end": 10308, "start": 10220, "text": "(b) Choose a word wn from p(wn |zn,), a multinomial probability conditioned on the topic", "rank": 30, "paragraph_comparative_number": 0, "entities": [], "id": "p_30"}, "sentences": [{"end": 10308, "text": "(b) Choose a word wn from p(wn |zn,), a multinomial probability conditioned on the topic", "rank": 83, "start": 10220, "IsComparative": "0", "id": "st_83"}]}, {"paragraph_info": {"end": 11063, "start": 10308, "text": "Several simplifying assumptions are made in this basic model, some of which we remove in subsequent sections.First, the dimensionality k of the Dirichlet distribution (and thus the dimensionality of the topic variable z) is assumed known and fixed.Second, the word probabilities are parameter- ized by a kV matrix  where  = p(wj = 1|zi = 1), which for now we treat as a fixed quantity ij that is to be estimated.Finally, the Poisson assumption is not critical to anything that follows and more realistic document length distributions can be used as needed.Furthermore, note that N is independent of all the other data generating variables ( and z).It is thus an ancillary variable and we will generally ignore its randomness in the subsequent development.", "rank": 31, "paragraph_comparative_number": 2, "entities": [], "id": "p_31"}, "sentences": [{"end": 10417, "text": "Several simplifying assumptions are made in this basic model, some of which we remove in subsequent sections.", "rank": 84, "start": 10308, "IsComparative": "0", "id": "st_84"}, {"end": 10556, "text": "First, the dimensionality k of the Dirichlet distribution (and thus the dimensionality of the topic variable z) is assumed known and fixed.", "rank": 85, "start": 10417, "IsComparative": "0", "id": "st_85"}, {"end": 10720, "text": "Second, the word probabilities are parameter- ized by a kV matrix  where  = p(wj = 1|zi = 1), which for now we treat as a fixed quantity ij that is to be estimated.", "rank": 86, "start": 10556, "IsComparative": "1", "id": "st_86"}, {"end": 10864, "text": "Finally, the Poisson assumption is not critical to anything that follows and more realistic document length distributions can be used as needed.", "rank": 87, "start": 10720, "IsComparative": "0", "id": "st_87"}, {"end": 10956, "text": "Furthermore, note that N is independent of all the other data generating variables ( and z).", "rank": 88, "start": 10864, "IsComparative": "0", "id": "st_88"}, {"end": 11063, "text": "It is thus an ancillary variable and we will generally ignore its randomness in the subsequent development.", "rank": 89, "start": 10956, "IsComparative": "1", "id": "st_89"}]}, {"paragraph_info": {"end": 11666, "start": 11063, "text": "A k-dimensional Dirichlet random variable  can take values in the (k  1)-simplex (a k-vector  lies in the (k  1)-simplex if i  0, ki=1 i = 1), and has the following probability density on this simplex: where the parameter  is a k-vector with components i > 0, and where (x) is the Gamma function.The Dirichlet is a convenient distribution on the simplex  it is in the exponential family, has finite dimensional sufficient statistics, and is conjugate to the multinomial distribution.In Section 5, these properties will facilitate the development of inference and parameter estimation algorithms for LDA.", "rank": 32, "paragraph_comparative_number": 1, "entities": [], "id": "p_32"}, "sentences": [{"end": 11359, "text": "A k-dimensional Dirichlet random variable  can take values in the (k  1)-simplex (a k-vector  lies in the (k  1)-simplex if i  0, ki=1 i = 1), and has the following probability density on this simplex: where the parameter  is a k-vector with components i > 0, and where (x) is the Gamma function.", "rank": 90, "start": 11063, "IsComparative": "0", "id": "st_90"}, {"end": 11546, "text": "The Dirichlet is a convenient distribution on the simplex  it is in the exponential family, has finite dimensional sufficient statistics, and is conjugate to the multinomial distribution.", "rank": 91, "start": 11359, "IsComparative": "1", "id": "st_91"}, {"end": 11666, "text": "In Section 5, these properties will facilitate the development of inference and parameter estimation algorithms for LDA.", "rank": 92, "start": 11546, "IsComparative": "0", "id": "st_92"}]}, {"paragraph_info": {"end": 11885, "start": 11666, "text": "Given the parameters  and , the joint distribution of a topic mixture , a set of N topics z, and asetofN wordswisgivenby: where p(z | ) is simply  for the unique i such that zi = 1.Integrating over  and summing over nin", "rank": 33, "paragraph_comparative_number": 1, "entities": [], "id": "p_33"}, "sentences": [{"end": 11847, "text": "Given the parameters  and , the joint distribution of a topic mixture , a set of N topics z, and asetofN wordswisgivenby: where p(z | ) is simply  for the unique i such that zi = 1.", "rank": 93, "start": 11666, "IsComparative": "1", "id": "st_93"}, {"end": 11885, "text": "Integrating over  and summing over nin", "rank": 94, "start": 11847, "IsComparative": "0", "id": "st_94"}]}, {"paragraph_info": {"end": 11938, "start": 11885, "text": "z, we obtain the marginal distribution of a document:", "rank": 34, "paragraph_comparative_number": 1, "entities": [], "id": "p_34"}, "sentences": [{"end": 11938, "text": "z, we obtain the marginal distribution of a document:", "rank": 95, "start": 11885, "IsComparative": "1", "id": "st_95"}]}, {"paragraph_info": {"end": 12390, "start": 11938, "text": "The LDA model is represented as a probabilistic graphical model in Figure 1.As the figure makes clear, there are three levels to the LDA representation.The parameters  and  are corpus- level parameters, assumed to be sampled once in the process of generating a corpus.The variables d are document-level variables, sampled once per document.Finally, the variables zdn and wdn are word-level variables and are sampled once for each word in each document.", "rank": 35, "paragraph_comparative_number": 3, "entities": [], "id": "p_35"}, "sentences": [{"end": 12014, "text": "The LDA model is represented as a probabilistic graphical model in Figure 1.", "rank": 96, "start": 11938, "IsComparative": "0", "id": "st_96"}, {"end": 12090, "text": "As the figure makes clear, there are three levels to the LDA representation.", "rank": 97, "start": 12014, "IsComparative": "1", "id": "st_97"}, {"end": 12206, "text": "The parameters  and  are corpus- level parameters, assumed to be sampled once in the process of generating a corpus.", "rank": 98, "start": 12090, "IsComparative": "1", "id": "st_98"}, {"end": 12278, "text": "The variables d are document-level variables, sampled once per document.", "rank": 99, "start": 12206, "IsComparative": "0", "id": "st_99"}, {"end": 12390, "text": "Finally, the variables zdn and wdn are word-level variables and are sampled once for each word in each document.", "rank": 100, "start": 12278, "IsComparative": "1", "id": "st_100"}]}, {"paragraph_info": {"end": 13048, "start": 12390, "text": "It is important to distinguish LDA from a simple Dirichlet-multinomial clustering model.A classical clustering model would involve a two-level model in which a Dirichlet is sampled once for a corpus, a multinomial clustering variable is selected once for each document in the corpus, and a set of words are selected for the document conditional on the cluster variable.As with many clustering models, such a model restricts a document to being associated with a single topic.LDA, on the other hand, involves three levels, and notably the topic node is sampled repeatedly within the document.Under this model, documents can be associated with multiple topics.", "rank": 36, "paragraph_comparative_number": 1, "entities": [], "id": "p_36"}, "sentences": [{"end": 12478, "text": "It is important to distinguish LDA from a simple Dirichlet-multinomial clustering model.", "rank": 101, "start": 12390, "IsComparative": "0", "id": "st_101"}, {"end": 12759, "text": "A classical clustering model would involve a two-level model in which a Dirichlet is sampled once for a corpus, a multinomial clustering variable is selected once for each document in the corpus, and a set of words are selected for the document conditional on the cluster variable.", "rank": 102, "start": 12478, "IsComparative": "0", "id": "st_102"}, {"end": 12865, "text": "As with many clustering models, such a model restricts a document to being associated with a single topic.", "rank": 103, "start": 12759, "IsComparative": "0", "id": "st_103"}, {"end": 12981, "text": "LDA, on the other hand, involves three levels, and notably the topic node is sampled repeatedly within the document.", "rank": 104, "start": 12865, "IsComparative": "1", "id": "st_104"}, {"end": 13048, "text": "Under this model, documents can be associated with multiple topics.", "rank": 105, "start": 12981, "IsComparative": "0", "id": "st_105"}]}, {"paragraph_info": {"end": 13738, "start": 13048, "text": "Structures similar to that shown in Figure 1 are often studied in Bayesian statistical modeling, where they are referred to as hierarchical models (Gelman et al., 1995), or more precisely as con- ditionally independent hierarchical models (Kass and Steffey, 1989).Such models are also often referred to as parametric empirical Bayes models, a term that refers not only to a particular model structure, but also to the methods used for estimating parameters in the model (Morris, 1983).In- deed, as we discuss in Section 5, we adopt the empirical Bayes approach to estimating parameters such as  and  in simple implementations of LDA, but we also consider fuller Bayesian approaches as well.", "rank": 37, "paragraph_comparative_number": 1, "entities": [], "id": "p_37"}, "sentences": [{"end": 13312, "text": "Structures similar to that shown in Figure 1 are often studied in Bayesian statistical modeling, where they are referred to as hierarchical models (Gelman et al., 1995), or more precisely as con- ditionally independent hierarchical models (Kass and Steffey, 1989).", "rank": 106, "start": 13048, "IsComparative": "0", "id": "st_106"}, {"end": 13533, "text": "Such models are also often referred to as parametric empirical Bayes models, a term that refers not only to a particular model structure, but also to the methods used for estimating parameters in the model (Morris, 1983).", "rank": 107, "start": 13312, "IsComparative": "1", "id": "st_107"}, {"end": 13738, "text": "In- deed, as we discuss in Section 5, we adopt the empirical Bayes approach to estimating parameters such as  and  in simple implementations of LDA, but we also consider fuller Bayesian approaches as well.", "rank": 108, "start": 13533, "IsComparative": "0", "id": "st_108"}]}, {"paragraph_info": {"end": 13765, "start": 13738, "text": "3.1 LDA and exchangeability", "rank": 38, "paragraph_comparative_number": 0, "entities": [], "id": "p_38"}, "sentences": [{"end": 13765, "text": "3.1 LDA and exchangeability", "rank": 109, "start": 13738, "IsComparative": "0", "id": "st_109"}]}, {"paragraph_info": {"end": 13975, "start": 13765, "text": "A finite set of random variables <z1,...,zN> is said to be exchangeable if the joint distribution is invariant to permutation.If  is a permutation of the integers from 1 to N: p(z1,... ,zN) = p(z(1),... ,z(N)).", "rank": 39, "paragraph_comparative_number": 2, "entities": [], "id": "p_39"}, "sentences": [{"end": 13891, "text": "A finite set of random variables <z1,...,zN> is said to be exchangeable if the joint distribution is invariant to permutation.", "rank": 110, "start": 13765, "IsComparative": "1", "id": "st_110"}, {"end": 13975, "text": "If  is a permutation of the integers from 1 to N: p(z1,... ,zN) = p(z(1),... ,z(N)).", "rank": 111, "start": 13891, "IsComparative": "1", "id": "st_111"}]}, {"paragraph_info": {"end": 14087, "start": 13975, "text": "An infinite sequence of random variables is infinitely exchangeable if every finite subsequence is exchangeable.", "rank": 40, "paragraph_comparative_number": 1, "entities": [], "id": "p_40"}, "sentences": [{"end": 14087, "text": "An infinite sequence of random variables is infinitely exchangeable if every finite subsequence is exchangeable.", "rank": 112, "start": 13975, "IsComparative": "1", "id": "st_112"}]}, {"paragraph_info": {"end": 14396, "start": 14087, "text": "De Finettis representation theorem states that the joint distribution of an infinitely exchangeable sequence of random variables is as if a random parameter were drawn from some distribution and then the random variables in question were independent and identically distributed, conditioned on that parameter.", "rank": 41, "paragraph_comparative_number": 0, "entities": [], "id": "p_41"}, "sentences": [{"end": 14396, "text": "De Finettis representation theorem states that the joint distribution of an infinitely exchangeable sequence of random variables is as if a random parameter were drawn from some distribution and then the random variables in question were independent and identically distributed, conditioned on that parameter.", "rank": 113, "start": 14087, "IsComparative": "0", "id": "st_113"}]}, {"paragraph_info": {"end": 14859, "start": 14396, "text": "In LDA, we assume that words are generated by topics (by fixed conditional distributions) and that those topics are infinitely exchangeable within a document.By de Finettis theorem, the prob- ability of a sequence of words and topics must therefore have the form: where  is the random parameter of a multinomial over topics.We obtain the LDA distribution on documents in Eq.(3) by marginalizing out the topic variables and endowing  with a Dirichlet distribution.", "rank": 42, "paragraph_comparative_number": 2, "entities": [], "id": "p_42"}, "sentences": [{"end": 14554, "text": "In LDA, we assume that words are generated by topics (by fixed conditional distributions) and that those topics are infinitely exchangeable within a document.", "rank": 114, "start": 14396, "IsComparative": "0", "id": "st_114"}, {"end": 14720, "text": "By de Finettis theorem, the prob- ability of a sequence of words and topics must therefore have the form: where  is the random parameter of a multinomial over topics.", "rank": 115, "start": 14554, "IsComparative": "1", "id": "st_115"}, {"end": 14770, "text": "We obtain the LDA distribution on documents in Eq.", "rank": 116, "start": 14720, "IsComparative": "0", "id": "st_116"}, {"end": 14859, "text": "(3) by marginalizing out the topic variables and endowing  with a Dirichlet distribution.", "rank": 117, "start": 14770, "IsComparative": "1", "id": "st_117"}]}, {"paragraph_info": {"end": 14895, "start": 14859, "text": "3.2 A continuous mixture of unigrams", "rank": 43, "paragraph_comparative_number": 0, "entities": [], "id": "p_43"}, "sentences": [{"end": 14895, "text": "3.2 A continuous mixture of unigrams", "rank": 118, "start": 14859, "IsComparative": "0", "id": "st_118"}]}, {"paragraph_info": {"end": 15147, "start": 14895, "text": "The LDA model shown in Figure 1 is somewhat more elaborate than the two-level models often studied in the classical hierarchical Bayesian literature.By marginalizing over the hidden topic variable z, however, we can understand LDA as a two-level model.", "rank": 44, "paragraph_comparative_number": 0, "entities": [], "id": "p_44"}, "sentences": [{"end": 15044, "text": "The LDA model shown in Figure 1 is somewhat more elaborate than the two-level models often studied in the classical hierarchical Bayesian literature.", "rank": 119, "start": 14895, "IsComparative": "0", "id": "st_119"}, {"end": 15147, "text": "By marginalizing over the hidden topic variable z, however, we can understand LDA as a two-level model.", "rank": 120, "start": 15044, "IsComparative": "0", "id": "st_120"}]}, {"paragraph_info": {"end": 15226, "start": 15147, "text": "In particular, let us form the word distribution p(w|,): p(w|,) = p(w|z,)p(z|).", "rank": 45, "paragraph_comparative_number": 0, "entities": [], "id": "p_45"}, "sentences": [{"end": 15226, "text": "In particular, let us form the word distribution p(w|,): p(w|,) = p(w|z,)p(z|).", "rank": 121, "start": 15147, "IsComparative": "0", "id": "st_121"}]}, {"paragraph_info": {"end": 15283, "start": 15226, "text": "Note that this is a random quantity since it depends on .", "rank": 46, "paragraph_comparative_number": 1, "entities": [], "id": "p_46"}, "sentences": [{"end": 15283, "text": "Note that this is a random quantity since it depends on .", "rank": 122, "start": 15226, "IsComparative": "1", "id": "st_122"}]}, {"paragraph_info": {"end": 15347, "start": 15283, "text": "We now define the following generative process for a document w:", "rank": 47, "paragraph_comparative_number": 0, "entities": [], "id": "p_47"}, "sentences": [{"end": 15347, "text": "We now define the following generative process for a document w:", "rank": 123, "start": 15283, "IsComparative": "0", "id": "st_123"}]}, {"paragraph_info": {"end": 15361, "start": 15347, "text": "1.ChooseDir().", "rank": 48, "paragraph_comparative_number": 1, "entities": [], "id": "p_48"}, "sentences": [{"end": 15349, "text": "1.", "rank": 124, "start": 15347, "IsComparative": "1", "id": "st_124"}, {"end": 15361, "text": "ChooseDir().", "rank": 125, "start": 15349, "IsComparative": "0", "id": "st_125"}]}, {"paragraph_info": {"end": 15390, "start": 15361, "text": "2.For each of the N words wn:", "rank": 49, "paragraph_comparative_number": 1, "entities": [], "id": "p_49"}, "sentences": [{"end": 15363, "text": "2.", "rank": 126, "start": 15361, "IsComparative": "1", "id": "st_126"}, {"end": 15390, "text": "For each of the N words wn:", "rank": 127, "start": 15363, "IsComparative": "0", "id": "st_127"}]}, {"paragraph_info": {"end": 15427, "start": 15390, "text": "(a) Choose a word wn from p(wn | , ).", "rank": 50, "paragraph_comparative_number": 0, "entities": [], "id": "p_50"}, "sentences": [{"end": 15427, "text": "(a) Choose a word wn from p(wn | , ).", "rank": 128, "start": 15390, "IsComparative": "0", "id": "st_128"}]}, {"paragraph_info": {"end": 15605, "start": 15427, "text": "This process defines the marginal distribution of a document as a continuous mixture distribution: where p(wn | , ) are the mixture components and p( | ) are the mixture weights.", "rank": 51, "paragraph_comparative_number": 1, "entities": [], "id": "p_51"}, "sentences": [{"end": 15605, "text": "This process defines the marginal distribution of a document as a continuous mixture distribution: where p(wn | , ) are the mixture components and p( | ) are the mixture weights.", "rank": 129, "start": 15427, "IsComparative": "1", "id": "st_129"}]}, {"paragraph_info": {"end": 15895, "start": 15605, "text": "Figure 2 illustrates this interpretation of LDA.It depicts the distribution on p(w|,) which is induced from a particular instance of an LDA model.Note that this distribution on the (V  1)- simplex is attained with only k + kV parameters yet exhibits a very interesting multimodal structure.", "rank": 52, "paragraph_comparative_number": 0, "entities": [], "id": "p_52"}, "sentences": [{"end": 15653, "text": "Figure 2 illustrates this interpretation of LDA.", "rank": 130, "start": 15605, "IsComparative": "0", "id": "st_130"}, {"end": 15751, "text": "It depicts the distribution on p(w|,) which is induced from a particular instance of an LDA model.", "rank": 131, "start": 15653, "IsComparative": "0", "id": "st_131"}, {"end": 15895, "text": "Note that this distribution on the (V  1)- simplex is attained with only k + kV parameters yet exhibits a very interesting multimodal structure.", "rank": 132, "start": 15751, "IsComparative": "0", "id": "st_132"}]}, {"paragraph_info": {"end": 15943, "start": 15895, "text": "4.Relationship with other latent variable models", "rank": 53, "paragraph_comparative_number": 1, "entities": [], "id": "p_53"}, "sentences": [{"end": 15897, "text": "4.", "rank": 133, "start": 15895, "IsComparative": "1", "id": "st_133"}, {"end": 15943, "text": "Relationship with other latent variable models", "rank": 134, "start": 15897, "IsComparative": "0", "id": "st_134"}]}, {"paragraph_info": {"end": 16210, "start": 15943, "text": "In this section we compare LDA to simpler latent variable models for textthe unigram model, a mixture of unigrams, and the pLSI model.Furthermore, we present a unified geometric interpreta- tion of these models which highlights their key differences and similarities.", "rank": 54, "paragraph_comparative_number": 1, "entities": [], "id": "p_54"}, "sentences": [{"end": 16077, "text": "In this section we compare LDA to simpler latent variable models for textthe unigram model, a mixture of unigrams, and the pLSI model.", "rank": 135, "start": 15943, "IsComparative": "0", "id": "st_135"}, {"end": 16210, "text": "Furthermore, we present a unified geometric interpreta- tion of these models which highlights their key differences and similarities.", "rank": 136, "start": 16077, "IsComparative": "1", "id": "st_136"}]}, {"paragraph_info": {"end": 16227, "start": 16210, "text": "4.1 Unigram model", "rank": 55, "paragraph_comparative_number": 0, "entities": [], "id": "p_55"}, "sentences": [{"end": 16227, "text": "4.1 Unigram model", "rank": 137, "start": 16210, "IsComparative": "0", "id": "st_137"}]}, {"paragraph_info": {"end": 16343, "start": 16227, "text": "Under the unigram model, the words of every document are drawn independently from a single multinomial distribution:", "rank": 56, "paragraph_comparative_number": 0, "entities": [], "id": "p_56"}, "sentences": [{"end": 16343, "text": "Under the unigram model, the words of every document are drawn independently from a single multinomial distribution:", "rank": 138, "start": 16227, "IsComparative": "0", "id": "st_138"}]}, {"paragraph_info": {"end": 16366, "start": 16343, "text": "4.2 Mixture of unigrams", "rank": 57, "paragraph_comparative_number": 0, "entities": [], "id": "p_57"}, "sentences": [{"end": 16366, "text": "4.2 Mixture of unigrams", "rank": 139, "start": 16343, "IsComparative": "0", "id": "st_139"}]}, {"paragraph_info": {"end": 16708, "start": 16366, "text": "If we augment the unigram model with a discrete random topic variable z (Figure 3b), we obtain a mixture of unigrams model (Nigam et al., 2000).Under this mixture model, each document is gen- erated by first choosing a topic z and then generating N words independently from the conditional multinomial p(w|z).The probability of a document is:", "rank": 58, "paragraph_comparative_number": 0, "entities": [], "id": "p_58"}, "sentences": [{"end": 16510, "text": "If we augment the unigram model with a discrete random topic variable z (Figure 3b), we obtain a mixture of unigrams model (Nigam et al., 2000).", "rank": 140, "start": 16366, "IsComparative": "0", "id": "st_140"}, {"end": 16675, "text": "Under this mixture model, each document is gen- erated by first choosing a topic z and then generating N words independently from the conditional multinomial p(w|z).", "rank": 141, "start": 16510, "IsComparative": "0", "id": "st_141"}, {"end": 16708, "text": "The probability of a document is:", "rank": 142, "start": 16675, "IsComparative": "0", "id": "st_142"}]}, {"paragraph_info": {"end": 16727, "start": 16708, "text": "N p(w)=p(z)p(wn|z).", "rank": 59, "paragraph_comparative_number": 0, "entities": [], "id": "p_59"}, "sentences": [{"end": 16727, "text": "N p(w)=p(z)p(wn|z).", "rank": 143, "start": 16708, "IsComparative": "0", "id": "st_143"}]}, {"paragraph_info": {"end": 16732, "start": 16727, "text": "z n=1", "rank": 60, "paragraph_comparative_number": 0, "entities": [], "id": "p_60"}, "sentences": [{"end": 16732, "text": "z n=1", "rank": 144, "start": 16727, "IsComparative": "0", "id": "st_144"}]}, {"paragraph_info": {"end": 17036, "start": 16732, "text": "When estimated from a corpus, the word distributions can be viewed as representations of topics under the assumption that each document exhibits exactly one topic.As the empirical results in Section 7 illustrate, this assumption is often too limiting to effectively model a large collection of documents.", "rank": 61, "paragraph_comparative_number": 0, "entities": [], "id": "p_61"}, "sentences": [{"end": 16895, "text": "When estimated from a corpus, the word distributions can be viewed as representations of topics under the assumption that each document exhibits exactly one topic.", "rank": 145, "start": 16732, "IsComparative": "0", "id": "st_145"}, {"end": 17036, "text": "As the empirical results in Section 7 illustrate, this assumption is often too limiting to effectively model a large collection of documents.", "rank": 146, "start": 16895, "IsComparative": "0", "id": "st_146"}]}, {"paragraph_info": {"end": 17316, "start": 17036, "text": "In contrast, the LDA model allows documents to exhibit multiple topics to different degrees.This is achieved at a cost of just one additional parameter: there are k  1 parameters associated with p(z) in the mixture of unigrams, versus the k parameters associated with p(|) in LDA.", "rank": 62, "paragraph_comparative_number": 1, "entities": [], "id": "p_62"}, "sentences": [{"end": 17128, "text": "In contrast, the LDA model allows documents to exhibit multiple topics to different degrees.", "rank": 147, "start": 17036, "IsComparative": "0", "id": "st_147"}, {"end": 17316, "text": "This is achieved at a cost of just one additional parameter: there are k  1 parameters associated with p(z) in the mixture of unigrams, versus the k parameters associated with p(|) in LDA.", "rank": 148, "start": 17128, "IsComparative": "1", "id": "st_148"}]}, {"paragraph_info": {"end": 17358, "start": 17316, "text": "4.3 Probabilistic latent semantic indexing", "rank": 63, "paragraph_comparative_number": 0, "entities": [], "id": "p_63"}, "sentences": [{"end": 17358, "text": "4.3 Probabilistic latent semantic indexing", "rank": 149, "start": 17316, "IsComparative": "0", "id": "st_149"}]}, {"paragraph_info": {"end": 17548, "start": 17358, "text": "Probabilistic latent semantic indexing (pLSI) is another widely used document model (Hofmann, 1999).The pLSI model, illustrated in Figure 3c, posits that a document label d and a word wn are", "rank": 64, "paragraph_comparative_number": 0, "entities": [], "id": "p_64"}, "sentences": [{"end": 17458, "text": "Probabilistic latent semantic indexing (pLSI) is another widely used document model (Hofmann, 1999).", "rank": 150, "start": 17358, "IsComparative": "0", "id": "st_150"}, {"end": 17548, "text": "The pLSI model, illustrated in Figure 3c, posits that a document label d and a word wn are", "rank": 151, "start": 17458, "IsComparative": "0", "id": "st_151"}]}, {"paragraph_info": {"end": 17658, "start": 17548, "text": "This is illustrated in the graphical model in Figure 3a.conditionally independent given an unobserved topic z:", "rank": 65, "paragraph_comparative_number": 0, "entities": [], "id": "p_65"}, "sentences": [{"end": 17604, "text": "This is illustrated in the graphical model in Figure 3a.", "rank": 152, "start": 17548, "IsComparative": "0", "id": "st_152"}, {"end": 17658, "text": "conditionally independent given an unobserved topic z:", "rank": 153, "start": 17604, "IsComparative": "0", "id": "st_153"}]}, {"paragraph_info": {"end": 18445, "start": 17658, "text": "The pLSI model attempts to relax the simplifying assumption made in the mixture of unigrams model that each document is generated from only one topic.In a sense, it does capture the possibility that a document may contain multiple topics since p(z|d) serves as the mixture weights of the topics for a particular document d.However, it is important to note that d is a dummy index into the list of documents in the training set.Thus, d is a multinomial random variable with as many possible values as there are training documents and the model learns the topic mixtures p(z|d) only for those documents on which it is trained.For this reason, pLSI is not a well-defined generative model of documents; there is no natural way to use it to assign probability to a previously unseen document.", "rank": 66, "paragraph_comparative_number": 4, "entities": [], "id": "p_66"}, "sentences": [{"end": 17808, "text": "The pLSI model attempts to relax the simplifying assumption made in the mixture of unigrams model that each document is generated from only one topic.", "rank": 154, "start": 17658, "IsComparative": "1", "id": "st_154"}, {"end": 17981, "text": "In a sense, it does capture the possibility that a document may contain multiple topics since p(z|d) serves as the mixture weights of the topics for a particular document d.", "rank": 155, "start": 17808, "IsComparative": "1", "id": "st_155"}, {"end": 18085, "text": "However, it is important to note that d is a dummy index into the list of documents in the training set.", "rank": 156, "start": 17981, "IsComparative": "1", "id": "st_156"}, {"end": 18282, "text": "Thus, d is a multinomial random variable with as many possible values as there are training documents and the model learns the topic mixtures p(z|d) only for those documents on which it is trained.", "rank": 157, "start": 18085, "IsComparative": "0", "id": "st_157"}, {"end": 18445, "text": "For this reason, pLSI is not a well-defined generative model of documents; there is no natural way to use it to assign probability to a previously unseen document.", "rank": 158, "start": 18282, "IsComparative": "1", "id": "st_158"}]}, {"paragraph_info": {"end": 19242, "start": 18445, "text": "A further difficulty with pLSI, which also stems from the use of a distribution indexed by train- ing documents, is that the number of parameters which must be estimated grows linearly with the number of training documents.The parameters for a k-topic pLSI model are k multinomial distri- butions of size V and M mixtures over the k hidden topics.This gives kV + kM parameters and therefore linear growth in M. The linear growth in parameters suggests that the model is prone to overfitting and, empirically, overfitting is indeed a serious problem (see Section 7.1).In prac- tice, a tempering heuristic is used to smooth the parameters of the model for acceptable predic- tive performance.It has been shown, however, that overfitting can occur even when tempering is used (Popescul et al., 2001).", "rank": 67, "paragraph_comparative_number": 1, "entities": [], "id": "p_67"}, "sentences": [{"end": 18668, "text": "A further difficulty with pLSI, which also stems from the use of a distribution indexed by train- ing documents, is that the number of parameters which must be estimated grows linearly with the number of training documents.", "rank": 159, "start": 18445, "IsComparative": "1", "id": "st_159"}, {"end": 18792, "text": "The parameters for a k-topic pLSI model are k multinomial distri- butions of size V and M mixtures over the k hidden topics.", "rank": 160, "start": 18668, "IsComparative": "0", "id": "st_160"}, {"end": 19012, "text": "This gives kV + kM parameters and therefore linear growth in M. The linear growth in parameters suggests that the model is prone to overfitting and, empirically, overfitting is indeed a serious problem (see Section 7.1).", "rank": 161, "start": 18792, "IsComparative": "0", "id": "st_161"}, {"end": 19135, "text": "In prac- tice, a tempering heuristic is used to smooth the parameters of the model for acceptable predic- tive performance.", "rank": 162, "start": 19012, "IsComparative": "0", "id": "st_162"}, {"end": 19242, "text": "It has been shown, however, that overfitting can occur even when tempering is used (Popescul et al., 2001).", "rank": 163, "start": 19135, "IsComparative": "0", "id": "st_163"}]}, {"paragraph_info": {"end": 19760, "start": 19242, "text": "LDA overcomes both of these problems by treating the topic mixture weights as a k-parameter hidden random variable rather than a large set of individual parameters which are explicitly linked to the training set.As described in Section 3, LDA is a well-defined generative model and generalizes easily to new documents.Furthermore, the k + kV parameters in a k-topic LDA model do not grow with the size of the training corpus.We will see in Section 7.1 that LDA does not suffer from the same overfitting issues as pLSI.", "rank": 68, "paragraph_comparative_number": 1, "entities": [], "id": "p_68"}, "sentences": [{"end": 19454, "text": "LDA overcomes both of these problems by treating the topic mixture weights as a k-parameter hidden random variable rather than a large set of individual parameters which are explicitly linked to the training set.", "rank": 164, "start": 19242, "IsComparative": "0", "id": "st_164"}, {"end": 19560, "text": "As described in Section 3, LDA is a well-defined generative model and generalizes easily to new documents.", "rank": 165, "start": 19454, "IsComparative": "0", "id": "st_165"}, {"end": 19667, "text": "Furthermore, the k + kV parameters in a k-topic LDA model do not grow with the size of the training corpus.", "rank": 166, "start": 19560, "IsComparative": "1", "id": "st_166"}, {"end": 19760, "text": "We will see in Section 7.1 that LDA does not suffer from the same overfitting issues as pLSI.", "rank": 167, "start": 19667, "IsComparative": "0", "id": "st_167"}]}, {"paragraph_info": {"end": 19790, "start": 19760, "text": "4.4 A geometric interpretation", "rank": 69, "paragraph_comparative_number": 0, "entities": [], "id": "p_69"}, "sentences": [{"end": 19790, "text": "4.4 A geometric interpretation", "rank": 168, "start": 19760, "IsComparative": "0", "id": "st_168"}]}, {"paragraph_info": {"end": 20006, "start": 19790, "text": "A good way of illustrating the differences between LDA and the other latent topic models is by considering the geometry of the latent space, and seeing how a document is represented in that geometry under each model.", "rank": 70, "paragraph_comparative_number": 0, "entities": [], "id": "p_70"}, "sentences": [{"end": 20006, "text": "A good way of illustrating the differences between LDA and the other latent topic models is by considering the geometry of the latent space, and seeing how a document is represented in that geometry under each model.", "rank": 169, "start": 19790, "IsComparative": "0", "id": "st_169"}]}, {"paragraph_info": {"end": 20239, "start": 20006, "text": "All four of the models described aboveunigram, mixture of unigrams, pLSI, and LDA operate in the space of distributions over words.Each such distribution can be viewed as a point on the (V  1)-simplex, which we call the word simplex.", "rank": 71, "paragraph_comparative_number": 0, "entities": [], "id": "p_71"}, "sentences": [{"end": 20137, "text": "All four of the models described aboveunigram, mixture of unigrams, pLSI, and LDA operate in the space of distributions over words.", "rank": 170, "start": 20006, "IsComparative": "0", "id": "st_170"}, {"end": 20239, "text": "Each such distribution can be viewed as a point on the (V  1)-simplex, which we call the word simplex.", "rank": 171, "start": 20137, "IsComparative": "0", "id": "st_171"}]}, {"paragraph_info": {"end": 20699, "start": 20239, "text": "The unigram model finds a single point on the word simplex and posits that all words in the corpus come from the corresponding distribution.The latent variable models consider k points on the word simplex and form a sub-simplex based on those points, which we call the topic simplex.Note that any point on the topic simplex is also a point on the word simplex.The different latent variable models use the topic simplex in different ways to generate a document.", "rank": 72, "paragraph_comparative_number": 0, "entities": [], "id": "p_72"}, "sentences": [{"end": 20379, "text": "The unigram model finds a single point on the word simplex and posits that all words in the corpus come from the corresponding distribution.", "rank": 172, "start": 20239, "IsComparative": "0", "id": "st_172"}, {"end": 20522, "text": "The latent variable models consider k points on the word simplex and form a sub-simplex based on those points, which we call the topic simplex.", "rank": 173, "start": 20379, "IsComparative": "0", "id": "st_173"}, {"end": 20599, "text": "Note that any point on the topic simplex is also a point on the word simplex.", "rank": 174, "start": 20522, "IsComparative": "0", "id": "st_174"}, {"end": 20699, "text": "The different latent variable models use the topic simplex in different ways to generate a document.", "rank": 175, "start": 20599, "IsComparative": "0", "id": "st_175"}]}, {"paragraph_info": {"end": 21052, "start": 20699, "text": "The pLSI model posits that each word of a training document comes from a randomly chosen topic.The topics are themselves drawn from a document-specific distribution over topics, i.e., a point on the topic simplex.There is one such distribution for each document; the set of training documents thus defines an empirical distribution on the topic simplex.", "rank": 73, "paragraph_comparative_number": 1, "entities": [], "id": "p_73"}, "sentences": [{"end": 20794, "text": "The pLSI model posits that each word of a training document comes from a randomly chosen topic.", "rank": 176, "start": 20699, "IsComparative": "0", "id": "st_176"}, {"end": 20912, "text": "The topics are themselves drawn from a document-specific distribution over topics, i.e., a point on the topic simplex.", "rank": 177, "start": 20794, "IsComparative": "0", "id": "st_177"}, {"end": 21052, "text": "There is one such distribution for each document; the set of training documents thus defines an empirical distribution on the topic simplex.", "rank": 178, "start": 20912, "IsComparative": "1", "id": "st_178"}]}, {"paragraph_info": {"end": 21320, "start": 21052, "text": "LDA posits that each word of both the observed and unseen documents is generated by a randomly chosen topic which is drawn from a distribution with a randomly chosen parameter.This parameter is sampled once per document from a smooth distribution on the topic simplex.", "rank": 74, "paragraph_comparative_number": 0, "entities": [], "id": "p_74"}, "sentences": [{"end": 21228, "text": "LDA posits that each word of both the observed and unseen documents is generated by a randomly chosen topic which is drawn from a distribution with a randomly chosen parameter.", "rank": 179, "start": 21052, "IsComparative": "0", "id": "st_179"}, {"end": 21320, "text": "This parameter is sampled once per document from a smooth distribution on the topic simplex.", "rank": 180, "start": 21228, "IsComparative": "0", "id": "st_180"}]}, {"paragraph_info": {"end": 21366, "start": 21320, "text": "These differences are highlighted in Figure 4.", "rank": 75, "paragraph_comparative_number": 0, "entities": [], "id": "p_75"}, "sentences": [{"end": 21366, "text": "These differences are highlighted in Figure 4.", "rank": 181, "start": 21320, "IsComparative": "0", "id": "st_181"}]}, {"paragraph_info": {"end": 21402, "start": 21366, "text": "5.Inference and Parameter Estimation", "rank": 76, "paragraph_comparative_number": 1, "entities": [], "id": "p_76"}, "sentences": [{"end": 21368, "text": "5.", "rank": 182, "start": 21366, "IsComparative": "1", "id": "st_182"}, {"end": 21402, "text": "Inference and Parameter Estimation", "rank": 183, "start": 21368, "IsComparative": "0", "id": "st_183"}]}, {"paragraph_info": {"end": 21621, "start": 21402, "text": "We have described the motivation behind LDA and illustrated its conceptual advantages over other latent topic models.In this section, we turn our attention to procedures for inference and parameter estimation under LDA.", "rank": 77, "paragraph_comparative_number": 2, "entities": [], "id": "p_77"}, "sentences": [{"end": 21519, "text": "We have described the motivation behind LDA and illustrated its conceptual advantages over other latent topic models.", "rank": 184, "start": 21402, "IsComparative": "1", "id": "st_184"}, {"end": 21621, "text": "In this section, we turn our attention to procedures for inference and parameter estimation under LDA.", "rank": 185, "start": 21519, "IsComparative": "1", "id": "st_185"}]}, {"paragraph_info": {"end": 21869, "start": 21621, "text": "Themixtureofunigramsmodelpositsthatforeachdocument,oneofthekpointsontheword simplex (that is, one of the corners of the topic simplex) is chosen randomly and all the words of the document are drawn from the distribution corresponding to that point.", "rank": 78, "paragraph_comparative_number": 0, "entities": [], "id": "p_78"}, "sentences": [{"end": 21869, "text": "Themixtureofunigramsmodelpositsthatforeachdocument,oneofthekpointsontheword simplex (that is, one of the corners of the topic simplex) is chosen randomly and all the words of the document are drawn from the distribution corresponding to that point.", "rank": 186, "start": 21621, "IsComparative": "0", "id": "st_186"}]}, {"paragraph_info": {"end": 21882, "start": 21869, "text": "5.1 Inference", "rank": 79, "paragraph_comparative_number": 0, "entities": [], "id": "p_79"}, "sentences": [{"end": 21882, "text": "5.1 Inference", "rank": 187, "start": 21869, "IsComparative": "0", "id": "st_187"}]}, {"paragraph_info": {"end": 22041, "start": 21882, "text": "The key inferential problem that we need to solve in order to use LDA is that of computing the posterior distribution of the hidden variables given a document:", "rank": 80, "paragraph_comparative_number": 0, "entities": [], "id": "p_80"}, "sentences": [{"end": 22041, "text": "The key inferential problem that we need to solve in order to use LDA is that of computing the posterior distribution of the hidden variables given a document:", "rank": 188, "start": 21882, "IsComparative": "0", "id": "st_188"}]}, {"paragraph_info": {"end": 22069, "start": 22041, "text": "p(,z|w,,) = p(,z,w|,).p(w|,)", "rank": 81, "paragraph_comparative_number": 0, "entities": [], "id": "p_81"}, "sentences": [{"end": 22063, "text": "p(,z|w,,) = p(,z,w|,).", "rank": 189, "start": 22041, "IsComparative": "0", "id": "st_189"}, {"end": 22069, "text": "p(w|,)", "rank": 190, "start": 22063, "IsComparative": "0", "id": "st_190"}]}, {"paragraph_info": {"end": 22725, "start": 22069, "text": "Unfortunately, this distribution is intractable to compute in general.Indeed, to normalize the distri- bution we marginalize over the hidden variables and write Eq.(3) in terms of the model parameters: a function which is intractable due to the coupling between  and  in the summation over latent topics (Dickey, 1983).Dickey shows that this function is an expectation under a particular extension to the Dirichlet distribution which can be represented with special hypergeometric functions.It has been used in a Bayesian context for censored discrete data to represent the posterior on  which, in that setting, is a random parameter (Dickey et al., 1987).", "rank": 82, "paragraph_comparative_number": 2, "entities": [], "id": "p_82"}, "sentences": [{"end": 22139, "text": "Unfortunately, this distribution is intractable to compute in general.", "rank": 191, "start": 22069, "IsComparative": "0", "id": "st_191"}, {"end": 22233, "text": "Indeed, to normalize the distri- bution we marginalize over the hidden variables and write Eq.", "rank": 192, "start": 22139, "IsComparative": "0", "id": "st_192"}, {"end": 22388, "text": "(3) in terms of the model parameters: a function which is intractable due to the coupling between  and  in the summation over latent topics (Dickey, 1983).", "rank": 193, "start": 22233, "IsComparative": "1", "id": "st_193"}, {"end": 22560, "text": "Dickey shows that this function is an expectation under a particular extension to the Dirichlet distribution which can be represented with special hypergeometric functions.", "rank": 194, "start": 22388, "IsComparative": "0", "id": "st_194"}, {"end": 22725, "text": "It has been used in a Bayesian context for censored discrete data to represent the posterior on  which, in that setting, is a random parameter (Dickey et al., 1987).", "rank": 195, "start": 22560, "IsComparative": "1", "id": "st_195"}]}, {"paragraph_info": {"end": 23128, "start": 22725, "text": "Although the posterior distribution is intractable for exact inference, a wide variety of approxi- mate inference algorithms can be considered for LDA, including Laplace approximation, variational approximation, and Markov chain Monte Carlo (Jordan, 1999).In this section we describe a simple convexity-based variational algorithm for inference in LDA, and discuss some of the alternatives in Section 8.", "rank": 83, "paragraph_comparative_number": 0, "entities": [], "id": "p_83"}, "sentences": [{"end": 22981, "text": "Although the posterior distribution is intractable for exact inference, a wide variety of approxi- mate inference algorithms can be considered for LDA, including Laplace approximation, variational approximation, and Markov chain Monte Carlo (Jordan, 1999).", "rank": 196, "start": 22725, "IsComparative": "0", "id": "st_196"}, {"end": 23128, "text": "In this section we describe a simple convexity-based variational algorithm for inference in LDA, and discuss some of the alternatives in Section 8.", "rank": 197, "start": 22981, "IsComparative": "0", "id": "st_197"}]}, {"paragraph_info": {"end": 23153, "start": 23128, "text": "5.2 Variational inference", "rank": 84, "paragraph_comparative_number": 0, "entities": [], "id": "p_84"}, "sentences": [{"end": 23153, "text": "5.2 Variational inference", "rank": 198, "start": 23128, "IsComparative": "0", "id": "st_198"}]}, {"paragraph_info": {"end": 23547, "start": 23153, "text": "The basic idea of convexity-based variational inference is to make use of Jensens inequality to ob- tain an adjustable lower bound on the log likelihood (Jordan et al., 1999).Essentially, one considers a family of lower bounds, indexed by a set of variational parameters.The variational parameters are chosen by an optimization procedure that attempts to find the tightest possible lower bound.", "rank": 85, "paragraph_comparative_number": 2, "entities": [], "id": "p_85"}, "sentences": [{"end": 23328, "text": "The basic idea of convexity-based variational inference is to make use of Jensens inequality to ob- tain an adjustable lower bound on the log likelihood (Jordan et al., 1999).", "rank": 199, "start": 23153, "IsComparative": "1", "id": "st_199"}, {"end": 23424, "text": "Essentially, one considers a family of lower bounds, indexed by a set of variational parameters.", "rank": 200, "start": 23328, "IsComparative": "1", "id": "st_200"}, {"end": 23547, "text": "The variational parameters are chosen by an optimization procedure that attempts to find the tightest possible lower bound.", "rank": 201, "start": 23424, "IsComparative": "0", "id": "st_201"}]}, {"paragraph_info": {"end": 24241, "start": 23547, "text": "A simple way to obtain a tractable family of lower bounds is to consider simple modifications of the original graphical model in which some of the edges and nodes are removed.Consider in particular the LDA model shown in Figure 5 (left).The problematic coupling between  and  arises due to the edges between , z, and w.By dropping these edges and the w nodes, and endow- ing the resulting simplified graphical model with free variational parameters, we obtain a family of distributions on the latent variables.This family is characterized by the following variational distribution: where the Dirichlet parameter  and the multinomial parameters (1 , ..., N ) are the free variational parameters.", "rank": 86, "paragraph_comparative_number": 2, "entities": [], "id": "p_86"}, "sentences": [{"end": 23722, "text": "A simple way to obtain a tractable family of lower bounds is to consider simple modifications of the original graphical model in which some of the edges and nodes are removed.", "rank": 202, "start": 23547, "IsComparative": "0", "id": "st_202"}, {"end": 23784, "text": "Consider in particular the LDA model shown in Figure 5 (left).", "rank": 203, "start": 23722, "IsComparative": "0", "id": "st_203"}, {"end": 23866, "text": "The problematic coupling between  and  arises due to the edges between , z, and w.", "rank": 204, "start": 23784, "IsComparative": "1", "id": "st_204"}, {"end": 24057, "text": "By dropping these edges and the w nodes, and endow- ing the resulting simplified graphical model with free variational parameters, we obtain a family of distributions on the latent variables.", "rank": 205, "start": 23866, "IsComparative": "1", "id": "st_205"}, {"end": 24197, "text": "This family is characterized by the following variational distribution: where the Dirichlet parameter  and the multinomial parameters (1 , .", "rank": 206, "start": 24057, "IsComparative": "0", "id": "st_206"}, {"end": 24198, "text": ".", "rank": 207, "start": 24197, "IsComparative": "0", "id": "st_207"}, {"end": 24199, "text": ".", "rank": 208, "start": 24198, "IsComparative": "0", "id": "st_208"}, {"end": 24241, "text": ", N ) are the free variational parameters.", "rank": 209, "start": 24199, "IsComparative": "0", "id": "st_209"}]}, {"paragraph_info": {"end": 24577, "start": 24241, "text": "Having specified a simplified family of probability distributions, the next step is to set up an optimization problem that determines the values of the variational parameters  and .As we show in Appendix A, the desideratum of finding a tight lower bound on the log likelihood translates directly into the following optimization problem:", "rank": 87, "paragraph_comparative_number": 1, "entities": [], "id": "p_87"}, "sentences": [{"end": 24422, "text": "Having specified a simplified family of probability distributions, the next step is to set up an optimization problem that determines the values of the variational parameters  and .", "rank": 210, "start": 24241, "IsComparative": "1", "id": "st_210"}, {"end": 24577, "text": "As we show in Appendix A, the desideratum of finding a tight lower bound on the log likelihood translates directly into the following optimization problem:", "rank": 211, "start": 24422, "IsComparative": "0", "id": "st_211"}]}, {"paragraph_info": {"end": 24618, "start": 24577, "text": "(,) = argminD(q(,z|,)  p(,z|w,,)).(5) (,)", "rank": 88, "paragraph_comparative_number": 1, "entities": [], "id": "p_88"}, "sentences": [{"end": 24611, "text": "(,) = argminD(q(,z|,)  p(,z|w,,)).", "rank": 212, "start": 24577, "IsComparative": "0", "id": "st_212"}, {"end": 24618, "text": "(5) (,)", "rank": 213, "start": 24611, "IsComparative": "1", "id": "st_213"}]}, {"paragraph_info": {"end": 25052, "start": 24618, "text": "Thus the optimizing values of the variational parameters are found by minimizing the Kullback- Leibler (KL) divergence between the variational distribution and the true posterior p(,z|w,,).This minimization can be achieved via an iterative fixed-point method.In particular, we show in Appendix A.3 that by computing the derivatives of the KL divergence and setting them equal to zero, we obtain the following pair of update equations:", "rank": 89, "paragraph_comparative_number": 1, "entities": [], "id": "p_89"}, "sentences": [{"end": 24807, "text": "Thus the optimizing values of the variational parameters are found by minimizing the Kullback- Leibler (KL) divergence between the variational distribution and the true posterior p(,z|w,,).", "rank": 214, "start": 24618, "IsComparative": "0", "id": "st_214"}, {"end": 24877, "text": "This minimization can be achieved via an iterative fixed-point method.", "rank": 215, "start": 24807, "IsComparative": "0", "id": "st_215"}, {"end": 25052, "text": "In particular, we show in Appendix A.3 that by computing the derivatives of the KL divergence and setting them equal to zero, we obtain the following pair of update equations:", "rank": 216, "start": 24877, "IsComparative": "1", "id": "st_216"}]}, {"paragraph_info": {"end": 25099, "start": 25052, "text": "ni  iwn exp<Eq<log(i)|>> (6) i = i +Nn=1 ni.(7)", "rank": 90, "paragraph_comparative_number": 1, "entities": [], "id": "p_90"}, "sentences": [{"end": 25096, "text": "ni  iwn exp<Eq<log(i)|>> (6) i = i +Nn=1 ni.", "rank": 217, "start": 25052, "IsComparative": "0", "id": "st_217"}, {"end": 25099, "text": "(7)", "rank": 218, "start": 25096, "IsComparative": "1", "id": "st_218"}]}, {"paragraph_info": {"end": 25354, "start": 25099, "text": "As we show in Appendix A.1, the expectation in the multinomial update can be computed as follows: E <log( )|> = ( ) k   , (8) where  is the first derivative of the log function which is computable via Taylor approxima- tions (Abramowitz and Stegun, 1970).", "rank": 91, "paragraph_comparative_number": 1, "entities": [], "id": "p_91"}, "sentences": [{"end": 25354, "text": "As we show in Appendix A.1, the expectation in the multinomial update can be computed as follows: E <log( )|> = ( ) k   , (8) where  is the first derivative of the log function which is computable via Taylor approxima- tions (Abramowitz and Stegun, 1970).", "rank": 219, "start": 25099, "IsComparative": "1", "id": "st_219"}]}, {"paragraph_info": {"end": 25745, "start": 25354, "text": "Eqs.(6) and (7) have an appealing intuitive interpretation.The Dirichlet update is a poste- rior Dirichlet given expected observations taken under the variational distribution, E<zn |n>.The multinomial update is akin to using Bayes theorem, p(zn |wn)  p(wn |zn)p(zn), where p(zn) is approximated by the exponential of the expected value of its logarithm under the variational distri- bution.", "rank": 92, "paragraph_comparative_number": 1, "entities": [], "id": "p_92"}, "sentences": [{"end": 25358, "text": "Eqs.", "rank": 220, "start": 25354, "IsComparative": "0", "id": "st_220"}, {"end": 25413, "text": "(6) and (7) have an appealing intuitive interpretation.", "rank": 221, "start": 25358, "IsComparative": "0", "id": "st_221"}, {"end": 25540, "text": "The Dirichlet update is a poste- rior Dirichlet given expected observations taken under the variational distribution, E<zn |n>.", "rank": 222, "start": 25413, "IsComparative": "0", "id": "st_222"}, {"end": 25745, "text": "The multinomial update is akin to using Bayes theorem, p(zn |wn)  p(wn |zn)p(zn), where p(zn) is approximated by the exponential of the expected value of its logarithm under the variational distri- bution.", "rank": 223, "start": 25540, "IsComparative": "1", "id": "st_223"}]}, {"paragraph_info": {"end": 26244, "start": 25745, "text": "It is important to note that the variational distribution is actually a conditional distribution, varying as a function of w.This occurs because the optimization problem in Eq.(5) is conducted for fixed w, and thus yields optimizing parameters (,) that are a function of w.We can write the resulting variational distribution as q(,z|(w),(w)), where we have made the dependence on w explicit.Thus the variational distribution can be viewed as an approximation to the posterior distribution p(,z|w,,).", "rank": 93, "paragraph_comparative_number": 1, "entities": [], "id": "p_93"}, "sentences": [{"end": 25870, "text": "It is important to note that the variational distribution is actually a conditional distribution, varying as a function of w.", "rank": 224, "start": 25745, "IsComparative": "1", "id": "st_224"}, {"end": 25921, "text": "This occurs because the optimization problem in Eq.", "rank": 225, "start": 25870, "IsComparative": "0", "id": "st_225"}, {"end": 26018, "text": "(5) is conducted for fixed w, and thus yields optimizing parameters (,) that are a function of w.", "rank": 226, "start": 25921, "IsComparative": "0", "id": "st_226"}, {"end": 26136, "text": "We can write the resulting variational distribution as q(,z|(w),(w)), where we have made the dependence on w explicit.", "rank": 227, "start": 26018, "IsComparative": "0", "id": "st_227"}, {"end": 26244, "text": "Thus the variational distribution can be viewed as an approximation to the posterior distribution p(,z|w,,).", "rank": 228, "start": 26136, "IsComparative": "0", "id": "st_228"}]}, {"paragraph_info": {"end": 26444, "start": 26244, "text": "In the language of text, the optimizing parameters ((w),(w)) are document-specific.In particular, we view the Dirichlet parameters (w) as providing a representation of a document in the topic simplex.", "rank": 94, "paragraph_comparative_number": 2, "entities": [], "id": "p_94"}, "sentences": [{"end": 26327, "text": "In the language of text, the optimizing parameters ((w),(w)) are document-specific.", "rank": 229, "start": 26244, "IsComparative": "1", "id": "st_229"}, {"end": 26444, "text": "In particular, we view the Dirichlet parameters (w) as providing a representation of a document in the topic simplex.", "rank": 230, "start": 26327, "IsComparative": "1", "id": "st_230"}]}, {"paragraph_info": {"end": 26873, "start": 26444, "text": "We summarize the variational inference procedure in Figure 6, with appropriate starting points for  and n.From the pseudocode it is clear that each iteration of variational inference for LDA requires O((N + 1)k) operations.Empirically, we find that the number of iterations required for a single document is on the order of the number of words in the document.This yields a total number of operations roughly on the order of N2k.", "rank": 95, "paragraph_comparative_number": 2, "entities": [], "id": "p_95"}, "sentences": [{"end": 26550, "text": "We summarize the variational inference procedure in Figure 6, with appropriate starting points for  and n.", "rank": 231, "start": 26444, "IsComparative": "0", "id": "st_231"}, {"end": 26667, "text": "From the pseudocode it is clear that each iteration of variational inference for LDA requires O((N + 1)k) operations.", "rank": 232, "start": 26550, "IsComparative": "1", "id": "st_232"}, {"end": 26804, "text": "Empirically, we find that the number of iterations required for a single document is on the order of the number of words in the document.", "rank": 233, "start": 26667, "IsComparative": "0", "id": "st_233"}, {"end": 26873, "text": "This yields a total number of operations roughly on the order of N2k.", "rank": 234, "start": 26804, "IsComparative": "1", "id": "st_234"}]}, {"paragraph_info": {"end": 26897, "start": 26873, "text": "5.3 Parameter estimation", "rank": 96, "paragraph_comparative_number": 0, "entities": [], "id": "p_96"}, "sentences": [{"end": 26897, "text": "5.3 Parameter estimation", "rank": 235, "start": 26873, "IsComparative": "0", "id": "st_235"}]}, {"paragraph_info": {"end": 27193, "start": 26897, "text": "In this section we present an empirical Bayes method for parameter estimation in the LDA model (see Section 5.4 for a fuller Bayesian approach).In particular, given a corpus of documents D = <w1,w2,...,wM>, we wish to find parameters  and  that maximize the (marginal) log likelihood of the data:", "rank": 97, "paragraph_comparative_number": 1, "entities": [], "id": "p_97"}, "sentences": [{"end": 27041, "text": "In this section we present an empirical Bayes method for parameter estimation in the LDA model (see Section 5.4 for a fuller Bayesian approach).", "rank": 236, "start": 26897, "IsComparative": "0", "id": "st_236"}, {"end": 27193, "text": "In particular, given a corpus of documents D = <w1,w2,...,wM>, we wish to find parameters  and  that maximize the (marginal) log likelihood of the data:", "rank": 237, "start": 27041, "IsComparative": "1", "id": "st_237"}]}, {"paragraph_info": {"end": 27740, "start": 27193, "text": "As we have described above, the quantity p(w|,) cannot be computed tractably.However, variational inference provides us with a tractable lower bound on the log likelihood, a bound which we can maximize with respect to  and .We can thus find approximate empirical Bayes estimates for the LDA model via an alternating variational EM procedure that maximizes a lower bound with respect to the variational parameters  and , and then, for fixed values of the variational parameters, maximizes the lower bound with respect to the model parameters  and .", "rank": 98, "paragraph_comparative_number": 2, "entities": [], "id": "p_98"}, "sentences": [{"end": 27270, "text": "As we have described above, the quantity p(w|,) cannot be computed tractably.", "rank": 238, "start": 27193, "IsComparative": "0", "id": "st_238"}, {"end": 27417, "text": "However, variational inference provides us with a tractable lower bound on the log likelihood, a bound which we can maximize with respect to  and .", "rank": 239, "start": 27270, "IsComparative": "1", "id": "st_239"}, {"end": 27740, "text": "We can thus find approximate empirical Bayes estimates for the LDA model via an alternating variational EM procedure that maximizes a lower bound with respect to the variational parameters  and , and then, for fixed values of the variational parameters, maximizes the lower bound with respect to the model parameters  and .", "rank": 240, "start": 27417, "IsComparative": "1", "id": "st_240"}]}, {"paragraph_info": {"end": 27885, "start": 27740, "text": "We provide a detailed derivation of the variational EM algorithm for LDA in Appendix A.4.The derivation yields the following iterative algorithm:", "rank": 99, "paragraph_comparative_number": 0, "entities": [], "id": "p_99"}, "sentences": [{"end": 27829, "text": "We provide a detailed derivation of the variational EM algorithm for LDA in Appendix A.4.", "rank": 241, "start": 27740, "IsComparative": "0", "id": "st_241"}, {"end": 27885, "text": "The derivation yields the following iterative algorithm:", "rank": 242, "start": 27829, "IsComparative": "0", "id": "st_242"}]}, {"paragraph_info": {"end": 28037, "start": 27885, "text": "1.(E-step) For each document, find the optimizing values of the variational parameters <d , d : d  D>.This is done as described in the previous section.", "rank": 100, "paragraph_comparative_number": 1, "entities": [], "id": "p_100"}, "sentences": [{"end": 27887, "text": "1.", "rank": 243, "start": 27885, "IsComparative": "1", "id": "st_243"}, {"end": 27987, "text": "(E-step) For each document, find the optimizing values of the variational parameters <d , d : d  D>.", "rank": 244, "start": 27887, "IsComparative": "0", "id": "st_244"}, {"end": 28037, "text": "This is done as described in the previous section.", "rank": 245, "start": 27987, "IsComparative": "0", "id": "st_245"}]}, {"paragraph_info": {"end": 28323, "start": 28037, "text": "2.(M-step) Maximize the resulting lower bound on the log likelihood with respect to the model parameters  and .This corresponds to finding maximum likelihood estimates with expected sufficient statistics for each document under the approximate posterior which is computed in the E-step.", "rank": 101, "paragraph_comparative_number": 3, "entities": [], "id": "p_101"}, "sentences": [{"end": 28039, "text": "2.", "rank": 246, "start": 28037, "IsComparative": "1", "id": "st_246"}, {"end": 28148, "text": "(M-step) Maximize the resulting lower bound on the log likelihood with respect to the model parameters  and .", "rank": 247, "start": 28039, "IsComparative": "1", "id": "st_247"}, {"end": 28323, "text": "This corresponds to finding maximum likelihood estimates with expected sufficient statistics for each document under the approximate posterior which is computed in the E-step.", "rank": 248, "start": 28148, "IsComparative": "1", "id": "st_248"}]}, {"paragraph_info": {"end": 28406, "start": 28323, "text": "These two steps are repeated until the lower bound on the log likelihood converges.", "rank": 102, "paragraph_comparative_number": 1, "entities": [], "id": "p_102"}, "sentences": [{"end": 28406, "text": "These two steps are repeated until the lower bound on the log likelihood converges.", "rank": 249, "start": 28323, "IsComparative": "1", "id": "st_249"}]}, {"paragraph_info": {"end": 28529, "start": 28406, "text": "In Appendix A.4, we show that the M-step update for the conditional multinomial parameter  can be written out analytically:", "rank": 103, "paragraph_comparative_number": 0, "entities": [], "id": "p_103"}, "sentences": [{"end": 28529, "text": "In Appendix A.4, we show that the M-step update for the conditional multinomial parameter  can be written out analytically:", "rank": 250, "start": 28406, "IsComparative": "0", "id": "st_250"}]}, {"paragraph_info": {"end": 28701, "start": 28529, "text": "We further show that the M-step update for Dirichlet parameter  can be implemented using an efficient Newton-Raphson method in which the Hessian is inverted in linear time.", "rank": 104, "paragraph_comparative_number": 0, "entities": [], "id": "p_104"}, "sentences": [{"end": 28701, "text": "We further show that the M-step update for Dirichlet parameter  can be implemented using an efficient Newton-Raphson method in which the Hessian is inverted in linear time.", "rank": 251, "start": 28529, "IsComparative": "0", "id": "st_251"}]}, {"paragraph_info": {"end": 28714, "start": 28701, "text": "5.4 Smoothing", "rank": 105, "paragraph_comparative_number": 0, "entities": [], "id": "p_105"}, "sentences": [{"end": 28714, "text": "5.4 Smoothing", "rank": 252, "start": 28701, "IsComparative": "0", "id": "st_252"}]}, {"paragraph_info": {"end": 29454, "start": 28714, "text": "The large vocabulary size that is characteristic of many document corpora creates serious problems of sparsity.A new document is very likely to contain words that did not appear in any of the documents in a training corpus.Maximum likelihood estimates of the multinomial parameters assign zero probability to such words, and thus zero probability to new documents.The standard approach to coping with this problem is to smooth the multinomial parameters, assigning positive probability to all vocabulary items whether or not they are observed in the training set (Jelinek, 1997).Laplace smoothing is commonly used; this essentially yields the mean of the posterior distribution under a uniform Dirichlet prior on the multinomial parameters.", "rank": 106, "paragraph_comparative_number": 1, "entities": [], "id": "p_106"}, "sentences": [{"end": 28825, "text": "The large vocabulary size that is characteristic of many document corpora creates serious problems of sparsity.", "rank": 253, "start": 28714, "IsComparative": "0", "id": "st_253"}, {"end": 28937, "text": "A new document is very likely to contain words that did not appear in any of the documents in a training corpus.", "rank": 254, "start": 28825, "IsComparative": "0", "id": "st_254"}, {"end": 29078, "text": "Maximum likelihood estimates of the multinomial parameters assign zero probability to such words, and thus zero probability to new documents.", "rank": 255, "start": 28937, "IsComparative": "1", "id": "st_255"}, {"end": 29293, "text": "The standard approach to coping with this problem is to smooth the multinomial parameters, assigning positive probability to all vocabulary items whether or not they are observed in the training set (Jelinek, 1997).", "rank": 256, "start": 29078, "IsComparative": "0", "id": "st_256"}, {"end": 29454, "text": "Laplace smoothing is commonly used; this essentially yields the mean of the posterior distribution under a uniform Dirichlet prior on the multinomial parameters.", "rank": 257, "start": 29293, "IsComparative": "0", "id": "st_257"}]}, {"paragraph_info": {"end": 30044, "start": 29454, "text": "Unfortunately, in the mixture model setting, simple Laplace smoothing is no longer justified as a maximum a posteriori method (although it is often implemented in practice; cf.Nigam et al., 1999).In fact, by placing a Dirichlet prior on the multinomial parameter we obtain an intractable posterior in the mixture model setting, for much the same reason that one obtains an intractable posterior in the basic LDA model.Our proposed solution to this problem is to simply apply variational inference methods to the extended model that includes Dirichlet smoothing on the multinomial parameter.", "rank": 107, "paragraph_comparative_number": 2, "entities": [], "id": "p_107"}, "sentences": [{"end": 29630, "text": "Unfortunately, in the mixture model setting, simple Laplace smoothing is no longer justified as a maximum a posteriori method (although it is often implemented in practice; cf.", "rank": 258, "start": 29454, "IsComparative": "0", "id": "st_258"}, {"end": 29650, "text": "Nigam et al., 1999).", "rank": 259, "start": 29630, "IsComparative": "0", "id": "st_259"}, {"end": 29872, "text": "In fact, by placing a Dirichlet prior on the multinomial parameter we obtain an intractable posterior in the mixture model setting, for much the same reason that one obtains an intractable posterior in the basic LDA model.", "rank": 260, "start": 29650, "IsComparative": "1", "id": "st_260"}, {"end": 30044, "text": "Our proposed solution to this problem is to simply apply variational inference methods to the extended model that includes Dirichlet smoothing on the multinomial parameter.", "rank": 261, "start": 29872, "IsComparative": "1", "id": "st_261"}]}, {"paragraph_info": {"end": 30551, "start": 30044, "text": "In the LDA setting, we obtain the extended graphical model shown in Figure 7.We treat  as a k  V random matrix (one row for each mixture component), where we assume that each row is independently drawn from an exchangeable Dirichlet distribution.2 We now extend our infer- ence procedures to treat the i as random variables that are endowed with a posterior distribution,conditioned on the data.Thus we move beyond the empirical Bayes procedure of Section 5.3 and consider a fuller Bayesian approach to LDA.", "rank": 108, "paragraph_comparative_number": 1, "entities": [], "id": "p_108"}, "sentences": [{"end": 30121, "text": "In the LDA setting, we obtain the extended graphical model shown in Figure 7.", "rank": 262, "start": 30044, "IsComparative": "0", "id": "st_262"}, {"end": 30439, "text": "We treat  as a k  V random matrix (one row for each mixture component), where we assume that each row is independently drawn from an exchangeable Dirichlet distribution.2 We now extend our infer- ence procedures to treat the i as random variables that are endowed with a posterior distribution,conditioned on the data.", "rank": 263, "start": 30121, "IsComparative": "1", "id": "st_263"}, {"end": 30551, "text": "Thus we move beyond the empirical Bayes procedure of Section 5.3 and consider a fuller Bayesian approach to LDA.", "rank": 264, "start": 30439, "IsComparative": "0", "id": "st_264"}]}, {"paragraph_info": {"end": 30694, "start": 30551, "text": "We consider a variational approach to Bayesian inference that places a separable distribution on the random variables , , and z (Attias, 2000):", "rank": 109, "paragraph_comparative_number": 1, "entities": [], "id": "p_109"}, "sentences": [{"end": 30694, "text": "We consider a variational approach to Bayesian inference that places a separable distribution on the random variables , , and z (Attias, 2000):", "rank": 265, "start": 30551, "IsComparative": "1", "id": "st_265"}]}, {"paragraph_info": {"end": 31008, "start": 30694, "text": "where qd(,z|,) is the variational distribution defined for LDA in Eq.(4).As is easily verified, the resulting variational inference procedure again yields Eqs.(6) and (7) as the update equations for the variational parameters  and , respectively, as well as an additional update for the new variational parameter :", "rank": 110, "paragraph_comparative_number": 1, "entities": [], "id": "p_110"}, "sentences": [{"end": 30763, "text": "where qd(,z|,) is the variational distribution defined for LDA in Eq.", "rank": 266, "start": 30694, "IsComparative": "0", "id": "st_266"}, {"end": 30767, "text": "(4).", "rank": 267, "start": 30763, "IsComparative": "1", "id": "st_267"}, {"end": 30853, "text": "As is easily verified, the resulting variational inference procedure again yields Eqs.", "rank": 268, "start": 30767, "IsComparative": "0", "id": "st_268"}, {"end": 31008, "text": "(6) and (7) as the update equations for the variational parameters  and , respectively, as well as an additional update for the new variational parameter :", "rank": 269, "start": 30853, "IsComparative": "0", "id": "st_269"}]}, {"paragraph_info": {"end": 31386, "start": 31008, "text": "Iterating these equations to convergence yields an approximate posterior distribution on , , and z.We are now left with the hyperparameter  on the exchangeable Dirichlet, as well as the hy- perparameter  from before.Our approach to setting these hyperparameters is again (approximate) empirical Bayeswe use variational EM to find maximum likelihood estimates of these parameters", "rank": 111, "paragraph_comparative_number": 2, "entities": [], "id": "p_111"}, "sentences": [{"end": 31107, "text": "Iterating these equations to convergence yields an approximate posterior distribution on , , and z.", "rank": 270, "start": 31008, "IsComparative": "1", "id": "st_270"}, {"end": 31224, "text": "We are now left with the hyperparameter  on the exchangeable Dirichlet, as well as the hy- perparameter  from before.", "rank": 271, "start": 31107, "IsComparative": "0", "id": "st_271"}, {"end": 31386, "text": "Our approach to setting these hyperparameters is again (approximate) empirical Bayeswe use variational EM to find maximum likelihood estimates of these parameters", "rank": 272, "start": 31224, "IsComparative": "1", "id": "st_272"}]}, {"paragraph_info": {"end": 31466, "start": 31386, "text": "based on the marginal likelihood.These procedures are described in Appendix A.4.", "rank": 112, "paragraph_comparative_number": 0, "entities": [], "id": "p_112"}, "sentences": [{"end": 31419, "text": "based on the marginal likelihood.", "rank": 273, "start": 31386, "IsComparative": "0", "id": "st_273"}, {"end": 31466, "text": "These procedures are described in Appendix A.4.", "rank": 274, "start": 31419, "IsComparative": "0", "id": "st_274"}]}, {"paragraph_info": {"end": 31475, "start": 31466, "text": "6.Example", "rank": 113, "paragraph_comparative_number": 2, "entities": [], "id": "p_113"}, "sentences": [{"end": 31468, "text": "6.", "rank": 275, "start": 31466, "IsComparative": "1", "id": "st_275"}, {"end": 31475, "text": "Example", "rank": 276, "start": 31468, "IsComparative": "1", "id": "st_276"}]}, {"paragraph_info": {"end": 32088, "start": 31475, "text": "In this section, we provide an illustrative example of the use of an LDA model on real data.Our data are 16,000 documents from a subset of the TREC AP corpus (Harman, 1992).After removing a standard list of stop words, we used the EM algorithm described in Section 5.3 to find the Dirichlet and conditional multinomial parameters for a 100-topic LDA model.The top words from some of the resulting multinomial distributions p(w|z) are illustrated in Figure 8 (top).As we have hoped, these distributions seem to capture some of the underlying topics in the corpus (and we have named them according to these topics).", "rank": 114, "paragraph_comparative_number": 3, "entities": [], "id": "p_114"}, "sentences": [{"end": 31567, "text": "In this section, we provide an illustrative example of the use of an LDA model on real data.", "rank": 277, "start": 31475, "IsComparative": "1", "id": "st_277"}, {"end": 31648, "text": "Our data are 16,000 documents from a subset of the TREC AP corpus (Harman, 1992).", "rank": 278, "start": 31567, "IsComparative": "1", "id": "st_278"}, {"end": 31831, "text": "After removing a standard list of stop words, we used the EM algorithm described in Section 5.3 to find the Dirichlet and conditional multinomial parameters for a 100-topic LDA model.", "rank": 279, "start": 31648, "IsComparative": "1", "id": "st_279"}, {"end": 31939, "text": "The top words from some of the resulting multinomial distributions p(w|z) are illustrated in Figure 8 (top).", "rank": 280, "start": 31831, "IsComparative": "0", "id": "st_280"}, {"end": 32088, "text": "As we have hoped, these distributions seem to capture some of the underlying topics in the corpus (and we have named them according to these topics).", "rank": 281, "start": 31939, "IsComparative": "0", "id": "st_281"}]}, {"paragraph_info": {"end": 32173, "start": 32088, "text": "Further insight comes from examining the n parameters.These distributions approximate", "rank": 115, "paragraph_comparative_number": 0, "entities": [], "id": "p_115"}, "sentences": [{"end": 32142, "text": "Further insight comes from examining the n parameters.", "rank": 282, "start": 32088, "IsComparative": "0", "id": "st_282"}, {"end": 32173, "text": "These distributions approximate", "rank": 283, "start": 32142, "IsComparative": "0", "id": "st_283"}]}, {"paragraph_info": {"end": 32275, "start": 32173, "text": "p(zn | w) and tend to peak towards one of the k possible topic values.In the article text in Figure 8,", "rank": 116, "paragraph_comparative_number": 1, "entities": [], "id": "p_116"}, "sentences": [{"end": 32243, "text": "p(zn | w) and tend to peak towards one of the k possible topic values.", "rank": 284, "start": 32173, "IsComparative": "1", "id": "st_284"}, {"end": 32275, "text": "In the article text in Figure 8,", "rank": 285, "start": 32243, "IsComparative": "0", "id": "st_285"}]}, {"paragraph_info": {"end": 32379, "start": 32275, "text": "the words are color coded according to these values (i.e., the ith color is used if q (zi = 1) > 0.9).nn", "rank": 117, "paragraph_comparative_number": 1, "entities": [], "id": "p_117"}, "sentences": [{"end": 32377, "text": "the words are color coded according to these values (i.e., the ith color is used if q (zi = 1) > 0.9).", "rank": 286, "start": 32275, "IsComparative": "0", "id": "st_286"}, {"end": 32379, "text": "nn", "rank": 287, "start": 32377, "IsComparative": "1", "id": "st_287"}]}, {"paragraph_info": {"end": 32472, "start": 32379, "text": "With this illustration, one can identify how the different topics mixed in the document text.", "rank": 118, "paragraph_comparative_number": 0, "entities": [], "id": "p_118"}, "sentences": [{"end": 32472, "text": "With this illustration, one can identify how the different topics mixed in the document text.", "rank": 288, "start": 32379, "IsComparative": "0", "id": "st_288"}]}, {"paragraph_info": {"end": 32947, "start": 32472, "text": "While demonstrating the power of LDA, the posterior analysis also highlights some of its lim- itations.In particular, the bag-of-words assumption allows words that should be generated by the same topic (e.g., William Randolph Hearst Foundation) to be allocated to several different top- ics.Overcoming this limitation would require some form of extension of the basic LDA model; in particular, we might relax the bag-of-words assumption by assuming partial exchangeability or", "rank": 119, "paragraph_comparative_number": 2, "entities": [], "id": "p_119"}, "sentences": [{"end": 32575, "text": "While demonstrating the power of LDA, the posterior analysis also highlights some of its lim- itations.", "rank": 289, "start": 32472, "IsComparative": "1", "id": "st_289"}, {"end": 32763, "text": "In particular, the bag-of-words assumption allows words that should be generated by the same topic (e.g., William Randolph Hearst Foundation) to be allocated to several different top- ics.", "rank": 290, "start": 32575, "IsComparative": "0", "id": "st_290"}, {"end": 32947, "text": "Overcoming this limitation would require some form of extension of the basic LDA model; in particular, we might relax the bag-of-words assumption by assuming partial exchangeability or", "rank": 291, "start": 32763, "IsComparative": "1", "id": "st_291"}]}, {"paragraph_info": {"end": 32978, "start": 32947, "text": "Markovianity of word sequences.", "rank": 120, "paragraph_comparative_number": 0, "entities": [], "id": "p_120"}, "sentences": [{"end": 32978, "text": "Markovianity of word sequences.", "rank": 292, "start": 32947, "IsComparative": "0", "id": "st_292"}]}, {"paragraph_info": {"end": 33014, "start": 32978, "text": "7.Applications and Empirical Results", "rank": 121, "paragraph_comparative_number": 1, "entities": [], "id": "p_121"}, "sentences": [{"end": 32980, "text": "7.", "rank": 293, "start": 32978, "IsComparative": "1", "id": "st_293"}, {"end": 33014, "text": "Applications and Empirical Results", "rank": 294, "start": 32980, "IsComparative": "0", "id": "st_294"}]}, {"paragraph_info": {"end": 33172, "start": 33014, "text": "In this section, we discuss our empirical evaluation of LDA in several problem domainsdocument modeling, document classification, and collaborative filtering.", "rank": 122, "paragraph_comparative_number": 1, "entities": [], "id": "p_122"}, "sentences": [{"end": 33172, "text": "In this section, we discuss our empirical evaluation of LDA in several problem domainsdocument modeling, document classification, and collaborative filtering.", "rank": 295, "start": 33014, "IsComparative": "1", "id": "st_295"}]}, {"paragraph_info": {"end": 33740, "start": 33172, "text": "In all of the mixture models, the expected complete log likelihood of the data has local max- ima at the points where all or some of the mixture components are equal to each other.To avoid these local maxima, it is important to initialize the EM algorithm appropriately.In our experiments, we initialize EM by seeding each conditional multinomial distribution with five documents, reduc- ing their effective total length to two words, and smoothing across the whole vocabulary.This is essentially an approximation to the scheme described in Heckerman and Meila (2001).", "rank": 123, "paragraph_comparative_number": 2, "entities": [], "id": "p_123"}, "sentences": [{"end": 33352, "text": "In all of the mixture models, the expected complete log likelihood of the data has local max- ima at the points where all or some of the mixture components are equal to each other.", "rank": 296, "start": 33172, "IsComparative": "1", "id": "st_296"}, {"end": 33442, "text": "To avoid these local maxima, it is important to initialize the EM algorithm appropriately.", "rank": 297, "start": 33352, "IsComparative": "0", "id": "st_297"}, {"end": 33649, "text": "In our experiments, we initialize EM by seeding each conditional multinomial distribution with five documents, reduc- ing their effective total length to two words, and smoothing across the whole vocabulary.", "rank": 298, "start": 33442, "IsComparative": "1", "id": "st_298"}, {"end": 33740, "text": "This is essentially an approximation to the scheme described in Heckerman and Meila (2001).", "rank": 299, "start": 33649, "IsComparative": "0", "id": "st_299"}]}, {"paragraph_info": {"end": 33761, "start": 33740, "text": "7.1 Document modeling", "rank": 124, "paragraph_comparative_number": 0, "entities": [], "id": "p_124"}, "sentences": [{"end": 33761, "text": "7.1 Document modeling", "rank": 300, "start": 33740, "IsComparative": "0", "id": "st_300"}]}, {"paragraph_info": {"end": 34481, "start": 33761, "text": "We trained a number of latent variable models, including LDA, on two text corpora to compare the generalization performance of these models.The documents in the corpora are treated as unlabeled; thus, our goal is density estimationwe wish to achieve high likelihood on a held-out test set.In particular, we computed the perplexity of a held-out test set to evaluate the models.The perplexity, used by convention in language modeling, is monotonically decreasing in the likelihood of the test data, and is algebraicly equivalent to the inverse of the geometric mean per-word likelihood.A lower perplexity score indicates better generalization performance.3 More formally, for a test set of M documents, the perplexity is:", "rank": 125, "paragraph_comparative_number": 4, "entities": [], "id": "p_125"}, "sentences": [{"end": 33901, "text": "We trained a number of latent variable models, including LDA, on two text corpora to compare the generalization performance of these models.", "rank": 301, "start": 33761, "IsComparative": "1", "id": "st_301"}, {"end": 34050, "text": "The documents in the corpora are treated as unlabeled; thus, our goal is density estimationwe wish to achieve high likelihood on a held-out test set.", "rank": 302, "start": 33901, "IsComparative": "1", "id": "st_302"}, {"end": 34138, "text": "In particular, we computed the perplexity of a held-out test set to evaluate the models.", "rank": 303, "start": 34050, "IsComparative": "1", "id": "st_303"}, {"end": 34346, "text": "The perplexity, used by convention in language modeling, is monotonically decreasing in the likelihood of the test data, and is algebraicly equivalent to the inverse of the geometric mean per-word likelihood.", "rank": 304, "start": 34138, "IsComparative": "0", "id": "st_304"}, {"end": 34481, "text": "A lower perplexity score indicates better generalization performance.3 More formally, for a test set of M documents, the perplexity is:", "rank": 305, "start": 34346, "IsComparative": "1", "id": "st_305"}]}, {"paragraph_info": {"end": 34996, "start": 34481, "text": "In our experiments, we used a corpus of scientific abstracts from the C. Elegans community (Av- ery, 2002) containing 5,225 abstracts with 28,414 unique terms, and a subset of the TREC AP corpus containing 16,333 newswire articles with 23,075 unique terms.In both cases, we held out 10% of the data for test purposes and trained the models on the remaining 90%.In preprocessing the data,we removed a standard list of 50 stop words from each corpus.From the AP data, we further removed words that occurred only once.", "rank": 126, "paragraph_comparative_number": 3, "entities": [], "id": "p_126"}, "sentences": [{"end": 34737, "text": "In our experiments, we used a corpus of scientific abstracts from the C. Elegans community (Av- ery, 2002) containing 5,225 abstracts with 28,414 unique terms, and a subset of the TREC AP corpus containing 16,333 newswire articles with 23,075 unique terms.", "rank": 306, "start": 34481, "IsComparative": "1", "id": "st_306"}, {"end": 34842, "text": "In both cases, we held out 10% of the data for test purposes and trained the models on the remaining 90%.", "rank": 307, "start": 34737, "IsComparative": "1", "id": "st_307"}, {"end": 34929, "text": "In preprocessing the data,we removed a standard list of 50 stop words from each corpus.", "rank": 308, "start": 34842, "IsComparative": "1", "id": "st_308"}, {"end": 34996, "text": "From the AP data, we further removed words that occurred only once.", "rank": 309, "start": 34929, "IsComparative": "0", "id": "st_309"}]}, {"paragraph_info": {"end": 35255, "start": 34996, "text": "We compared LDA with the unigram, mixture of unigrams, and pLSI models described in Sec- tion 4.We trained all the hidden variable models using EM with exactly the same stopping criteria, that the average change in expected log likelihood is less than 0.001%.", "rank": 127, "paragraph_comparative_number": 1, "entities": [], "id": "p_127"}, "sentences": [{"end": 35092, "text": "We compared LDA with the unigram, mixture of unigrams, and pLSI models described in Sec- tion 4.", "rank": 310, "start": 34996, "IsComparative": "0", "id": "st_310"}, {"end": 35255, "text": "We trained all the hidden variable models using EM with exactly the same stopping criteria, that the average change in expected log likelihood is less than 0.001%.", "rank": 311, "start": 35092, "IsComparative": "1", "id": "st_311"}]}, {"paragraph_info": {"end": 36273, "start": 35255, "text": "Both the pLSI model and the mixture of unigrams suffer from serious overfitting issues, though for different reasons.This phenomenon is illustrated in Table 1.In the mixture of unigrams model, overfitting is a result of peaked posteriors in the training set; a phenomenon familiar in the super- vised setting, where this model is known as the naive Bayes model (Rennie, 2001).This leads to a nearly deterministic clustering of the training documents (in the E-step) which is used to determine the word probabilities in each mixture component (in the M-step).A previously unseen document may best fit one of the resulting mixture components, but will probably contain at least one word which did not occur in the training documents that were assigned to that component.Such words will have a very small probability, which causes the perplexity of the new document to explode.As k increases, the documents of the training corpus are partitioned into finer collections and thus induce more words with small probabilities.", "rank": 128, "paragraph_comparative_number": 4, "entities": [], "id": "p_128"}, "sentences": [{"end": 35372, "text": "Both the pLSI model and the mixture of unigrams suffer from serious overfitting issues, though for different reasons.", "rank": 312, "start": 35255, "IsComparative": "1", "id": "st_312"}, {"end": 35414, "text": "This phenomenon is illustrated in Table 1.", "rank": 313, "start": 35372, "IsComparative": "0", "id": "st_313"}, {"end": 35631, "text": "In the mixture of unigrams model, overfitting is a result of peaked posteriors in the training set; a phenomenon familiar in the super- vised setting, where this model is known as the naive Bayes model (Rennie, 2001).", "rank": 314, "start": 35414, "IsComparative": "0", "id": "st_314"}, {"end": 35813, "text": "This leads to a nearly deterministic clustering of the training documents (in the E-step) which is used to determine the word probabilities in each mixture component (in the M-step).", "rank": 315, "start": 35631, "IsComparative": "1", "id": "st_315"}, {"end": 36023, "text": "A previously unseen document may best fit one of the resulting mixture components, but will probably contain at least one word which did not occur in the training documents that were assigned to that component.", "rank": 316, "start": 35813, "IsComparative": "1", "id": "st_316"}, {"end": 36129, "text": "Such words will have a very small probability, which causes the perplexity of the new document to explode.", "rank": 317, "start": 36023, "IsComparative": "1", "id": "st_317"}, {"end": 36273, "text": "As k increases, the documents of the training corpus are partitioned into finer collections and thus induce more words with small probabilities.", "rank": 318, "start": 36129, "IsComparative": "0", "id": "st_318"}]}, {"paragraph_info": {"end": 36492, "start": 36273, "text": "In the mixture of unigrams, we can alleviate overfitting through the variational Bayesian smooth- ing scheme presented in Section 5.4.This ensures that all words will have some probability under every mixture component.", "rank": 129, "paragraph_comparative_number": 0, "entities": [], "id": "p_129"}, "sentences": [{"end": 36407, "text": "In the mixture of unigrams, we can alleviate overfitting through the variational Bayesian smooth- ing scheme presented in Section 5.4.", "rank": 319, "start": 36273, "IsComparative": "0", "id": "st_319"}, {"end": 36492, "text": "This ensures that all words will have some probability under every mixture component.", "rank": 320, "start": 36407, "IsComparative": "0", "id": "st_320"}]}, {"paragraph_info": {"end": 36901, "start": 36492, "text": "In the pLSI case, the hard clustering problem is alleviated by the fact that each document is allowed to exhibit a different proportion of topics.However, pLSI only refers to the training doc- uments and a different overfitting problem arises that is due to the dimensionality of the p(z|d) parameter.One reasonable approach to assigning probability to a previously unseen document is by marginalizing over d:", "rank": 130, "paragraph_comparative_number": 1, "entities": [], "id": "p_130"}, "sentences": [{"end": 36638, "text": "In the pLSI case, the hard clustering problem is alleviated by the fact that each document is allowed to exhibit a different proportion of topics.", "rank": 321, "start": 36492, "IsComparative": "0", "id": "st_321"}, {"end": 36793, "text": "However, pLSI only refers to the training doc- uments and a different overfitting problem arises that is due to the dimensionality of the p(z|d) parameter.", "rank": 322, "start": 36638, "IsComparative": "1", "id": "st_322"}, {"end": 36901, "text": "One reasonable approach to assigning probability to a previously unseen document is by marginalizing over d:", "rank": 323, "start": 36793, "IsComparative": "0", "id": "st_323"}]}, {"paragraph_info": {"end": 37906, "start": 36901, "text": "Essentially, we are integrating over the empirical distribution on the topic simplex (see Figure 4).This method of inference, though theoretically sound, causes the model to overfit.The document-specific topic distribution has some components which are close to zero for those topics that do not appear in the document.Thus, certain words will have very small probability in the estimates of each mixture component.When determining the probability of a new document through marginal- ization, only those training documents which exhibit a similar proportion of topics will contribute to the likelihood.For a given training documents topic proportions, any word which has small probability in all the constituent topics will cause the perplexity to explode.As k gets larger, the chance that a training document will exhibit topics that cover all the words in the new document decreases and thus the perplexity grows.Note that pLSI does not overfit as quickly (with respect to k) as the mixture of unigrams.", "rank": 131, "paragraph_comparative_number": 6, "entities": [], "id": "p_131"}, "sentences": [{"end": 37001, "text": "Essentially, we are integrating over the empirical distribution on the topic simplex (see Figure 4).", "rank": 324, "start": 36901, "IsComparative": "0", "id": "st_324"}, {"end": 37083, "text": "This method of inference, though theoretically sound, causes the model to overfit.", "rank": 325, "start": 37001, "IsComparative": "1", "id": "st_325"}, {"end": 37220, "text": "The document-specific topic distribution has some components which are close to zero for those topics that do not appear in the document.", "rank": 326, "start": 37083, "IsComparative": "1", "id": "st_326"}, {"end": 37316, "text": "Thus, certain words will have very small probability in the estimates of each mixture component.", "rank": 327, "start": 37220, "IsComparative": "0", "id": "st_327"}, {"end": 37503, "text": "When determining the probability of a new document through marginal- ization, only those training documents which exhibit a similar proportion of topics will contribute to the likelihood.", "rank": 328, "start": 37316, "IsComparative": "1", "id": "st_328"}, {"end": 37657, "text": "For a given training documents topic proportions, any word which has small probability in all the constituent topics will cause the perplexity to explode.", "rank": 329, "start": 37503, "IsComparative": "1", "id": "st_329"}, {"end": 37816, "text": "As k gets larger, the chance that a training document will exhibit topics that cover all the words in the new document decreases and thus the perplexity grows.", "rank": 330, "start": 37657, "IsComparative": "1", "id": "st_330"}, {"end": 37906, "text": "Note that pLSI does not overfit as quickly (with respect to k) as the mixture of unigrams.", "rank": 331, "start": 37816, "IsComparative": "1", "id": "st_331"}]}, {"paragraph_info": {"end": 38448, "start": 37906, "text": "This overfitting problem essentially stems from the restriction that each future document exhibit the same topic proportions as were seen in one or more of the training documents.Given this constraint, we are not free to choose the most likely proportions of topics for the new document.An alternative approach is the folding-in heuristic suggested by Hofmann (1999), where one ignores the p(z|d) parameters and refits p(z|dnew).Note that this gives the pLSI model an unfair advantage by allowing it to refit k  1 parameters to the test data.", "rank": 132, "paragraph_comparative_number": 2, "entities": [], "id": "p_132"}, "sentences": [{"end": 38085, "text": "This overfitting problem essentially stems from the restriction that each future document exhibit the same topic proportions as were seen in one or more of the training documents.", "rank": 332, "start": 37906, "IsComparative": "1", "id": "st_332"}, {"end": 38193, "text": "Given this constraint, we are not free to choose the most likely proportions of topics for the new document.", "rank": 333, "start": 38085, "IsComparative": "0", "id": "st_333"}, {"end": 38335, "text": "An alternative approach is the folding-in heuristic suggested by Hofmann (1999), where one ignores the p(z|d) parameters and refits p(z|dnew).", "rank": 334, "start": 38193, "IsComparative": "0", "id": "st_334"}, {"end": 38448, "text": "Note that this gives the pLSI model an unfair advantage by allowing it to refit k  1 parameters to the test data.", "rank": 335, "start": 38335, "IsComparative": "1", "id": "st_335"}]}, {"paragraph_info": {"end": 38794, "start": 38448, "text": "LDA suffers from neither of these problems.As in pLSI, each document can exhibit a different proportion of underlying topics.However, LDA can easily assign probability to a new document; no heuristics are needed for a new document to be endowed with a different set of topic proportions than were associated with documents in the training corpus.", "rank": 133, "paragraph_comparative_number": 0, "entities": [], "id": "p_133"}, "sentences": [{"end": 38491, "text": "LDA suffers from neither of these problems.", "rank": 336, "start": 38448, "IsComparative": "0", "id": "st_336"}, {"end": 38573, "text": "As in pLSI, each document can exhibit a different proportion of underlying topics.", "rank": 337, "start": 38491, "IsComparative": "0", "id": "st_337"}, {"end": 38794, "text": "However, LDA can easily assign probability to a new document; no heuristics are needed for a new document to be endowed with a different set of topic proportions than were associated with documents in the training corpus.", "rank": 338, "start": 38573, "IsComparative": "0", "id": "st_338"}]}, {"paragraph_info": {"end": 39089, "start": 38794, "text": "Figure 9 presents the perplexity for each model on both corpora for different values of k.The pLSI model and mixture of unigrams are suitably corrected for overfitting.The latent variable models perform better than the simple unigram model.LDA consistently performs better than the other models.", "rank": 134, "paragraph_comparative_number": 0, "entities": [], "id": "p_134"}, "sentences": [{"end": 38884, "text": "Figure 9 presents the perplexity for each model on both corpora for different values of k.", "rank": 339, "start": 38794, "IsComparative": "0", "id": "st_339"}, {"end": 38962, "text": "The pLSI model and mixture of unigrams are suitably corrected for overfitting.", "rank": 340, "start": 38884, "IsComparative": "0", "id": "st_340"}, {"end": 39034, "text": "The latent variable models perform better than the simple unigram model.", "rank": 341, "start": 38962, "IsComparative": "0", "id": "st_341"}, {"end": 39089, "text": "LDA consistently performs better than the other models.", "rank": 342, "start": 39034, "IsComparative": "0", "id": "st_342"}]}, {"paragraph_info": {"end": 39116, "start": 39089, "text": "7.2 Document classification", "rank": 135, "paragraph_comparative_number": 0, "entities": [], "id": "p_135"}, "sentences": [{"end": 39116, "text": "7.2 Document classification", "rank": 343, "start": 39089, "IsComparative": "0", "id": "st_343"}]}, {"paragraph_info": {"end": 39546, "start": 39116, "text": "In the text classification problem, we wish to classify a document into two or more mutually ex- clusive classes.As in any classification problem, we may wish to consider generative approaches or discriminative approaches.In particular, by using one LDA module for each class, we obtain a generative model for classification.It is also of interest to use LDA in the discriminative framework, and this is our focus in this section.", "rank": 136, "paragraph_comparative_number": 4, "entities": [], "id": "p_136"}, "sentences": [{"end": 39229, "text": "In the text classification problem, we wish to classify a document into two or more mutually ex- clusive classes.", "rank": 344, "start": 39116, "IsComparative": "1", "id": "st_344"}, {"end": 39338, "text": "As in any classification problem, we may wish to consider generative approaches or discriminative approaches.", "rank": 345, "start": 39229, "IsComparative": "1", "id": "st_345"}, {"end": 39441, "text": "In particular, by using one LDA module for each class, we obtain a generative model for classification.", "rank": 346, "start": 39338, "IsComparative": "1", "id": "st_346"}, {"end": 39546, "text": "It is also of interest to use LDA in the discriminative framework, and this is our focus in this section.", "rank": 347, "start": 39441, "IsComparative": "1", "id": "st_347"}]}, {"paragraph_info": {"end": 40087, "start": 39546, "text": "A challenging aspect of the document classification problem is the choice of features.Treating individual words as features yields a rich but very large feature set (Joachims, 1999).One way to reduce this feature set is to use an LDA model for dimensionality reduction.In particular, LDA reduces any document to a fixed set of real-valued featuresthe posterior Dirichlet parameters (w) associated with the document.It is of interest to see how much discriminatory information we lose in reducing the document description to these parameters.", "rank": 137, "paragraph_comparative_number": 2, "entities": [], "id": "p_137"}, "sentences": [{"end": 39632, "text": "A challenging aspect of the document classification problem is the choice of features.", "rank": 348, "start": 39546, "IsComparative": "1", "id": "st_348"}, {"end": 39728, "text": "Treating individual words as features yields a rich but very large feature set (Joachims, 1999).", "rank": 349, "start": 39632, "IsComparative": "0", "id": "st_349"}, {"end": 39815, "text": "One way to reduce this feature set is to use an LDA model for dimensionality reduction.", "rank": 350, "start": 39728, "IsComparative": "0", "id": "st_350"}, {"end": 39961, "text": "In particular, LDA reduces any document to a fixed set of real-valued featuresthe posterior Dirichlet parameters (w) associated with the document.", "rank": 351, "start": 39815, "IsComparative": "1", "id": "st_351"}, {"end": 40087, "text": "It is of interest to see how much discriminatory information we lose in reducing the document description to these parameters.", "rank": 352, "start": 39961, "IsComparative": "0", "id": "st_352"}]}, {"paragraph_info": {"end": 40223, "start": 40087, "text": "We conducted two binary classification experiments using the Reuters-21578 dataset.The dataset contains 8000 documents and 15,818 words.", "rank": 138, "paragraph_comparative_number": 2, "entities": [], "id": "p_138"}, "sentences": [{"end": 40170, "text": "We conducted two binary classification experiments using the Reuters-21578 dataset.", "rank": 353, "start": 40087, "IsComparative": "1", "id": "st_353"}, {"end": 40223, "text": "The dataset contains 8000 documents and 15,818 words.", "rank": 354, "start": 40170, "IsComparative": "1", "id": "st_354"}]}, {"paragraph_info": {"end": 40522, "start": 40223, "text": "In these experiments, we estimated the parameters of an LDA model on all the documents, without reference to their true class label.We then trained a support vector machine (SVM) on the low-dimensional representations provided by LDA and compared this SVM to an SVM trained on all the word features.", "rank": 139, "paragraph_comparative_number": 1, "entities": [], "id": "p_139"}, "sentences": [{"end": 40355, "text": "In these experiments, we estimated the parameters of an LDA model on all the documents, without reference to their true class label.", "rank": 355, "start": 40223, "IsComparative": "1", "id": "st_355"}, {"end": 40522, "text": "We then trained a support vector machine (SVM) on the low-dimensional representations provided by LDA and compared this SVM to an SVM trained on all the word features.", "rank": 356, "start": 40355, "IsComparative": "0", "id": "st_356"}]}, {"paragraph_info": {"end": 40758, "start": 40522, "text": "Using the SVMLight software package (Joachims, 1999), we compared an SVM trained on all the word features with those trained on features induced by a 50-topic LDA model.Note that we reduce the feature space by 99.6 percent in this case.", "rank": 140, "paragraph_comparative_number": 0, "entities": [], "id": "p_140"}, "sentences": [{"end": 40691, "text": "Using the SVMLight software package (Joachims, 1999), we compared an SVM trained on all the word features with those trained on features induced by a 50-topic LDA model.", "rank": 357, "start": 40522, "IsComparative": "0", "id": "st_357"}, {"end": 40758, "text": "Note that we reduce the feature space by 99.6 percent in this case.", "rank": 358, "start": 40691, "IsComparative": "0", "id": "st_358"}]}, {"paragraph_info": {"end": 41171, "start": 40758, "text": "Figure 10 shows our results.We see that there is little reduction in classification performance in using the LDA-based features; indeed, in almost all cases the performance is improved with the LDA features.Although these results need further substantiation, they suggest that the topic-based representation provided by LDA may be useful as a fast filtering algorithm for feature selection in text classification.", "rank": 141, "paragraph_comparative_number": 1, "entities": [], "id": "p_141"}, "sentences": [{"end": 40786, "text": "Figure 10 shows our results.", "rank": 359, "start": 40758, "IsComparative": "1", "id": "st_359"}, {"end": 40965, "text": "We see that there is little reduction in classification performance in using the LDA-based features; indeed, in almost all cases the performance is improved with the LDA features.", "rank": 360, "start": 40786, "IsComparative": "0", "id": "st_360"}, {"end": 41171, "text": "Although these results need further substantiation, they suggest that the topic-based representation provided by LDA may be useful as a fast filtering algorithm for feature selection in text classification.", "rank": 361, "start": 40965, "IsComparative": "0", "id": "st_361"}]}, {"paragraph_info": {"end": 41198, "start": 41171, "text": "7.3 Collaborative filtering", "rank": 142, "paragraph_comparative_number": 0, "entities": [], "id": "p_142"}, "sentences": [{"end": 41198, "text": "7.3 Collaborative filtering", "rank": 362, "start": 41171, "IsComparative": "0", "id": "st_362"}]}, {"paragraph_info": {"end": 41449, "start": 41198, "text": "Our final experiment uses the EachMovie collaborative filtering data.In this data set, a collection of users indicates their preferred movie choices.A user and the movies chosen are analogous to a document and the words in the document (respectively).", "rank": 143, "paragraph_comparative_number": 2, "entities": [], "id": "p_143"}, "sentences": [{"end": 41267, "text": "Our final experiment uses the EachMovie collaborative filtering data.", "rank": 363, "start": 41198, "IsComparative": "1", "id": "st_363"}, {"end": 41347, "text": "In this data set, a collection of users indicates their preferred movie choices.", "rank": 364, "start": 41267, "IsComparative": "1", "id": "st_364"}, {"end": 41449, "text": "A user and the movies chosen are analogous to a document and the words in the document (respectively).", "rank": 365, "start": 41347, "IsComparative": "0", "id": "st_365"}]}, {"paragraph_info": {"end": 41864, "start": 41449, "text": "The collaborative filtering task is as follows.We train a model on a fully observed set of users.Then, for each unobserved user, we are shown all but one of the movies preferred by that user and are asked to predict what the held-out movie is.The different algorithms are evaluated according to the likelihood they assign to the held-out movie.More precisely, define the predictive perplexity on M test users to be:", "rank": 144, "paragraph_comparative_number": 1, "entities": [], "id": "p_144"}, "sentences": [{"end": 41496, "text": "The collaborative filtering task is as follows.", "rank": 366, "start": 41449, "IsComparative": "0", "id": "st_366"}, {"end": 41546, "text": "We train a model on a fully observed set of users.", "rank": 367, "start": 41496, "IsComparative": "0", "id": "st_367"}, {"end": 41692, "text": "Then, for each unobserved user, we are shown all but one of the movies preferred by that user and are asked to predict what the held-out movie is.", "rank": 368, "start": 41546, "IsComparative": "0", "id": "st_368"}, {"end": 41793, "text": "The different algorithms are evaluated according to the likelihood they assign to the held-out movie.", "rank": 369, "start": 41692, "IsComparative": "0", "id": "st_369"}, {"end": 41864, "text": "More precisely, define the predictive perplexity on M test users to be:", "rank": 370, "start": 41793, "IsComparative": "1", "id": "st_370"}]}, {"paragraph_info": {"end": 42082, "start": 41864, "text": "We restricted the EachMovie dataset to users that positively rated at least 100 movies (a positive rating is at least four out of five stars).We divided this set of users into 3300 training users and 390 testing users.", "rank": 145, "paragraph_comparative_number": 1, "entities": [], "id": "p_145"}, "sentences": [{"end": 42006, "text": "We restricted the EachMovie dataset to users that positively rated at least 100 movies (a positive rating is at least four out of five stars).", "rank": 371, "start": 41864, "IsComparative": "1", "id": "st_371"}, {"end": 42082, "text": "We divided this set of users into 3300 training users and 390 testing users.", "rank": 372, "start": 42006, "IsComparative": "0", "id": "st_372"}]}, {"paragraph_info": {"end": 42233, "start": 42082, "text": "Under the mixture of unigrams model, the probability of a movie given a set of observed movies is obtained from the posterior distribution over topics:", "rank": 146, "paragraph_comparative_number": 0, "entities": [], "id": "p_146"}, "sentences": [{"end": 42233, "text": "Under the mixture of unigrams model, the probability of a movie given a set of observed movies is obtained from the posterior distribution over topics:", "rank": 373, "start": 42082, "IsComparative": "0", "id": "st_373"}]}, {"paragraph_info": {"end": 42509, "start": 42233, "text": "In the pLSI model, the probability of a held-out movie is given by the same equation except that p(z|wobs) is computed by folding in the previously seen movies.Finally, in the LDA model, the probability of a held-out movie is given by integrating over the posterior Dirichlet:", "rank": 147, "paragraph_comparative_number": 0, "entities": [], "id": "p_147"}, "sentences": [{"end": 42393, "text": "In the pLSI model, the probability of a held-out movie is given by the same equation except that p(z|wobs) is computed by folding in the previously seen movies.", "rank": 374, "start": 42233, "IsComparative": "0", "id": "st_374"}, {"end": 42509, "text": "Finally, in the LDA model, the probability of a held-out movie is given by integrating over the posterior Dirichlet:", "rank": 375, "start": 42393, "IsComparative": "0", "id": "st_375"}]}, {"paragraph_info": {"end": 42749, "start": 42509, "text": "where p(|wobs) is given by the variational inference method described in Section 5.2.Note that this quantity is efficient to compute.We can interchange the sum and integral sign, and compute a linear combination of k Dirichlet expectations.", "rank": 148, "paragraph_comparative_number": 1, "entities": [], "id": "p_148"}, "sentences": [{"end": 42594, "text": "where p(|wobs) is given by the variational inference method described in Section 5.2.", "rank": 376, "start": 42509, "IsComparative": "0", "id": "st_376"}, {"end": 42642, "text": "Note that this quantity is efficient to compute.", "rank": 377, "start": 42594, "IsComparative": "0", "id": "st_377"}, {"end": 42749, "text": "We can interchange the sum and integral sign, and compute a linear combination of k Dirichlet expectations.", "rank": 378, "start": 42642, "IsComparative": "1", "id": "st_378"}]}, {"paragraph_info": {"end": 42988, "start": 42749, "text": "With a vocabulary of 1600 movies, we find the predictive perplexities illustrated in Figure 11.Again, the mixture of unigrams model and pLSI are corrected for overfitting, but the best predictive perplexities are obtained by the LDA model.", "rank": 149, "paragraph_comparative_number": 1, "entities": [], "id": "p_149"}, "sentences": [{"end": 42844, "text": "With a vocabulary of 1600 movies, we find the predictive perplexities illustrated in Figure 11.", "rank": 379, "start": 42749, "IsComparative": "1", "id": "st_379"}, {"end": 42988, "text": "Again, the mixture of unigrams model and pLSI are corrected for overfitting, but the best predictive perplexities are obtained by the LDA model.", "rank": 380, "start": 42844, "IsComparative": "0", "id": "st_380"}]}, {"paragraph_info": {"end": 43000, "start": 42988, "text": "8.Discussion", "rank": 150, "paragraph_comparative_number": 2, "entities": [], "id": "p_150"}, "sentences": [{"end": 42990, "text": "8.", "rank": 381, "start": 42988, "IsComparative": "1", "id": "st_381"}, {"end": 43000, "text": "Discussion", "rank": 382, "start": 42990, "IsComparative": "1", "id": "st_382"}]}, {"paragraph_info": {"end": 43507, "start": 43000, "text": "We have described latent Dirichlet allocation, a flexible generative probabilistic model for collec- tions of discrete data.LDA is based on a simple exchangeability assumption for the words and topics in a document; it is therefore realized by a straightforward application of de Finettis repre- sentation theorem.We can view LDA as a dimensionality reduction technique, in the spirit of LSI, but with proper underlying generative probabilistic semantics that make sense for the type of data that it models.", "rank": 151, "paragraph_comparative_number": 1, "entities": [], "id": "p_151"}, "sentences": [{"end": 43124, "text": "We have described latent Dirichlet allocation, a flexible generative probabilistic model for collec- tions of discrete data.", "rank": 383, "start": 43000, "IsComparative": "0", "id": "st_383"}, {"end": 43314, "text": "LDA is based on a simple exchangeability assumption for the words and topics in a document; it is therefore realized by a straightforward application of de Finettis repre- sentation theorem.", "rank": 384, "start": 43124, "IsComparative": "0", "id": "st_384"}, {"end": 43507, "text": "We can view LDA as a dimensionality reduction technique, in the spirit of LSI, but with proper underlying generative probabilistic semantics that make sense for the type of data that it models.", "rank": 385, "start": 43314, "IsComparative": "1", "id": "st_385"}]}, {"paragraph_info": {"end": 44586, "start": 43507, "text": "Exact inference is intractable for LDA, but any of a large suite of approximate inference algo- rithms can be used for inference and parameter estimation within the LDA framework.We have presented a simple convexity-based variational approach for inference, showing that it yields a fast algorithm resulting in reasonable comparative performance in terms of test set likelihood.Other approaches that might be considered include Laplace approximation, higher-order variational tech- niques, and Monte Carlo methods.In particular, Leisink and Kappen (2002) have presented a general methodology for converting low-order variational lower bounds into higher-order varia- tional bounds.It is also possible to achieve higher accuracy by dispensing with the requirement of maintaining a bound, and indeed Minka and Lafferty (2002) have shown that improved inferential accuracy can be obtained for the LDA model via a higher-order variational technique known as ex- pectation propagation.Finally, Griffiths and Steyvers (2002) have presented a Markov chain Monte Carlo algorithm for LDA.", "rank": 152, "paragraph_comparative_number": 3, "entities": [], "id": "p_152"}, "sentences": [{"end": 43686, "text": "Exact inference is intractable for LDA, but any of a large suite of approximate inference algo- rithms can be used for inference and parameter estimation within the LDA framework.", "rank": 386, "start": 43507, "IsComparative": "0", "id": "st_386"}, {"end": 43885, "text": "We have presented a simple convexity-based variational approach for inference, showing that it yields a fast algorithm resulting in reasonable comparative performance in terms of test set likelihood.", "rank": 387, "start": 43686, "IsComparative": "0", "id": "st_387"}, {"end": 44021, "text": "Other approaches that might be considered include Laplace approximation, higher-order variational tech- niques, and Monte Carlo methods.", "rank": 388, "start": 43885, "IsComparative": "1", "id": "st_388"}, {"end": 44188, "text": "In particular, Leisink and Kappen (2002) have presented a general methodology for converting low-order variational lower bounds into higher-order varia- tional bounds.", "rank": 389, "start": 44021, "IsComparative": "1", "id": "st_389"}, {"end": 44487, "text": "It is also possible to achieve higher accuracy by dispensing with the requirement of maintaining a bound, and indeed Minka and Lafferty (2002) have shown that improved inferential accuracy can be obtained for the LDA model via a higher-order variational technique known as ex- pectation propagation.", "rank": 390, "start": 44188, "IsComparative": "1", "id": "st_390"}, {"end": 44586, "text": "Finally, Griffiths and Steyvers (2002) have presented a Markov chain Monte Carlo algorithm for LDA.", "rank": 391, "start": 44487, "IsComparative": "0", "id": "st_391"}]}, {"paragraph_info": {"end": 46791, "start": 44586, "text": "LDA is a simple model, and although we view it as a competitor to methods such as LSI and pLSI in the setting of dimensionality reduction for document collections and other discrete cor- pora, it is also intended to be illustrative of the way in which probabilistic models can be scaled up to provide useful inferential machinery in domains involving multiple levels of structure.In- deed, the principal advantages of generative models such as LDA include their modularity and their extensibility.As a probabilistic module, LDA can be readily embedded in a more complex model a property that is not possessed by LSI.In recent work we have used pairs of LDA modules to model relationships between images and their corresponding descriptive captions (Blei and Jordan, 2002).Moreover, there are numerous possible extensions of LDA.For example, LDA is readily extended to continuous data or other non-multinomial data.As is the case for other mixture models, including finite mixture models and hidden Markov models, the emission probability p(wn |zn) contributes only a likelihood value to the inference procedures for LDA, and other likelihoods are readily substituted in its place.In particular, it is straightforward to develop a continuous variant of LDA in which Gaussian observables are used in place of multinomials.Another simple extension of LDA comes from allowing mixtures of Dirichlet distributions in the place of the single Dirichlet of LDA.This allows a richer structure in the latent topic space and in particular allows a form of document clustering that is different from the clustering that is achieved via shared topics.Finally, a variety of extensions of LDA can be considered in which the distributions on the topic variables are elaborated.For example, we could arrange the topics in a time series, essentially relaxing the full exchangeability assumption to one of partial exchangeability.We could also consider partially exchangeable models in which we condition on exogenous variables; thus, for example, the topic distribution could be conditioned on features such as paragraph or sentence, providing a more powerful text model that makes use of information obtained from a parser.", "rank": 153, "paragraph_comparative_number": 3, "entities": [], "id": "p_153"}, "sentences": [{"end": 44966, "text": "LDA is a simple model, and although we view it as a competitor to methods such as LSI and pLSI in the setting of dimensionality reduction for document collections and other discrete cor- pora, it is also intended to be illustrative of the way in which probabilistic models can be scaled up to provide useful inferential machinery in domains involving multiple levels of structure.", "rank": 392, "start": 44586, "IsComparative": "0", "id": "st_392"}, {"end": 45083, "text": "In- deed, the principal advantages of generative models such as LDA include their modularity and their extensibility.", "rank": 393, "start": 44966, "IsComparative": "0", "id": "st_393"}, {"end": 45202, "text": "As a probabilistic module, LDA can be readily embedded in a more complex model a property that is not possessed by LSI.", "rank": 394, "start": 45083, "IsComparative": "0", "id": "st_394"}, {"end": 45358, "text": "In recent work we have used pairs of LDA modules to model relationships between images and their corresponding descriptive captions (Blei and Jordan, 2002).", "rank": 395, "start": 45202, "IsComparative": "0", "id": "st_395"}, {"end": 45414, "text": "Moreover, there are numerous possible extensions of LDA.", "rank": 396, "start": 45358, "IsComparative": "0", "id": "st_396"}, {"end": 45500, "text": "For example, LDA is readily extended to continuous data or other non-multinomial data.", "rank": 397, "start": 45414, "IsComparative": "0", "id": "st_397"}, {"end": 45766, "text": "As is the case for other mixture models, including finite mixture models and hidden Markov models, the emission probability p(wn |zn) contributes only a likelihood value to the inference procedures for LDA, and other likelihoods are readily substituted in its place.", "rank": 398, "start": 45500, "IsComparative": "1", "id": "st_398"}, {"end": 45906, "text": "In particular, it is straightforward to develop a continuous variant of LDA in which Gaussian observables are used in place of multinomials.", "rank": 399, "start": 45766, "IsComparative": "0", "id": "st_399"}, {"end": 46038, "text": "Another simple extension of LDA comes from allowing mixtures of Dirichlet distributions in the place of the single Dirichlet of LDA.", "rank": 400, "start": 45906, "IsComparative": "1", "id": "st_400"}, {"end": 46223, "text": "This allows a richer structure in the latent topic space and in particular allows a form of document clustering that is different from the clustering that is achieved via shared topics.", "rank": 401, "start": 46038, "IsComparative": "0", "id": "st_401"}, {"end": 46346, "text": "Finally, a variety of extensions of LDA can be considered in which the distributions on the topic variables are elaborated.", "rank": 402, "start": 46223, "IsComparative": "0", "id": "st_402"}, {"end": 46496, "text": "For example, we could arrange the topics in a time series, essentially relaxing the full exchangeability assumption to one of partial exchangeability.", "rank": 403, "start": 46346, "IsComparative": "1", "id": "st_403"}, {"end": 46791, "text": "We could also consider partially exchangeable models in which we condition on exogenous variables; thus, for example, the topic distribution could be conditioned on features such as paragraph or sentence, providing a more powerful text model that makes use of information obtained from a parser.", "rank": 404, "start": 46496, "IsComparative": "0", "id": "st_404"}]}], "sentence_scenes_info": [{"x": 1, "text": "We describe latent Dirichlet allocation (LDA), a generative probabilistic model for collections of discrete data such as text corpora."}, {"x": 2, "text": "LDA is a three-level hierarchical Bayesian model, in which each item of a collection is modeled as a finite mixture over an underlying set of topics."}, {"x": 5, "text": "We present efficient approximate inference techniques based on variational methods and an EM algorithm for empirical Bayes parameter estimation."}, {"x": 6, "text": "We report results in document modeling, text classification, and collaborative filtering, comparing to a mixture of unigrams model and the probabilistic LSI model."}, {"x": 11, "text": "Significant progress has been made on this problem by researchers in the field of informa- tion retrieval (IR) (Baeza-Yates and Ribeiro-Neto, 1999)."}, {"x": 12, "text": "The basic methodology proposed by IR researchers for text corporaa methodology successfully deployed in modern Internet search enginesreduces each document in the corpus to a vector of real numbers, each of which repre- sents ratios of counts."}, {"x": 13, "text": "In the popular tf-idf scheme (Salton and McGill, 1983), a basic vocabulary of words or terms is chosen, and, for each document in the corpus, a count is formed of the number of occurrences of each word."}, {"x": 18, "text": "To address these shortcomings, IR researchers have proposed several other dimensionality reduction techniques, most notably latent semantic indexing (LSI) (Deerwester et al., 1990)."}, {"x": 22, "text": "argue that the derived features of LSI, which are linear combinations of the original tf-idf features, can capture some aspects of basic linguistic notions such as synonymy and polysemy."}, {"x": 23, "text": "To substantiate the claims regarding LSI, and to study its relative strengths and weaknesses, it is useful to develop a generative probabilistic model of text corpora and to study the ability of LSI to recover aspects of the generative model from data (Papadimitriou et al., 1998)."}, {"x": 24, "text": "Given a generative model of text, however, it is not clear why one should adopt the LSI methodologyone can attempt to proceed more directly, fitting the model to data using maximum likelihood or Bayesian methods."}, {"x": 25, "text": "A significant step forward in this regard was made by Hofmann (1999), who presented the probabilistic LSI (pLSI) model, also known as the aspect model, as an alternative to LSI."}, {"x": 26, "text": "The pLSI approach, which we describe in detail in Section 4.3, models each word in a document as a sample from a mixture model, where the mixture components are multinomial random variables that can be viewed as representations of topics."}, {"x": 31, "text": "In pLSI, each document is represented as a list of numbers (the mixing proportions for topics), and there is no generative probabilistic model for these numbers."}, {"x": 33, "text": "To see how to proceed beyond pLSI, let us consider the fundamental probabilistic assumptions underlying the class of dimensionality reduction methods that includes LSI and pLSI."}, {"x": 35, "text": "In the language of probability theory, this is an assumption of exchangeability for the words in a document (Aldous, 1985)."}, {"x": 37, "text": "A classic representation theorem due to de Finetti (1990) establishes that any collection of ex- changeable random variables has a representation as a mixture distributionin general an infinite mixture."}, {"x": 39, "text": "This line of thinking leads to the latent Dirichlet allocation (LDA) model that we present in the current paper."}, {"x": 44, "text": "We aim to demonstrate in the current paper that, by taking the de Finetti theorem seriously, we can capture significant intra-document statistical structure via the mixing distribution."}, {"x": 49, "text": "The LDA model is presented in Section 3 and is compared to related latent variable models in Section 4."}, {"x": 50, "text": "We discuss inference and parameter estimation for LDA in Section 5."}, {"x": 51, "text": "An illustrative example of fitting LDA to data is provided in Section 6."}, {"x": 58, "text": "It is important to note, however, that the LDA model is not necessarily tied to text, and has applications to other problems involving collections of data, including data from domains such as collaborative filtering, content-based image retrieval and bioinformatics."}, {"x": 71, "text": "3."}, {"x": 72, "text": "Latent Dirichlet allocation"}, {"x": 77, "text": "Choose N  Poisson()."}, {"x": 85, "text": "First, the dimensionality k of the Dirichlet distribution (and thus the dimensionality of the topic variable z) is assumed known and fixed."}, {"x": 86, "text": "Second, the word probabilities are parameter- ized by a kV matrix  where  = p(wj = 1|zi = 1), which for now we treat as a fixed quantity ij that is to be estimated."}, {"x": 87, "text": "Finally, the Poisson assumption is not critical to anything that follows and more realistic document length distributions can be used as needed."}, {"x": 90, "text": "A k-dimensional Dirichlet random variable  can take values in the (k  1)-simplex (a k-vector  lies in the (k  1)-simplex if i  0, ki=1 i = 1), and has the following probability density on this simplex: where the parameter  is a k-vector with components i > 0, and where (x) is the Gamma function."}, {"x": 91, "text": "The Dirichlet is a convenient distribution on the simplex  it is in the exponential family, has finite dimensional sufficient statistics, and is conjugate to the multinomial distribution."}, {"x": 102, "text": "A classical clustering model would involve a two-level model in which a Dirichlet is sampled once for a corpus, a multinomial clustering variable is selected once for each document in the corpus, and a set of words are selected for the document conditional on the cluster variable."}, {"x": 106, "text": "Structures similar to that shown in Figure 1 are often studied in Bayesian statistical modeling, where they are referred to as hierarchical models (Gelman et al., 1995), or more precisely as con- ditionally independent hierarchical models (Kass and Steffey, 1989)."}, {"x": 107, "text": "Such models are also often referred to as parametric empirical Bayes models, a term that refers not only to a particular model structure, but also to the methods used for estimating parameters in the model (Morris, 1983)."}, {"x": 108, "text": "In- deed, as we discuss in Section 5, we adopt the empirical Bayes approach to estimating parameters such as  and  in simple implementations of LDA, but we also consider fuller Bayesian approaches as well."}, {"x": 110, "text": "A finite set of random variables <z1,...,zN> is said to be exchangeable if the joint distribution is invariant to permutation."}, {"x": 111, "text": "If  is a permutation of the integers from 1 to N: p(z1,... ,zN) = p(z(1),... ,z(N))."}, {"x": 117, "text": "(3) by marginalizing out the topic variables and endowing  with a Dirichlet distribution."}, {"x": 119, "text": "The LDA model shown in Figure 1 is somewhat more elaborate than the two-level models often studied in the classical hierarchical Bayesian literature."}, {"x": 132, "text": "Note that this distribution on the (V  1)- simplex is attained with only k + kV parameters yet exhibits a very interesting multimodal structure."}, {"x": 135, "text": "In this section we compare LDA to simpler latent variable models for textthe unigram model, a mixture of unigrams, and the pLSI model."}, {"x": 137, "text": "4.1 Unigram model"}, {"x": 150, "text": "Probabilistic latent semantic indexing (pLSI) is another widely used document model (Hofmann, 1999)."}, {"x": 151, "text": "The pLSI model, illustrated in Figure 3c, posits that a document label d and a word wn are"}, {"x": 154, "text": "The pLSI model attempts to relax the simplifying assumption made in the mixture of unigrams model that each document is generated from only one topic."}, {"x": 158, "text": "For this reason, pLSI is not a well-defined generative model of documents; there is no natural way to use it to assign probability to a previously unseen document."}, {"x": 159, "text": "A further difficulty with pLSI, which also stems from the use of a distribution indexed by train- ing documents, is that the number of parameters which must be estimated grows linearly with the number of training documents."}, {"x": 160, "text": "The parameters for a k-topic pLSI model are k multinomial distri- butions of size V and M mixtures over the k hidden topics."}, {"x": 161, "text": "This gives kV + kM parameters and therefore linear growth in M. The linear growth in parameters suggests that the model is prone to overfitting and, empirically, overfitting is indeed a serious problem (see Section 7.1)."}, {"x": 166, "text": "Furthermore, the k + kV parameters in a k-topic LDA model do not grow with the size of the training corpus."}, {"x": 167, "text": "We will see in Section 7.1 that LDA does not suffer from the same overfitting issues as pLSI."}, {"x": 169, "text": "A good way of illustrating the differences between LDA and the other latent topic models is by considering the geometry of the latent space, and seeing how a document is represented in that geometry under each model."}, {"x": 170, "text": "All four of the models described aboveunigram, mixture of unigrams, pLSI, and LDA operate in the space of distributions over words."}, {"x": 176, "text": "The pLSI model posits that each word of a training document comes from a randomly chosen topic."}, {"x": 178, "text": "There is one such distribution for each document; the set of training documents thus defines an empirical distribution on the topic simplex."}, {"x": 182, "text": "5."}, {"x": 183, "text": "Inference and Parameter Estimation"}, {"x": 184, "text": "We have described the motivation behind LDA and illustrated its conceptual advantages over other latent topic models."}, {"x": 188, "text": "The key inferential problem that we need to solve in order to use LDA is that of computing the posterior distribution of the hidden variables given a document:"}, {"x": 194, "text": "Dickey shows that this function is an expectation under a particular extension to the Dirichlet distribution which can be represented with special hypergeometric functions."}, {"x": 195, "text": "It has been used in a Bayesian context for censored discrete data to represent the posterior on  which, in that setting, is a random parameter (Dickey et al., 1987)."}, {"x": 196, "text": "Although the posterior distribution is intractable for exact inference, a wide variety of approxi- mate inference algorithms can be considered for LDA, including Laplace approximation, variational approximation, and Markov chain Monte Carlo (Jordan, 1999)."}, {"x": 197, "text": "In this section we describe a simple convexity-based variational algorithm for inference in LDA, and discuss some of the alternatives in Section 8."}, {"x": 203, "text": "Consider in particular the LDA model shown in Figure 5 (left)."}, {"x": 206, "text": "This family is characterized by the following variational distribution: where the Dirichlet parameter  and the multinomial parameters (1 , ."}, {"x": 214, "text": "Thus the optimizing values of the variational parameters are found by minimizing the Kullback- Leibler (KL) divergence between the variational distribution and the true posterior p(,z|w,,)."}, {"x": 216, "text": "In particular, we show in Appendix A.3 that by computing the derivatives of the KL divergence and setting them equal to zero, we obtain the following pair of update equations:"}, {"x": 219, "text": "As we show in Appendix A.1, the expectation in the multinomial update can be computed as follows: E <log( )|> = ( ) k   , (8) where  is the first derivative of the log function which is computable via Taylor approxima- tions (Abramowitz and Stegun, 1970)."}, {"x": 222, "text": "The Dirichlet update is a poste- rior Dirichlet given expected observations taken under the variational distribution, E<zn |n>."}, {"x": 223, "text": "The multinomial update is akin to using Bayes theorem, p(zn |wn)  p(wn |zn)p(zn), where p(zn) is approximated by the exponential of the expected value of its logarithm under the variational distri- bution."}, {"x": 230, "text": "In particular, we view the Dirichlet parameters (w) as providing a representation of a document in the topic simplex."}, {"x": 232, "text": "From the pseudocode it is clear that each iteration of variational inference for LDA requires O((N + 1)k) operations."}, {"x": 235, "text": "5.3 Parameter estimation"}, {"x": 236, "text": "In this section we present an empirical Bayes method for parameter estimation in the LDA model (see Section 5.4 for a fuller Bayesian approach)."}, {"x": 240, "text": "We can thus find approximate empirical Bayes estimates for the LDA model via an alternating variational EM procedure that maximizes a lower bound with respect to the variational parameters  and , and then, for fixed values of the variational parameters, maximizes the lower bound with respect to the model parameters  and ."}, {"x": 241, "text": "We provide a detailed derivation of the variational EM algorithm for LDA in Appendix A.4."}, {"x": 244, "text": "(E-step) For each document, find the optimizing values of the variational parameters <d , d : d  D>."}, {"x": 250, "text": "In Appendix A.4, we show that the M-step update for the conditional multinomial parameter  can be written out analytically:"}, {"x": 251, "text": "We further show that the M-step update for Dirichlet parameter  can be implemented using an efficient Newton-Raphson method in which the Hessian is inverted in linear time."}, {"x": 254, "text": "A new document is very likely to contain words that did not appear in any of the documents in a training corpus."}, {"x": 256, "text": "The standard approach to coping with this problem is to smooth the multinomial parameters, assigning positive probability to all vocabulary items whether or not they are observed in the training set (Jelinek, 1997)."}, {"x": 257, "text": "Laplace smoothing is commonly used; this essentially yields the mean of the posterior distribution under a uniform Dirichlet prior on the multinomial parameters."}, {"x": 258, "text": "Unfortunately, in the mixture model setting, simple Laplace smoothing is no longer justified as a maximum a posteriori method (although it is often implemented in practice; cf."}, {"x": 260, "text": "In fact, by placing a Dirichlet prior on the multinomial parameter we obtain an intractable posterior in the mixture model setting, for much the same reason that one obtains an intractable posterior in the basic LDA model."}, {"x": 261, "text": "Our proposed solution to this problem is to simply apply variational inference methods to the extended model that includes Dirichlet smoothing on the multinomial parameter."}, {"x": 262, "text": "In the LDA setting, we obtain the extended graphical model shown in Figure 7."}, {"x": 263, "text": "We treat  as a k  V random matrix (one row for each mixture component), where we assume that each row is independently drawn from an exchangeable Dirichlet distribution.2 We now extend our infer- ence procedures to treat the i as random variables that are endowed with a posterior distribution,conditioned on the data."}, {"x": 264, "text": "Thus we move beyond the empirical Bayes procedure of Section 5.3 and consider a fuller Bayesian approach to LDA."}, {"x": 265, "text": "We consider a variational approach to Bayesian inference that places a separable distribution on the random variables , , and z (Attias, 2000):"}, {"x": 266, "text": "where qd(,z|,) is the variational distribution defined for LDA in Eq."}, {"x": 271, "text": "We are now left with the hyperparameter  on the exchangeable Dirichlet, as well as the hy- perparameter  from before."}, {"x": 272, "text": "Our approach to setting these hyperparameters is again (approximate) empirical Bayeswe use variational EM to find maximum likelihood estimates of these parameters"}, {"x": 277, "text": "In this section, we provide an illustrative example of the use of an LDA model on real data."}, {"x": 278, "text": "Our data are 16,000 documents from a subset of the TREC AP corpus (Harman, 1992)."}, {"x": 279, "text": "After removing a standard list of stop words, we used the EM algorithm described in Section 5.3 to find the Dirichlet and conditional multinomial parameters for a 100-topic LDA model."}, {"x": 289, "text": "While demonstrating the power of LDA, the posterior analysis also highlights some of its lim- itations."}, {"x": 290, "text": "In particular, the bag-of-words assumption allows words that should be generated by the same topic (e.g., William Randolph Hearst Foundation) to be allocated to several different top- ics."}, {"x": 291, "text": "Overcoming this limitation would require some form of extension of the basic LDA model; in particular, we might relax the bag-of-words assumption by assuming partial exchangeability or"}, {"x": 295, "text": "In this section, we discuss our empirical evaluation of LDA in several problem domainsdocument modeling, document classification, and collaborative filtering."}, {"x": 297, "text": "To avoid these local maxima, it is important to initialize the EM algorithm appropriately."}, {"x": 298, "text": "In our experiments, we initialize EM by seeding each conditional multinomial distribution with five documents, reduc- ing their effective total length to two words, and smoothing across the whole vocabulary."}, {"x": 301, "text": "We trained a number of latent variable models, including LDA, on two text corpora to compare the generalization performance of these models."}, {"x": 306, "text": "In our experiments, we used a corpus of scientific abstracts from the C. Elegans community (Av- ery, 2002) containing 5,225 abstracts with 28,414 unique terms, and a subset of the TREC AP corpus containing 16,333 newswire articles with 23,075 unique terms."}, {"x": 309, "text": "From the AP data, we further removed words that occurred only once."}, {"x": 310, "text": "We compared LDA with the unigram, mixture of unigrams, and pLSI models described in Sec- tion 4."}, {"x": 311, "text": "We trained all the hidden variable models using EM with exactly the same stopping criteria, that the average change in expected log likelihood is less than 0.001%."}, {"x": 312, "text": "Both the pLSI model and the mixture of unigrams suffer from serious overfitting issues, though for different reasons."}, {"x": 314, "text": "In the mixture of unigrams model, overfitting is a result of peaked posteriors in the training set; a phenomenon familiar in the super- vised setting, where this model is known as the naive Bayes model (Rennie, 2001)."}, {"x": 315, "text": "This leads to a nearly deterministic clustering of the training documents (in the E-step) which is used to determine the word probabilities in each mixture component (in the M-step)."}, {"x": 319, "text": "In the mixture of unigrams, we can alleviate overfitting through the variational Bayesian smooth- ing scheme presented in Section 5.4."}, {"x": 321, "text": "In the pLSI case, the hard clustering problem is alleviated by the fact that each document is allowed to exhibit a different proportion of topics."}, {"x": 322, "text": "However, pLSI only refers to the training doc- uments and a different overfitting problem arises that is due to the dimensionality of the p(z|d) parameter."}, {"x": 331, "text": "Note that pLSI does not overfit as quickly (with respect to k) as the mixture of unigrams."}, {"x": 335, "text": "Note that this gives the pLSI model an unfair advantage by allowing it to refit k  1 parameters to the test data."}, {"x": 337, "text": "As in pLSI, each document can exhibit a different proportion of underlying topics."}, {"x": 338, "text": "However, LDA can easily assign probability to a new document; no heuristics are needed for a new document to be endowed with a different set of topic proportions than were associated with documents in the training corpus."}, {"x": 340, "text": "The pLSI model and mixture of unigrams are suitably corrected for overfitting."}, {"x": 341, "text": "The latent variable models perform better than the simple unigram model."}, {"x": 343, "text": "7.2 Document classification"}, {"x": 346, "text": "In particular, by using one LDA module for each class, we obtain a generative model for classification."}, {"x": 347, "text": "It is also of interest to use LDA in the discriminative framework, and this is our focus in this section."}, {"x": 350, "text": "One way to reduce this feature set is to use an LDA model for dimensionality reduction."}, {"x": 351, "text": "In particular, LDA reduces any document to a fixed set of real-valued featuresthe posterior Dirichlet parameters (w) associated with the document."}, {"x": 355, "text": "In these experiments, we estimated the parameters of an LDA model on all the documents, without reference to their true class label."}, {"x": 356, "text": "We then trained a support vector machine (SVM) on the low-dimensional representations provided by LDA and compared this SVM to an SVM trained on all the word features."}, {"x": 357, "text": "Using the SVMLight software package (Joachims, 1999), we compared an SVM trained on all the word features with those trained on features induced by a 50-topic LDA model."}, {"x": 360, "text": "We see that there is little reduction in classification performance in using the LDA-based features; indeed, in almost all cases the performance is improved with the LDA features."}, {"x": 361, "text": "Although these results need further substantiation, they suggest that the topic-based representation provided by LDA may be useful as a fast filtering algorithm for feature selection in text classification."}, {"x": 374, "text": "In the pLSI model, the probability of a held-out movie is given by the same equation except that p(z|wobs) is computed by folding in the previously seen movies."}, {"x": 375, "text": "Finally, in the LDA model, the probability of a held-out movie is given by integrating over the posterior Dirichlet:"}, {"x": 378, "text": "We can interchange the sum and integral sign, and compute a linear combination of k Dirichlet expectations."}, {"x": 380, "text": "Again, the mixture of unigrams model and pLSI are corrected for overfitting, but the best predictive perplexities are obtained by the LDA model."}, {"x": 383, "text": "We have described latent Dirichlet allocation, a flexible generative probabilistic model for collec- tions of discrete data."}, {"x": 385, "text": "We can view LDA as a dimensionality reduction technique, in the spirit of LSI, but with proper underlying generative probabilistic semantics that make sense for the type of data that it models."}, {"x": 386, "text": "Exact inference is intractable for LDA, but any of a large suite of approximate inference algo- rithms can be used for inference and parameter estimation within the LDA framework."}, {"x": 388, "text": "Other approaches that might be considered include Laplace approximation, higher-order variational tech- niques, and Monte Carlo methods."}, {"x": 390, "text": "It is also possible to achieve higher accuracy by dispensing with the requirement of maintaining a bound, and indeed Minka and Lafferty (2002) have shown that improved inferential accuracy can be obtained for the LDA model via a higher-order variational technique known as ex- pectation propagation."}, {"x": 391, "text": "Finally, Griffiths and Steyvers (2002) have presented a Markov chain Monte Carlo algorithm for LDA."}, {"x": 392, "text": "LDA is a simple model, and although we view it as a competitor to methods such as LSI and pLSI in the setting of dimensionality reduction for document collections and other discrete cor- pora, it is also intended to be illustrative of the way in which probabilistic models can be scaled up to provide useful inferential machinery in domains involving multiple levels of structure."}, {"x": 393, "text": "In- deed, the principal advantages of generative models such as LDA include their modularity and their extensibility."}, {"x": 394, "text": "As a probabilistic module, LDA can be readily embedded in a more complex model a property that is not possessed by LSI."}, {"x": 395, "text": "In recent work we have used pairs of LDA modules to model relationships between images and their corresponding descriptive captions (Blei and Jordan, 2002)."}, {"x": 397, "text": "For example, LDA is readily extended to continuous data or other non-multinomial data."}, {"x": 398, "text": "As is the case for other mixture models, including finite mixture models and hidden Markov models, the emission probability p(wn |zn) contributes only a likelihood value to the inference procedures for LDA, and other likelihoods are readily substituted in its place."}, {"x": 399, "text": "In particular, it is straightforward to develop a continuous variant of LDA in which Gaussian observables are used in place of multinomials."}, {"x": 400, "text": "Another simple extension of LDA comes from allowing mixtures of Dirichlet distributions in the place of the single Dirichlet of LDA."}, {"x": 402, "text": "Finally, a variety of extensions of LDA can be considered in which the distributions on the topic variables are elaborated."}], "characters": [{"name": "Memphis", "offsets": [28436, 28550, 35801], "paragraph_occurrences": [103, 104, 128], "sentence_occurrences": [250, 251, 315], "affiliation": "light", "frequency": 3, "id": "Memphis,_Tennessee"}, {"name": "Latent semantic indexing", "offsets": [795, 2765, 2796, 3103, 3291, 3449, 3619, 3849, 3920, 5272, 43388, 44668, 45198], "paragraph_occurrences": [1, 5, 5, 5, 6, 6, 6, 7, 7, 9, 151, 153, 153], "sentence_occurrences": [6, 18, 18, 22, 23, 23, 24, 25, 25, 33, 385, 392, 394], "affiliation": "light", "frequency": 13, "id": "Latent_semantic_indexing"}, {"name": "Hessian matrix", "offsets": [28666], "paragraph_occurrences": [104], "sentence_occurrences": [251], "affiliation": "light", "frequency": 1, "id": "Hessian_matrix"}, {"name": "n-gram", "offsets": [16214], "paragraph_occurrences": [55], "sentence_occurrences": [137], "affiliation": "light", "frequency": 1, "id": "N-gram"}, {"name": "Additive smoothing", "offsets": [29293, 29506], "paragraph_occurrences": [106, 107], "sentence_occurrences": [256, 258], "affiliation": "light", "frequency": 2, "id": "Additive_smoothing"}, {"name": "Empirical Bayes method", "offsets": [605, 13365, 13584, 26927, 27446, 30463], "paragraph_occurrences": [1, 37, 37, 97, 98, 108], "sentence_occurrences": [5, 107, 108, 236, 240, 264], "affiliation": "light", "frequency": 6, "id": "Empirical_Bayes_method"}, {"name": "Associated Press", "offsets": [31623, 34666, 34934], "paragraph_occurrences": [114, 126, 126], "sentence_occurrences": [278, 306, 309], "affiliation": "light", "frequency": 3, "id": "Associated_Press"}, {"name": "Multiplicative group of integers modulo n", "offsets": [13806, 13951], "paragraph_occurrences": [39, 39], "sentence_occurrences": [110, 111], "affiliation": "light", "frequency": 2, "id": "Multiplicative_group_of_integers_modulo_n"}, {"name": "Abramowitz and Stegun", "offsets": [25325], "paragraph_occurrences": [91], "sentence_occurrences": [219], "affiliation": "light", "frequency": 1, "id": "Abramowitz_and_Stegun"}, {"name": "Parameter", "offsets": [21382, 26877], "paragraph_occurrences": [76, 96], "sentence_occurrences": [183, 235], "affiliation": "light", "frequency": 2, "id": "Parameter"}, {"name": "Naive Bayes classifier", "offsets": [35598], "paragraph_occurrences": [128], "sentence_occurrences": [314], "affiliation": "light", "frequency": 1, "id": "Naive_Bayes_classifier"}, {"name": "Caenorhabditis elegans", "offsets": [34551], "paragraph_occurrences": [126], "sentence_occurrences": [306], "affiliation": "light", "frequency": 1, "id": "Caenorhabditis_elegans"}, {"name": "Information retrieval", "offsets": [1338, 1413, 2646], "paragraph_occurrences": [4, 4, 5], "sentence_occurrences": [11, 12, 18], "affiliation": "light", "frequency": 3, "id": "Information_retrieval"}, {"name": "Dirichlet distribution", "offsets": [10452, 14836, 11079, 11363, 12550, 22474, 24139, 25417, 25451, 26354, 28572, 29408, 29672, 29995, 31168, 31756, 30267, 39907, 42726, 45970, 46021], "paragraph_occurrences": [31, 42, 32, 32, 36, 82, 86, 92, 92, 94, 104, 106, 107, 107, 111, 114, 108, 137, 148, 153, 153], "sentence_occurrences": [85, 117, 90, 91, 102, 194, 206, 222, 222, 230, 251, 257, 260, 261, 271, 279, 263, 351, 378, 400, 400], "affiliation": "light", "frequency": 21, "id": "Dirichlet_distribution"}, {"name": "Jordan", "offsets": [45344], "paragraph_occurrences": [153], "sentence_occurrences": [395], "affiliation": "light", "frequency": 1, "id": "Jordan"}, {"name": "Morris", "offsets": [13519], "paragraph_occurrences": [37], "sentence_occurrences": [107], "affiliation": "light", "frequency": 1, "id": "Morris,_Minnesota"}, {"name": "Gamma function", "offsets": [11344], "paragraph_occurrences": [32], "sentence_occurrences": [90], "affiliation": "light", "frequency": 1, "id": "Gamma_function"}, {"name": "Expectation\u2013maximization algorithm", "offsets": [588, 27521, 27792, 31327, 33476, 35140, 31706, 33415], "paragraph_occurrences": [1, 98, 99, 111, 123, 127, 114, 123], "sentence_occurrences": [5, 240, 241, 272, 298, 311, 279, 297], "affiliation": "light", "frequency": 8, "id": "Expectation\u2013maximization_algorithm"}, {"name": "Probabilistic latent semantic analysis", "offsets": [3854, 3928, 4688, 5137, 5280, 16066, 17398, 17462, 17662, 18299, 18471, 18697, 19755, 20074, 20703, 35055, 35264, 36499, 36647, 37826, 38360, 38497, 38888, 42240, 42885, 44676], "paragraph_occurrences": [7, 7, 8, 9, 9, 54, 64, 64, 66, 66, 67, 67, 68, 71, 73, 127, 128, 130, 130, 131, 132, 133, 134, 147, 149, 153], "sentence_occurrences": [25, 26, 31, 33, 33, 135, 150, 151, 154, 158, 159, 160, 167, 170, 176, 310, 312, 321, 322, 331, 335, 337, 340, 374, 380, 392], "affiliation": "light", "frequency": 26, "id": "Probabilistic_latent_semantic_analysis"}, {"name": "Support vector machine", "offsets": [40397, 40475, 40485, 40591], "paragraph_occurrences": [139, 139, 139, 140], "sentence_occurrences": [356, 356, 356, 357], "affiliation": "light", "frequency": 4, "id": "Support_vector_machine"}, {"name": "Newton's method", "offsets": [28631], "paragraph_occurrences": [104], "sentence_occurrences": [251], "affiliation": "light", "frequency": 1, "id": "Newton's_method"}, {"name": "Web search engine", "offsets": [1490], "paragraph_occurrences": [4], "sentence_occurrences": [12], "affiliation": "light", "frequency": 1, "id": "Web_search_engine"}, {"name": "David Aldous", "offsets": [5510], "paragraph_occurrences": [9], "sentence_occurrences": [35], "affiliation": "light", "frequency": 1, "id": "David_Aldous"}, {"name": "Statistical inference", "offsets": [21368], "paragraph_occurrences": [76], "sentence_occurrences": [182], "affiliation": "light", "frequency": 1, "id": "Statistical_inference"}, {"name": "Bayes' theorem", "offsets": [25580], "paragraph_occurrences": [92], "sentence_occurrences": [223], "affiliation": "light", "frequency": 1, "id": "Bayes'_theorem"}, {"name": "McGill University", "offsets": [1663], "paragraph_occurrences": [4], "sentence_occurrences": [13], "affiliation": "light", "frequency": 1, "id": "McGill_University"}, {"name": "de Finetti's theorem", "offsets": [5743, 7184], "paragraph_occurrences": [10, 12], "sentence_occurrences": [37, 44], "affiliation": "light", "frequency": 2, "id": "De_Finetti's_theorem"}, {"name": "Bayesian network", "offsets": [163], "paragraph_occurrences": [1], "sentence_occurrences": [2], "affiliation": "light", "frequency": 1, "id": "Bayesian_network"}, {"name": "Taylor series", "offsets": [25300], "paragraph_occurrences": [91], "sentence_occurrences": [219], "affiliation": "light", "frequency": 1, "id": "Taylor_series"}, {"name": "Latent Dirichlet allocation", "offsets": [20, 6119, 49, 142, 6148, 7947, 8096, 8148, 8684, 9776, 9803, 19841, 20084, 21052, 21442, 21948, 22872, 23073, 23749, 26631, 26982, 27480, 27809, 29862, 30051, 30753, 31544, 31821, 32505, 32840, 33070, 33818, 35008, 38448, 38582, 39034, 39366, 39471, 39776, 39830, 40279, 40453, 40681, 40867, 40952, 41078, 42409, 42978, 43124, 43326, 43542, 43672, 44401, 45030, 45110, 45239, 45427, 45702, 45838, 45934, 46259, 43018], "paragraph_occurrences": [1, 11, 1, 1, 11, 14, 14, 14, 16, 23, 23, 70, 71, 73, 77, 80, 83, 83, 86, 95, 97, 98, 99, 107, 108, 110, 114, 114, 119, 119, 122, 125, 127, 132, 133, 134, 136, 136, 137, 137, 139, 139, 140, 141, 141, 141, 147, 149, 151, 151, 152, 152, 152, 153, 153, 153, 153, 153, 153, 153, 153, 151], "sentence_occurrences": [1, 39, 1, 1, 39, 49, 50, 51, 58, 71, 72, 169, 170, 178, 184, 188, 196, 197, 203, 232, 236, 240, 241, 260, 262, 266, 277, 279, 289, 291, 295, 301, 310, 335, 338, 341, 346, 347, 350, 351, 355, 356, 357, 360, 360, 361, 375, 380, 383, 385, 386, 386, 390, 393, 394, 395, 397, 398, 399, 400, 402, 383], "affiliation": "light", "frequency": 62, "id": "Latent_Dirichlet_allocation"}, {"name": "Bayesian inference", "offsets": [3730, 13114, 13710, 15024, 22582, 27022, 30526, 36354, 30589], "paragraph_occurrences": [6, 37, 37, 44, 82, 97, 108, 129, 109], "sentence_occurrences": [24, 106, 108, 119, 195, 236, 264, 319, 265], "affiliation": "light", "frequency": 9, "id": "Bayesian_inference"}, {"name": "William Randolph Hearst", "offsets": [32681], "paragraph_occurrences": [119], "sentence_occurrences": [290], "affiliation": "light", "frequency": 1, "id": "William_Randolph_Hearst"}, {"name": "Monte Carlo method", "offsets": [44001], "paragraph_occurrences": [152], "sentence_occurrences": [388], "affiliation": "light", "frequency": 1, "id": "Monte_Carlo_method"}, {"name": "Laplace's method", "offsets": [22887], "paragraph_occurrences": [83], "sentence_occurrences": [196], "affiliation": "light", "frequency": 1, "id": "Laplace's_method"}, {"name": "Poisson distribution", "offsets": [10130, 10733], "paragraph_occurrences": [26, 31], "sentence_occurrences": [77, 87], "affiliation": "light", "frequency": 2, "id": "Poisson_distribution"}, {"name": "Document classification", "offsets": [39093], "paragraph_occurrences": [135], "sentence_occurrences": [343], "affiliation": "light", "frequency": 1, "id": "Document_classification"}, {"name": "Pierre-Simon Laplace", "offsets": [43935], "paragraph_occurrences": [152], "sentence_occurrences": [388], "affiliation": "light", "frequency": 1, "id": "Pierre-Simon_Laplace"}, {"name": "Volt", "offsets": [10612, 15828, 18803, 19581], "paragraph_occurrences": [31, 52, 67, 68], "sentence_occurrences": [86, 132, 161, 166], "affiliation": "light", "frequency": 4, "id": "Volt"}, {"name": "Dungeons & Dragons", "offsets": [27981], "paragraph_occurrences": [100], "sentence_occurrences": [244], "affiliation": "light", "frequency": 1, "id": "Dungeons_&_Dragons"}, {"name": "Kullback\u2013Leibler divergence", "offsets": [24703, 24722, 24957], "paragraph_occurrences": [89, 89, 89], "sentence_occurrences": [214, 214, 216], "affiliation": "light", "frequency": 3, "id": "Kullback\u2013Leibler_divergence"}, {"name": "Ricardo Baeza-Yates", "offsets": [1343], "paragraph_occurrences": [4], "sentence_occurrences": [11], "affiliation": "light", "frequency": 1, "id": "Ricardo_Baeza-Yates"}, {"name": "Hidden Markov model", "offsets": [45577], "paragraph_occurrences": [153], "sentence_occurrences": [398], "affiliation": "light", "frequency": 1, "id": "Hidden_Markov_model"}, {"name": "Markov chain Monte Carlo", "offsets": [22941, 44543], "paragraph_occurrences": [83, 152], "sentence_occurrences": [196, 391], "affiliation": "light", "frequency": 2, "id": "Markov_chain_Monte_Carlo"}, {"name": "Maximum likelihood", "offsets": [28937], "paragraph_occurrences": [106], "sentence_occurrences": [254], "affiliation": "light", "frequency": 1, "id": "Maximum_likelihood"}]}