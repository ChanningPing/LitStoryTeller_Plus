{"paragraph_scenes_info": [{"x": 1, "text": "A first step in identifying the content of a document is determining which topics that document addresses.We describe a generative model for documents, introduced by Blei, Ng, and Jordan <Blei, D. M., Ng, A. Y.& Jordan, M. I. (2003) J. Machine Learn.Res.3, 993-1022>, in which each document is generated by choosing a distribution over topics and then choosing each word in the document from a topic selected according to this distribution.We then present a Markov chain Monte Carlo algorithm for inference in this model.We use this algorithm to analyze abstracts from PNAS by using Bayesian model selection to establish the number of topics.We show that the extracted topics capture meaningful structure in the data, consistent with the class designations pro- vided by the authors of the articles, and outline further applica- tions of this analysis, including identifying hot topics by exam- ining temporal dynamics and tagging abstracts to illustrate semantic content."}, {"x": 2, "text": "When scientists decide to write a paper, one of the first things they do is identify an interesting subset of the many possible topics of scientific investigation.The topics addressed by a paper are also one of the first pieces of information a person tries to extract when reading a scientific abstract.Scientific experts know which topics are pursued in their field, and this information plays a role in their assessments of whether papers are relevant to their interests, which research areas are rising or falling in popularity, and how papers relate to one another.Here, we present a statistical method for automatically extracting a representation of documents that provides a first-order approx- imation to the kind of knowledge available to domain experts.Our method discovers a set of topics expressed by documents, providing quantitative measures that can be used to identify the content of those documents, track changes in content over time, and express the similarity between documents.We use our method to discover the topics covered by papers in PNAS in a purely unsupervised fashion and illustrate how these topics can be used to gain insight into some of the structure of science."}, {"x": 3, "text": "The statistical model we use in our analysis is a generative model for documents; it reduces the complex process of pro- ducing a scientific paper to a small number of simple probabi- listic steps and thus specifies a probability distribution over all possible documents.Generative models can be used to postulate complex latent structures responsible for a set of observations, making it possible to use statistical inference to recover this structure.This kind of approach is particularly useful with text, where the observed data (the words) are explicitly intended to communicate a latent structure (their meaning).The particular generative model we use, called Latent Dirichlet Allocation, was introduced in ref.1.This generative model postulates a latent structure consisting of a set of topics; each document is produced by choosing a distribution over topics, and then generating each word at random from a topic chosen by using this distribution."}, {"x": 4, "text": "The plan of this article is as follows.In the next section, we describe Latent Dirichlet Allocation and present a Markov chain Monte Carlo algorithm for inference in this model, illustrating the operation of our algorithm on a small dataset.We then apply our algorithm to a corpus consisting of abstracts from PNAS from 1991 to 2001, determining the number of topics needed to account for the information contained in this corpus and ex- tracting a set of topics.We use these topics to illustrate the relationships between different scientific disciplines, assessing trends and hot topics by analyzing topic dynamics and using the assignments of words to topics to highlight the semantic content of documents."}, {"x": 7, "text": "Intuitively, P(w z) indicates which words are important to a topic, whereas P(z) is the prevalence of those topics within a document.For example, in a journal that published only articles in mathematics or neuroscience, we could express the probability distribution over words with two topics, one relating to mathe- matics and the other relating to neuroscience.The content of the topics would be reflected in P(w z); the mathematics topic would give high probability to words like theory, space, or problem, whereas the neuroscience topic would give high probability to words like synaptic, neurons, and hippocampal.Whether a particular document concerns neuroscience, mathe- matics, or computational neuroscience would depend on its distribution over topics, P(z), which determines how these topics are mixed together in forming documents.The fact that multiple topics can be responsible for the words occurring in a single document discriminates this model from a standard Bayesian classifier, in which it is assumed that all the words in the document come from a single class.The soft classification provided by this model, in which each document is characterized in terms of the contributions of multiple topics, has applications in many domains other than text (7)."}, {"x": 8, "text": "Viewing documents as mixtures of probabilistic topics makes it possible to formulate the problem of discovering the set of topics that are used in a collection of documents.Given D documents containing T topics expressed over W unique words, we can represent P(w z) with a set of T multinomial distributions over the W words, such that P(w z   j)    (j), and P(z) with  a set of D multinomial distributions   over the T topics, such that for a word in document d, P(z   j)    j(d).To discover the set of topics used in a corpus w   <w1, w2, ..., wn>, where each wi belongs to some document di, we want to obtain an estimate of   that gives high probability to the words that appear in the corpus.One strategy for obtaining such an estimate is to simply attempt to maximize P(w  ,  ), following from Eq.1 directly by using the Expectation-Maximization (8) algorithm to find max- imum likelihood estimates of   and   (2, 3).However, this approach is susceptible to problems involving local maxima and is slow to converge (1, 2), encouraging the development of models that make assumptions about the source of  ."}, {"x": 9, "text": "Latent Dirichlet Allocation (1) is one such model, combining Eq.1 with a prior probability distribution on   to provide a complete generative model for documents.This generative model specifies a simple probabilistic procedure by which new documents can be produced given just a set of topics  , allowing   to be estimated without requiring the estimation of  .In Latent Dirichlet Allocation, documents are generated by first picking a distribution over topics   from a Dirichlet distribution, which determines P(z) for words in that document.The words in the document are then generated by picking a topic j from this distribution and then picking a word from that topic according to P(w z   j), which is determined by a fixed  (j).The estimation problem becomes one of maximizing P(w  , )     P(w  , )P(   )d , where P( ) is a Dirichlet ( ) distribution.The integral in this expression is intractable, and   is thus usually estimated by using sophisticated approximations, either varia- tional Bayes (1) or expectation propagation (9)."}, {"x": 10, "text": "Using Gibbs Sampling to Discover Topics"}, {"x": 11, "text": "Our strategy for discovering topics differs from previous ap- proaches in not explicitly representing   or   as parameters to be estimated, but instead considering the posterior distribution over the assignments of words to topics, P(z w).We then obtain estimates of   and   by examining this posterior distribution.Evaluating P(z w) requires solving a problem that has been studied in detail in Bayesian statistics and statistical physics, computing a probability distribution over a large discrete state space.We address this problem by using a Monte Carlo proce- dure, resulting in an algorithm that is easy to implement, requires little memory, and is competitive in speed and performance with existing algorithms."}, {"x": 12, "text": "We use the probability model for Latent Dirichlet Allocation, with the addition of a Dirichlet prior on  .The complete probability model is thus"}, {"x": 13, "text": "Here,   and   are hyperparameters, specifying the nature of the priors on   and  .Although these hyperparameters could be vector-valued as in refs.1 and 9, for the purposes of this article we assume symmetric Dirichlet priors, with   and   each having a single value.These priors are conjugate to the multinomial distributions   and  , allowing us to compute the joint distri- bution P(w, z) by integrating out   and  .Because P(w, z)   P(w z)P(z) and   and   only appear in the first and second terms, respectively, we can perform these integrals separately.Inte- grating out   gives the first term in which n(w) is the number of times word w has been assigned to topic j in the vector of assignments z, and  ( ) is the standard gamma function.The second term results from integrating out  , to give where nj(d) is the number of times a word from document d has been assigned to topic j. Our goal is then to evaluate the posterior distribution."}, {"x": 15, "text": "Computing P(z w) involves evaluating a probability distribu- tion on a large discrete state space, a problem that arises often in statistical physics.Our setting is similar, in particular, to the Potts model (e.g., ref.10), with an ensemble of discrete variables z, each of which can take on values in <1, 2,..., T>, and an energy function given by H(z)     log P(w, z)    log P(w z)   log P(z).Unlike the Potts model, in which the energy function is usually defined in terms of local interactions on a lattice, here the contribution of each zi depends on all z i values through the counts nj(w) and nj(d).Intuitively, this energy function favors ensembles of assignments z that form a good compromise between having few topics per document and having few words per topic, with the terms of this compromise being set by the hyperparameters   and  .The fundamental computational problems raised by this model remain the same as those of the Potts model: We can evaluate H(z) for any configuration z, but the state space is too large to enumerate, and we cannot compute the partition function that converts this into a probability distribution (in our case, the denominator of Eq.4).Conse- quently, we apply a method that physicists and statisticians have developed for dealing with these problems, sampling from the target distribution by using Markov chain Monte Carlo."}, {"x": 16, "text": "In Markov chain Monte Carlo, a Markov chain is constructed to converge to the target distribution, and samples are then taken from that Markov chain (see refs.1012).Each state of the chain is an assignment of values to the variables being sampled, in this case z, and transitions between states follow a simple rule.We use Gibbs sampling (13), known as the heat bath algorithm in statistical physics (10), where the next state is reached by sequentially sampling all variables from their distribution when conditioned on the current values of all other variables and the data.To apply this algorithm we need the full conditional distribution P(zi z i, w).This distribution can be obtained by a probabilistic argument or by cancellation of terms in Eqs.2 and 3, yielding of zi.This result is quite intuitive; the first ratio expresses the probability of wi under topic j, and the second ratio expresses the probability of topic j in document di.Critically, these counts are the only information necessary for computing the full condi- tional distribution, allowing the algorithm to be implemented efficiently by caching the relatively small set of nonzero counts."}, {"x": 17, "text": "Having obtained the full conditional distribution, the Monte Carlo algorithm is then straightforward.The zi variables are initialized to values in <1, 2, ..., T>, determining the initial state of the Markov chain.We do this with an on-line version of the Gibbs sampler, using Eq.5 to assign words to topics, but with counts that are computed from the subset of the words seen so far rather than the full data.The chain is then run for a number of iterations, each time finding a new state by sampling each zi from the distribution specified by Eq.5.Because the only information needed to apply Eq.5 is the number of times a word is assigned to a topic and the number of times a topic occurs in a document, the algorithm can be run with minimal memory requirements by caching the sparse set of nonzero counts and updating them whenever a word is reassigned.After enough iterations for the chain to approach the target distribution, the current values of the zi variables are recorded.Subsequent samples are taken after an appropriate lag to ensure that their autocorrelation is low (10, 11)."}, {"x": 21, "text": "To illustrate the operation of the algorithm and to show that it runs in time comparable with existing methods of estimating  , we generated a small dataset in which the output of the algorithm can be shown graphically.The dataset consisted of a set of 2,000 images, each containing 25 pixels in a 5   5 grid.The intensity of any pixel is specified by an integer value between zero and infinity.This dataset is of exactly the same form as a word- document cooccurrence matrix constructed from a database of documents, with each image being a document, with each pixel being a word, and with the intensity of a pixel being its frequency.The images were generated by defining a set of 10 topics corresponding to horizontal and vertical bars, as shown in Fig.1a, then sampling a multinomial distribution   for each image from a Dirichlet distribution with     1, and sampling 100 pixels (words) according to Eq.1.A subset of the images generated in this fashion are shown in Fig.1b.Although some images show evidence of many samples from a single topic, it is difficult to discern the underlying structure of most images."}, {"x": 22, "text": "We applied our Gibbs sampling algorithm to this dataset, together with the two algorithms that have previously been used for inference in Latent Dirichlet Allocation: variational Bayes (1) and expectation propagation (9).(The implementations of variational Bayes and expectation propagation were provided by Tom Minka and are available at www.stat.cmu.edu ~minka  papers aspect.html.)We divided the dataset into 1,000 training images and 1,000 test images and ran each algorithm four times, using the same initial conditions for all three algorithms on a given run.These initial conditions were found by an online application of Gibbs sampling, as mentioned above.Variational Bayes and expectation propagation were run until convergence, and Gibbs sampling was run for 1,000 iterations.All three algorithms used a fixed Dirichlet prior on  , with     1.We tracked the number of floating point operations per iteration for each algorithm and computed the test set perplexity for the estimates of   provided by the algorithms at several points.Perplexity is a standard measure of performance for statistical models of natural language (14) and is defined as exp< log P(wtest  ) ntest>, where wtest and ntest indicate the identities and number of words in the test set, respectively.Perplexity indicates the uncertainty in predicting a single word; lower values are better, and chance performance results in a perplexity equal to the size of the vocabulary, which is 25 in this case.The perplexity for all three models was evaluated by using importance sampling as in ref.9, and the estimates of   used for evaluating Gibbs sampling were each obtained from a single sample as in Eq.6.The results of these computations are shown in Fig.1c.All three algorithms are able to recover the underlying topics, and Gibbs sampling does so more rapidly than either variational Bayes or expectation propagation.A graphical illustration of the opera- tion of the Gibbs sampler is shown in Fig.2.The log-likelihood stabilizes quickly, in a fashion consistent across multiple runs, and the topics expressed in the dataset slowly emerge as appro- priate assignments of words to topics are discovered."}, {"x": 23, "text": "These results show that Gibbs sampling can be competitive in speed with existing algorithms, although further tests with larger datasets involving real text are necessary to evaluate the strengths and weaknesses of the different algorithms.The effects of including the Dirichlet ( ) prior in the model and the use of methods for estimating the hyperparameters   and   need to be assessed as part of this comparison.A variational algorithm for this smoothed model is described in ref.1, which may be more similar to the Gibbs sampling algorithm described here.Ulti- mately, these different approaches are complementary rather than competitive, providing different means of performing approximate inference that can be selected according to the demands of the problem."}, {"x": 25, "text": "The statistical model we have described is conditioned on three parameters, which we have suppressed in the equations above: the Dirichlet hyperparameters   and   and the number of topics T. Our algorithm is easily extended to allow  ,  , and z to be sampled, but this extension can slow the convergence of the Markov chain.Our strategy in this article is to fix   and   and explore the consequences of varying T. The choice of   and   can have important implications for the results produced by the model.In particular, increasing   can be expected to decrease the number of topics used to describe a dataset, because it reduces the impact of sparsity in Eq.2.The value of   thus affects the granularity of the model: a corpus of documents can be sensibly factorized into a set of topics at several different scales, and the particular scale assessed by the model will be set by  .With scientific documents, a large value of   would lead the model to find a relatively small number of topics, perhaps at the level of scientific disciplines, whereas smaller values of   will produce more topics that address specific areas of research."}, {"x": 26, "text": "Given values of   and  , the problem of choosing the appropriate value for T is a problem of model selection, which we address by using a standard method from Bayesian statistics (15).For a Bayesian statistician faced with a choice between a set of statistical models, the natural response is to compute the posterior probability of that set of models given the observed data.The key constituent of this posterior probability will be the likelihood of the data given the model, integrating over all parameters in the model.In our case, the data are the words in the corpus, w, and the model is specified by the number of topics, T, so we wish to compute the likelihood P(w T).The complica- tion is that this requires summing over all possible assignments"}, {"x": 27, "text": "of words to topics z.However, we can approximate P(w T) by taking the harmonic mean of a set of values of P(w z, T) when z is sampled from the posterior P(z w, T) (15).Our Gibbs sampling algorithm provides such samples, and the value of P(w z,T) can be computed from Eq.2."}, {"x": 29, "text": "The algorithm outlined above can be used to find the topics that account for the words used in a set of documents.We applied this algorithm to the abstracts of papers published in PNAS from 1991 to 2001, with the aim of discovering some of the topics addressed by scientific research.We first used Bayesian model selection to identify the number of topics needed to best account for the structure of this corpus, and we then conducted a detailed analysis with the selected number of topics.Our detailed analysis involved examining the relationship between the topics discov- ered by our algorithm and the class designations supplied by PNAS authors, using topic dynamics to identify hot topics and using the topic assignments to highlight the semantic content in abstracts."}, {"x": 30, "text": "How Many Topics?To evaluate the consequences of changing the number of topics T, we used the Gibbs sampling algorithm outlined in the preceding section to obtain samples from the posterior distribution over z at several choices of T. We used all 28,154 abstracts published in PNAS from 1991 to 2001, with each of these abstracts constituting a single document in the corpus (we will use the words abstract and document interchangeably from this point forward).Any delimiting character, including hyphens, was used to separate words, and we deleted any words that occurred in less than five abstracts or belonged to a standard stop list used in computational linguistics, including numbers, individual characters, and some function words.This gave us a vocabulary of 20,551 words, which occurred a total of 3,026,970 times in the corpus."}, {"x": 31, "text": "For all runs of the algorithm, we used     0.1 and     50 T, keeping constant the sum of the Dirichlet hyperparameters, which can be interpreted as the number of virtual samples contributing to the smoothing of  .This value of   is relatively small and can be expected to result in a fine-grained decompo- sition of the corpus into topics that address specific research areas.We computed an estimate of P(w T) for T values of 50, 100, 200, 300, 400, 500, 600, and 1,000 topics.For all values of T, except the last, we ran eight Markov chains, discarding the first 1,000 iterations, and then took 10 samples from each chain at a lag of 100 iterations.In all cases, the log-likelihood values stabilized within a few hundred iterations, as in Fig.2.The simulation with 1,000 topics was more time-consuming, and thus we used only six chains, taking two samples from each chain after 700 initial iterations, again at a lag of 100 iterations."}, {"x": 32, "text": "Estimates of P(w T) were computed based on the full set of samples for each value of T and are shown in Fig.3.The results suggest that the data are best accounted for by a model incor- porating 300 topics.P(w T) initially increases as a function of T, reaches a peak at T   300, and then decreases thereafter.This kind of profile is often seen when varying the dimensionality of a statistical model, with the optimal model being rich enough to fit the information available in the data, yet not so complex as to begin fitting noise.As mentioned above, the value of T found through this procedure depends on the choice of   and  , and it will also be affected by specific decisions made in forming the dataset, such as the use of a stop list and the inclusion of documents from all PNAS classifications.By using just P(w T) to choose a value of T, we are assuming very weak prior constraints on the number of topics.P(w T) is just the likelihood term in the inference to P(T w), and the prior P(T) might overwhelm this likelihood if we had a particularly strong preference for a smaller number of topics."}, {"x": 33, "text": "Scientific Topics and Classes.When authors submit a paper to PNAS, they choose one of three major categories, indicating whether a paper belongs to the Biological, the Physical, or the Social Sciences, and one of 33 minor categories, such as Ecology, Pharmacology, Mathematics, or Economic Sciences.(Anthro- pology and Psychology can be chosen as a minor category for papers in both Biological and Social Sciences.We treat these minor categories as distinct for the purposes of our analysis.)Having a class designation for each abstract in the corpus provides two opportunities.First, because the topics recovered by our algorithm are purely a consequence of the statistical structure of the data, we can evaluate whether the class desig- nations pick out differences between abstracts that can be expressed in terms of this statistical structure.Second, we can use the class designations to illustrate how the distribution over topics can reveal relationships between documents and between document classes."}, {"x": 34, "text": "We used a single sample taken after 2,000 iterations of Gibbs sampling and computed estimates of  (d) by means of Eq.7.(In this and other analyses, similar results were obtained by exam- ining samples across multiple chains, up to the permutation of topics, and the choice of this particular sample to display the results was arbitrary.)Using these estimates, we computed a mean   vector for each minor category, considering just the 2,620 abstracts published in 2001.We then found the most diagnostic topic for each minor category, defined to be the topic j for which the ratio of  j for that category to the sum of  j across all other categories was greatest.The results of this analysis are shown in Fig.4.The matrix shown in Fig.4 Upper indicates the mean value of   for each minor category, restricted to the set of most diagnostic topics.The strong diagonal is a consequence of our selection procedure, with diagnostic topics having high proba- bility within the classes for which they are diagnostic, but low probability in other classes.The off-diagonal elements illustrate the relationships between classes, with similar classes showing similar distributions across topics."}, {"x": 35, "text": "The distributions over topics for the different classes illustrate how this statistical model can capture similarity in the semantic content of documents.Fig.4 reveals relationships between specific minor categories, such as Ecology and Evolution, and some of the correspondences within major categories; for ex- ample, the minor categories in the Physical and Social Sciences show much greater commonality in the topics appearing in their abstracts than do the Biological Sciences.The results can also be used to assess how much different disciplines depend on partic- ular methods.For example, topic 39, relating to mathematical methods, receives reasonably high probability in Applied Math- ematics, Applied Physical Sciences, Chemistry, Engineering, Mathematics, Physics, and Economic Sciences, suggesting that mathematical theory is particularly relevant to these disciplines."}, {"x": 36, "text": "The content of the diagnostic topics themselves is shown in Fig.4 Lower, listing the five words given highest probability by each topic.In some cases, a single topic was the most diagnostic for several classes: topic 2, containing words relating to global climate change, was diagnostic of Ecology, Geology, and Geo- physics; topic 280, containing words relating to evolution and natural selection, was diagnostic of both Evolution and Popu- lation Biology; topic 222, containing words relating to cognitive neuroscience, was diagnostic of Psychology as both a Biological and a Social Science; topic 39, containing words relating to mathematical theory, was diagnostic of both Applied Mathe- matics and Mathematics; and topic 270, containing words having to do with spectroscopy, was diagnostic of both Chemistry and Physics.The remaining topics were each diagnostic of a single minor category and, in general, seemed to contain words rele- vant to enquiry in that discipline.The only exception was topic 109, diagnostic of Economic Sciences, which contains words generally relevant to scientific research.This may be a conse- quence of the relatively small number of documents in this class (only three in 2001), which makes the estimate of   extremely unreliable.Topic 109 also serves to illustrate that not all of the topics found by the algorithm correspond to areas of research; some of the topics picked out scientific words that tend to occur together for other reasons, like those that are used to describe data or those that express tentative conclusions."}, {"x": 38, "text": "Hot and Cold Topics.Historians, sociologists, and philosophers of science and scientists themselves recognize that topics rise and fall in the amount of scientific interest they generate, although whether this is the result of social forces or rational scientific practice is the subject of debate (e.g., refs.16 and 17).Because our analysis reduces a corpus of scientific documents to a set of topics, it is straightforward to analyze the dynamics of these topics as a means of gaining insight into the dynamics of science.If understanding these dynamics is the goal of our analysis, we can formulate more sophisticated generative models that incor- porate parameters describing the change in the prevalence of topics over time.Here, we present a basic analysis based on a post hoc examination of the estimates of   produced by the model.Being able to identify the hot topics in science at a particular point is one of the most attractive applications of this kind of model, providing quantitative measures of the preva- lence of particular kinds of research that may be useful for historical purposes and for determination of targets for scientific funding.Analysis at the level of topics provides the opportunity to combine information about the occurrences of a set of semantically related words with cues that come from the content of the remainder of the document, potentially highlighting trends that might be less obvious in analyses that consider only the frequencies of single words."}, {"x": 40, "text": "topics rising and falling regularly in popularity, 54 of the topics showed a statistically significant increasing linear trend, and 50 showed a statistically significant decreasing linear trend, both at the P   0.0001 level.The three hottest and coldest topics, assessed by the size of the linear trend test statistic, are shown in Fig.5.The hottest topics discovered through this analysis were topics 2, 134, and 179, corresponding to global warming and climate change, gene knockout techniques, and apoptosis (pro- grammed cell death), the subject of the 2002 Nobel Prize in Physiology.The cold topics were not topics that lacked preva- lence in the corpus but those that showed a strong decrease in popularity over time.The coldest topics were 37, 289, and 75, corresponding to sequencing and cloning, structural biology, and immunology.All these topics were very popular in about 1991 and fell in popularity over the period of analysis.The Nobel Prizes again provide a good means of validating these trends, with prizes being awarded for work on sequencing in 1993 and immunology in 1989."}, {"x": 45, "text": "We have presented a statistical inference algorithm for Latent Dirichlet Allocation (1), a generative model for documents in which each document is viewed as a mixture of topics, and have shown how this algorithm can be used to gain insight into the content of scientific documents.The topics recovered by our algorithm pick out meaningful aspects of the structure of science and reveal some of the relationships between scientific papers in different disciplines.The results of our algorithm have several interesting applications that can make it easier for people to understand the information contained in large knowledge do- mains, including exploring topic dynamics and indicating the role that words play in the semantic content of documents."}, {"x": 46, "text": "The results we have presented use the simplest model of this kind and the simplest algorithm for generating samples.In future research, we intend to extend this work by exploring both more complex models and more sophisticated algorithms.Whereas in this article we have focused on the analysis of scientific docu- ments, as represented by the articles published in PNAS, the methods and applications we have presented are relevant to a variety of other knowledge domains.Latent Dirichlet Allocation is a statistical model that is appropriate for any collection of documents, from e-mail records and newsgroups to the entire World Wide Web.Discovering the topics underlying the struc- ture of such datasets is the first step to being able to visualize their content and discover meaningful trends."}], "chapters": [{"text": "Abstract", "sentence_id": "s_0", "sentence_rank": "0", "paragraph_id": "p_0", "paragraph_rank": 0}, {"text": "Documents, Topics, and Statistical Inference", "sentence_id": "s_25", "sentence_rank": "25", "paragraph_id": "p_5", "paragraph_rank": 5}, {"text": "Using Gibbs Sampling to Discover Topics", "sentence_id": "s_52", "sentence_rank": "52", "paragraph_id": "p_10", "paragraph_rank": 10}, {"text": "A graphical example", "sentence_id": "s_100", "sentence_rank": "100", "paragraph_id": "p_20", "paragraph_rank": 20}, {"text": "Model Selection", "sentence_id": "s_134", "sentence_rank": "134", "paragraph_id": "p_24", "paragraph_rank": 24}, {"text": "The Topics of Science", "sentence_id": "s_150", "sentence_rank": "150", "paragraph_id": "p_28", "paragraph_rank": 28}, {"text": "Conclusion", "sentence_id": "s_244", "sentence_rank": "244", "paragraph_id": "p_44", "paragraph_rank": 44}], "scenes": [["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America", "Markov_chain_Monte_Carlo", "Bayes_factor"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America"], ["Latent_Dirichlet_allocation"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America", "Markov_chain_Monte_Carlo", "Latent_Dirichlet_allocation"], ["Bayesian_inference"], ["Expectation\u2013maximization_algorithm", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Gibbs_sampling"], ["Bayesian_inference", "Monte_Carlo_method"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Partition_coefficient", "Markov_chain_Monte_Carlo", "Potts_model"], ["Markov_chain", "Markov_chain_Monte_Carlo", "Gibbs_sampling"], ["Monte_Carlo_algorithm", "Markov_chain", "Gibbs_sampling"], ["Dirichlet_distribution"], ["Partition_coefficient", "Latent_Dirichlet_allocation", "Dirichlet_distribution", "Perplexity", "Variational_Bayesian_methods", "Gibbs_sampling"], ["Dirichlet_distribution", "Computer_simulation", "Gibbs_sampling"], ["Dirichlet_distribution", "Markov_chain"], ["Bayesian_inference"], ["Gibbs_sampling"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America", "Bayes_factor"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America", "Gibbs_sampling"], ["Dirichlet_distribution", "Markov_chain"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America"], ["Ecology", "Psychology", "Pharmacology", "Economics", "Anthropology", "Social_science", "Mathematics", "Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America"], ["Gibbs_sampling"], ["Biology", "Ecology", "Outline_of_physical_science", "Economics", "Evolution", "Engineering_mathematics", "Applied_mathematics", "Social_science", "Chemistry", "Physics"], ["Biology", "Ecology", "Psychology", "Geology", "Economics", "Evolution", "Applied_mathematics", "Social_science", "Mathematics", "Chemistry", "Physics"], ["History"], ["Nobel_Prize", "Nobel_Prize_in_Physiology_or_Medicine"], ["Latent_Dirichlet_allocation"], ["Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America", "Latent_Dirichlet_allocation", "World_Wide_Web"]], "characters": [{"name": "Bayesian inference", "offsets": [5637, 8513, 19507, 19538], "paragraph_occurrences": [7, 11, 26, 26], "sentence_occurrences": [34, 55, 141, 142], "affiliation": "light", "frequency": 4, "id": "Bayesian_inference"}, {"name": "Nobel Prize", "offsets": [32110], "paragraph_occurrences": [40], "sentence_occurrences": [226], "affiliation": "light", "frequency": 1, "id": "Nobel_Prize"}, {"name": "Partition coefficient", "offsets": [10481, 10496, 10509, 16412], "paragraph_occurrences": [15, 15, 15, 22], "sentence_occurrences": [69, 69, 69, 118], "affiliation": "light", "frequency": 4, "id": "Partition_coefficient"}, {"name": "Computer simulation", "offsets": [18198], "paragraph_occurrences": [23], "sentence_occurrences": [133], "affiliation": "light", "frequency": 1, "id": "Computer_simulation"}, {"name": "Applied mathematics", "offsets": [26913, 26936, 27791], "paragraph_occurrences": [35, 35, 36], "sentence_occurrences": [196, 196, 199], "affiliation": "light", "frequency": 3, "id": "Applied_mathematics"}, {"name": "Mathematics", "offsets": [24308, 27817], "paragraph_occurrences": [33, 36], "sentence_occurrences": [175, 199], "affiliation": "light", "frequency": 2, "id": "Mathematics"}, {"name": "Markov chain", "offsets": [11523, 11628, 12854, 18524, 22532], "paragraph_occurrences": [16, 16, 17, 25, 31], "sentence_occurrences": [75, 75, 88, 135, 162], "affiliation": "light", "frequency": 5, "id": "Markov_chain"}, {"name": "Psychology", "offsets": [24362, 27654], "paragraph_occurrences": [33, 36], "sentence_occurrences": [176, 199], "affiliation": "light", "frequency": 2, "id": "Psychology"}, {"name": "Biology", "offsets": [26695, 27563], "paragraph_occurrences": [35, 36], "sentence_occurrences": [194, 199], "affiliation": "light", "frequency": 2, "id": "Biology"}, {"name": "Pharmacology", "offsets": [24294], "paragraph_occurrences": [33], "sentence_occurrences": [175], "affiliation": "light", "frequency": 1, "id": "Pharmacology"}, {"name": "Geology", "offsets": [27413], "paragraph_occurrences": [36], "sentence_occurrences": [199], "affiliation": "light", "frequency": 1, "id": "Geology"}, {"name": "Monte Carlo algorithm", "offsets": [12709], "paragraph_occurrences": [17], "sentence_occurrences": [84], "affiliation": "light", "frequency": 1, "id": "Monte_Carlo_algorithm"}, {"name": "Dirichlet distribution", "offsets": [7511, 7870, 8920, 9188, 14958, 16071, 17701, 18342, 22097], "paragraph_occurrences": [9, 9, 12, 13, 21, 22, 23, 25, 31], "sentence_occurrences": [48, 50, 57, 61, 106, 116, 130, 135, 159], "affiliation": "light", "frequency": 9, "id": "Dirichlet_distribution"}, {"name": "Nobel Prize in Physiology or Medicine", "offsets": [31728], "paragraph_occurrences": [40], "sentence_occurrences": [222], "affiliation": "light", "frequency": 1, "id": "Nobel_Prize_in_Physiology_or_Medicine"}, {"name": "Potts model", "offsets": [10319, 10529, 11063], "paragraph_occurrences": [15, 15, 15], "sentence_occurrences": [68, 70, 72], "affiliation": "light", "frequency": 3, "id": "Potts_model"}, {"name": "Anthropology", "offsets": [24343], "paragraph_occurrences": [33], "sentence_occurrences": [176], "affiliation": "light", "frequency": 1, "id": "Anthropology"}, {"name": "Expectation\u2013maximization algorithm", "offsets": [6758], "paragraph_occurrences": [8], "sentence_occurrences": [43], "affiliation": "light", "frequency": 1, "id": "Expectation\u2013maximization_algorithm"}, {"name": "History", "offsets": [29380], "paragraph_occurrences": [38], "sentence_occurrences": [207], "affiliation": "light", "frequency": 1, "id": "History"}, {"name": "Variational Bayesian methods", "offsets": [15418, 15496, 17102, 15915], "paragraph_occurrences": [22, 22, 22, 22], "sentence_occurrences": [111, 112, 125, 114], "affiliation": "light", "frequency": 4, "id": "Variational_Bayesian_methods"}, {"name": "Evolution", "offsets": [26470, 27536], "paragraph_occurrences": [35, 36], "sentence_occurrences": [194, 199], "affiliation": "light", "frequency": 2, "id": "Evolution"}, {"name": "Physical science", "offsets": [26944], "paragraph_occurrences": [35], "sentence_occurrences": [196], "affiliation": "light", "frequency": 1, "id": "Outline_of_physical_science"}, {"name": "Economics", "offsets": [24324, 27013, 28138], "paragraph_occurrences": [33, 35, 36], "sentence_occurrences": [175, 196, 201], "affiliation": "light", "frequency": 3, "id": "Economics"}, {"name": "Engineering mathematics", "offsets": [26974], "paragraph_occurrences": [35], "sentence_occurrences": [196], "affiliation": "light", "frequency": 1, "id": "Engineering_mathematics"}, {"name": "Social science", "offsets": [24228, 24441, 26594, 27692], "paragraph_occurrences": [33, 33, 35, 36], "sentence_occurrences": [175, 176, 194, 199], "affiliation": "light", "frequency": 4, "id": "Social_science"}, {"name": "Latent Dirichlet allocation", "offsets": [2843, 3204, 7041, 7405, 8868, 15389, 34020, 35183], "paragraph_occurrences": [3, 4, 8, 9, 12, 22, 45, 46], "sentence_occurrences": [18, 22, 44, 48, 57, 111, 245, 250], "affiliation": "light", "frequency": 8, "id": "Latent_Dirichlet_allocation"}, {"name": "Bayes factor", "offsets": [591, 20693], "paragraph_occurrences": [1, 29], "sentence_occurrences": [7, 153], "affiliation": "light", "frequency": 2, "id": "Bayes_factor"}, {"name": "Proceedings of the National Academy of Sciences of the United States of America", "offsets": [577, 2041, 3442, 20575, 21031, 21444, 23721, 24104, 35077], "paragraph_occurrences": [1, 2, 4, 29, 29, 30, 32, 33, 46], "sentence_occurrences": [7, 14, 23, 152, 154, 156, 171, 175, 250], "affiliation": "light", "frequency": 9, "id": "Proceedings_of_the_National_Academy_of_Sciences_of_the_United_States_of_America"}, {"name": "Chemistry", "offsets": [26963, 27917], "paragraph_occurrences": [35, 36], "sentence_occurrences": [196, 199], "affiliation": "light", "frequency": 2, "id": "Chemistry"}, {"name": "Physics", "offsets": [27000, 27931], "paragraph_occurrences": [35, 36], "sentence_occurrences": [196, 199], "affiliation": "light", "frequency": 2, "id": "Physics"}, {"name": "Monte Carlo method", "offsets": [8664], "paragraph_occurrences": [11], "sentence_occurrences": [56], "affiliation": "light", "frequency": 1, "id": "Monte_Carlo_method"}, {"name": "Ecology", "offsets": [24285, 26458, 27404], "paragraph_occurrences": [33, 35, 36], "sentence_occurrences": [175, 194, 199], "affiliation": "light", "frequency": 3, "id": "Ecology"}, {"name": "World Wide Web", "offsets": [35336], "paragraph_occurrences": [46], "sentence_occurrences": [251], "affiliation": "light", "frequency": 1, "id": "World_Wide_Web"}, {"name": "Perplexity", "offsets": [16293, 16531], "paragraph_occurrences": [22, 22], "sentence_occurrences": [117, 118], "affiliation": "light", "frequency": 2, "id": "Perplexity"}, {"name": "Markov chain Monte Carlo", "offsets": [466, 3246, 11467, 11495], "paragraph_occurrences": [1, 4, 15, 16], "sentence_occurrences": [6, 22, 74, 75], "affiliation": "light", "frequency": 4, "id": "Markov_chain_Monte_Carlo"}, {"name": "Gibbs sampling", "offsets": [8084, 11815, 15266, 15880, 15993, 16866, 17054, 17456, 17951, 12909, 17198, 20274, 21261, 25107], "paragraph_occurrences": [10, 16, 22, 22, 22, 22, 22, 23, 23, 17, 22, 27, 30, 34], "sentence_occurrences": [52, 78, 111, 114, 115, 121, 125, 129, 132, 89, 126, 148, 156, 181], "affiliation": "light", "frequency": 14, "id": "Gibbs_sampling"}], "all_paragraphs": [{"paragraph_info": {"end": 8, "start": 0, "text": "Abstract", "rank": 0, "paragraph_comparative_number": 1, "entities": [], "id": "p_0"}, "sentences": [{"end": 8, "text": "Abstract", "rank": 0, "start": 0, "IsComparative": "1", "id": "st_0"}]}, {"paragraph_info": {"end": 980, "start": 8, "text": "A first step in identifying the content of a document is determining which topics that document addresses.We describe a generative model for documents, introduced by Blei, Ng, and Jordan <Blei, D. M., Ng, A. Y.& Jordan, M. I. (2003) J. Machine Learn.Res.3, 993-1022>, in which each document is generated by choosing a distribution over topics and then choosing each word in the document from a topic selected according to this distribution.We then present a Markov chain Monte Carlo algorithm for inference in this model.We use this algorithm to analyze abstracts from PNAS by using Bayesian model selection to establish the number of topics.We show that the extracted topics capture meaningful structure in the data, consistent with the class designations pro- vided by the authors of the articles, and outline further applica- tions of this analysis, including identifying hot topics by exam- ining temporal dynamics and tagging abstracts to illustrate semantic content.", "rank": 1, "paragraph_comparative_number": 3, "entities": [], "id": "p_1"}, "sentences": [{"end": 114, "text": "A first step in identifying the content of a document is determining which topics that document addresses.", "rank": 1, "start": 8, "IsComparative": "1", "id": "st_1"}, {"end": 218, "text": "We describe a generative model for documents, introduced by Blei, Ng, and Jordan <Blei, D. M., Ng, A. Y.", "rank": 2, "start": 114, "IsComparative": "0", "id": "st_2"}, {"end": 258, "text": "& Jordan, M. I. (2003) J. Machine Learn.", "rank": 3, "start": 218, "IsComparative": "0", "id": "st_3"}, {"end": 262, "text": "Res.", "rank": 4, "start": 258, "IsComparative": "0", "id": "st_4"}, {"end": 448, "text": "3, 993-1022>, in which each document is generated by choosing a distribution over topics and then choosing each word in the document from a topic selected according to this distribution.", "rank": 5, "start": 262, "IsComparative": "1", "id": "st_5"}, {"end": 529, "text": "We then present a Markov chain Monte Carlo algorithm for inference in this model.", "rank": 6, "start": 448, "IsComparative": "0", "id": "st_6"}, {"end": 650, "text": "We use this algorithm to analyze abstracts from PNAS by using Bayesian model selection to establish the number of topics.", "rank": 7, "start": 529, "IsComparative": "1", "id": "st_7"}, {"end": 980, "text": "We show that the extracted topics capture meaningful structure in the data, consistent with the class designations pro- vided by the authors of the articles, and outline further applica- tions of this analysis, including identifying hot topics by exam- ining temporal dynamics and tagging abstracts to illustrate semantic content.", "rank": 8, "start": 650, "IsComparative": "0", "id": "st_8"}]}, {"paragraph_info": {"end": 2177, "start": 980, "text": "When scientists decide to write a paper, one of the first things they do is identify an interesting subset of the many possible topics of scientific investigation.The topics addressed by a paper are also one of the first pieces of information a person tries to extract when reading a scientific abstract.Scientific experts know which topics are pursued in their field, and this information plays a role in their assessments of whether papers are relevant to their interests, which research areas are rising or falling in popularity, and how papers relate to one another.Here, we present a statistical method for automatically extracting a representation of documents that provides a first-order approx- imation to the kind of knowledge available to domain experts.Our method discovers a set of topics expressed by documents, providing quantitative measures that can be used to identify the content of those documents, track changes in content over time, and express the similarity between documents.We use our method to discover the topics covered by papers in PNAS in a purely unsupervised fashion and illustrate how these topics can be used to gain insight into some of the structure of science.", "rank": 2, "paragraph_comparative_number": 3, "entities": [], "id": "p_2"}, "sentences": [{"end": 1143, "text": "When scientists decide to write a paper, one of the first things they do is identify an interesting subset of the many possible topics of scientific investigation.", "rank": 9, "start": 980, "IsComparative": "0", "id": "st_9"}, {"end": 1284, "text": "The topics addressed by a paper are also one of the first pieces of information a person tries to extract when reading a scientific abstract.", "rank": 10, "start": 1143, "IsComparative": "0", "id": "st_10"}, {"end": 1550, "text": "Scientific experts know which topics are pursued in their field, and this information plays a role in their assessments of whether papers are relevant to their interests, which research areas are rising or falling in popularity, and how papers relate to one another.", "rank": 11, "start": 1284, "IsComparative": "1", "id": "st_11"}, {"end": 1744, "text": "Here, we present a statistical method for automatically extracting a representation of documents that provides a first-order approx- imation to the kind of knowledge available to domain experts.", "rank": 12, "start": 1550, "IsComparative": "0", "id": "st_12"}, {"end": 1979, "text": "Our method discovers a set of topics expressed by documents, providing quantitative measures that can be used to identify the content of those documents, track changes in content over time, and express the similarity between documents.", "rank": 13, "start": 1744, "IsComparative": "1", "id": "st_13"}, {"end": 2177, "text": "We use our method to discover the topics covered by papers in PNAS in a purely unsupervised fashion and illustrate how these topics can be used to gain insight into some of the structure of science.", "rank": 14, "start": 1979, "IsComparative": "1", "id": "st_14"}]}, {"paragraph_info": {"end": 3132, "start": 2177, "text": "The statistical model we use in our analysis is a generative model for documents; it reduces the complex process of pro- ducing a scientific paper to a small number of simple probabi- listic steps and thus specifies a probability distribution over all possible documents.Generative models can be used to postulate complex latent structures responsible for a set of observations, making it possible to use statistical inference to recover this structure.This kind of approach is particularly useful with text, where the observed data (the words) are explicitly intended to communicate a latent structure (their meaning).The particular generative model we use, called Latent Dirichlet Allocation, was introduced in ref.1.This generative model postulates a latent structure consisting of a set of topics; each document is produced by choosing a distribution over topics, and then generating each word at random from a topic chosen by using this distribution.", "rank": 3, "paragraph_comparative_number": 4, "entities": [], "id": "p_3"}, "sentences": [{"end": 2448, "text": "The statistical model we use in our analysis is a generative model for documents; it reduces the complex process of pro- ducing a scientific paper to a small number of simple probabi- listic steps and thus specifies a probability distribution over all possible documents.", "rank": 15, "start": 2177, "IsComparative": "1", "id": "st_15"}, {"end": 2630, "text": "Generative models can be used to postulate complex latent structures responsible for a set of observations, making it possible to use statistical inference to recover this structure.", "rank": 16, "start": 2448, "IsComparative": "1", "id": "st_16"}, {"end": 2796, "text": "This kind of approach is particularly useful with text, where the observed data (the words) are explicitly intended to communicate a latent structure (their meaning).", "rank": 17, "start": 2630, "IsComparative": "1", "id": "st_17"}, {"end": 2894, "text": "The particular generative model we use, called Latent Dirichlet Allocation, was introduced in ref.", "rank": 18, "start": 2796, "IsComparative": "0", "id": "st_18"}, {"end": 2896, "text": "1.", "rank": 19, "start": 2894, "IsComparative": "1", "id": "st_19"}, {"end": 3132, "text": "This generative model postulates a latent structure consisting of a set of topics; each document is produced by choosing a distribution over topics, and then generating each word at random from a topic chosen by using this distribution.", "rank": 20, "start": 2896, "IsComparative": "0", "id": "st_20"}]}, {"paragraph_info": {"end": 3841, "start": 3132, "text": "The plan of this article is as follows.In the next section, we describe Latent Dirichlet Allocation and present a Markov chain Monte Carlo algorithm for inference in this model, illustrating the operation of our algorithm on a small dataset.We then apply our algorithm to a corpus consisting of abstracts from PNAS from 1991 to 2001, determining the number of topics needed to account for the information contained in this corpus and ex- tracting a set of topics.We use these topics to illustrate the relationships between different scientific disciplines, assessing trends and hot topics by analyzing topic dynamics and using the assignments of words to topics to highlight the semantic content of documents.", "rank": 4, "paragraph_comparative_number": 2, "entities": [], "id": "p_4"}, "sentences": [{"end": 3171, "text": "The plan of this article is as follows.", "rank": 21, "start": 3132, "IsComparative": "0", "id": "st_21"}, {"end": 3373, "text": "In the next section, we describe Latent Dirichlet Allocation and present a Markov chain Monte Carlo algorithm for inference in this model, illustrating the operation of our algorithm on a small dataset.", "rank": 22, "start": 3171, "IsComparative": "1", "id": "st_22"}, {"end": 3595, "text": "We then apply our algorithm to a corpus consisting of abstracts from PNAS from 1991 to 2001, determining the number of topics needed to account for the information contained in this corpus and ex- tracting a set of topics.", "rank": 23, "start": 3373, "IsComparative": "1", "id": "st_23"}, {"end": 3841, "text": "We use these topics to illustrate the relationships between different scientific disciplines, assessing trends and hot topics by analyzing topic dynamics and using the assignments of words to topics to highlight the semantic content of documents.", "rank": 24, "start": 3595, "IsComparative": "0", "id": "st_24"}]}, {"paragraph_info": {"end": 3885, "start": 3841, "text": "Documents, Topics, and Statistical Inference", "rank": 5, "paragraph_comparative_number": 0, "entities": [], "id": "p_5"}, "sentences": [{"end": 3885, "text": "Documents, Topics, and Statistical Inference", "rank": 25, "start": 3841, "IsComparative": "0", "id": "st_25"}]}, {"paragraph_info": {"end": 4660, "start": 3885, "text": "A scientific paper can deal with multiple topics, and the words that appear in that paper reflect the particular set of topics it addresses.In statistical natural language processing, one com- mon way of modeling the contributions of different topics to a document is to treat each topic as a probability distribution over words, viewing a document as a probabilistic mixture of these topics (16).If we have T topics, we can write the probability of the ith word in a given document as where zi is a latent variable indicating the topic from which the ith word was drawn and P(wi zi   j) is the probability of the word wi under the jth topic.P(zi   j) gives the probability of choosing a word from topics j in the current document, which will vary across different documents.", "rank": 6, "paragraph_comparative_number": 2, "entities": [], "id": "p_6"}, "sentences": [{"end": 4025, "text": "A scientific paper can deal with multiple topics, and the words that appear in that paper reflect the particular set of topics it addresses.", "rank": 26, "start": 3885, "IsComparative": "1", "id": "st_26"}, {"end": 4282, "text": "In statistical natural language processing, one com- mon way of modeling the contributions of different topics to a document is to treat each topic as a probability distribution over words, viewing a document as a probabilistic mixture of these topics (16).", "rank": 27, "start": 4025, "IsComparative": "0", "id": "st_27"}, {"end": 4527, "text": "If we have T topics, we can write the probability of the ith word in a given document as where zi is a latent variable indicating the topic from which the ith word was drawn and P(wi zi   j) is the probability of the word wi under the jth topic.", "rank": 28, "start": 4282, "IsComparative": "0", "id": "st_28"}, {"end": 4660, "text": "P(zi   j) gives the probability of choosing a word from topics j in the current document, which will vary across different documents.", "rank": 29, "start": 4527, "IsComparative": "1", "id": "st_29"}]}, {"paragraph_info": {"end": 5932, "start": 4660, "text": "Intuitively, P(w z) indicates which words are important to a topic, whereas P(z) is the prevalence of those topics within a document.For example, in a journal that published only articles in mathematics or neuroscience, we could express the probability distribution over words with two topics, one relating to mathe- matics and the other relating to neuroscience.The content of the topics would be reflected in P(w z); the mathematics topic would give high probability to words like theory, space, or problem, whereas the neuroscience topic would give high probability to words like synaptic, neurons, and hippocampal.Whether a particular document concerns neuroscience, mathe- matics, or computational neuroscience would depend on its distribution over topics, P(z), which determines how these topics are mixed together in forming documents.The fact that multiple topics can be responsible for the words occurring in a single document discriminates this model from a standard Bayesian classifier, in which it is assumed that all the words in the document come from a single class.The soft classification provided by this model, in which each document is characterized in terms of the contributions of multiple topics, has applications in many domains other than text (7).", "rank": 7, "paragraph_comparative_number": 2, "entities": [], "id": "p_7"}, "sentences": [{"end": 4793, "text": "Intuitively, P(w z) indicates which words are important to a topic, whereas P(z) is the prevalence of those topics within a document.", "rank": 30, "start": 4660, "IsComparative": "0", "id": "st_30"}, {"end": 5023, "text": "For example, in a journal that published only articles in mathematics or neuroscience, we could express the probability distribution over words with two topics, one relating to mathe- matics and the other relating to neuroscience.", "rank": 31, "start": 4793, "IsComparative": "1", "id": "st_31"}, {"end": 5278, "text": "The content of the topics would be reflected in P(w z); the mathematics topic would give high probability to words like theory, space, or problem, whereas the neuroscience topic would give high probability to words like synaptic, neurons, and hippocampal.", "rank": 32, "start": 5023, "IsComparative": "0", "id": "st_32"}, {"end": 5502, "text": "Whether a particular document concerns neuroscience, mathe- matics, or computational neuroscience would depend on its distribution over topics, P(z), which determines how these topics are mixed together in forming documents.", "rank": 33, "start": 5278, "IsComparative": "1", "id": "st_33"}, {"end": 5741, "text": "The fact that multiple topics can be responsible for the words occurring in a single document discriminates this model from a standard Bayesian classifier, in which it is assumed that all the words in the document come from a single class.", "rank": 34, "start": 5502, "IsComparative": "0", "id": "st_34"}, {"end": 5932, "text": "The soft classification provided by this model, in which each document is characterized in terms of the contributions of multiple topics, has applications in many domains other than text (7).", "rank": 35, "start": 5741, "IsComparative": "0", "id": "st_35"}]}, {"paragraph_info": {"end": 7041, "start": 5932, "text": "Viewing documents as mixtures of probabilistic topics makes it possible to formulate the problem of discovering the set of topics that are used in a collection of documents.Given D documents containing T topics expressed over W unique words, we can represent P(w z) with a set of T multinomial distributions over the W words, such that P(w z   j)    (j), and P(z) with  a set of D multinomial distributions   over the T topics, such that for a word in document d, P(z   j)    j(d).To discover the set of topics used in a corpus w   <w1, w2, ..., wn>, where each wi belongs to some document di, we want to obtain an estimate of   that gives high probability to the words that appear in the corpus.One strategy for obtaining such an estimate is to simply attempt to maximize P(w  ,  ), following from Eq.1 directly by using the Expectation-Maximization (8) algorithm to find max- imum likelihood estimates of   and   (2, 3).However, this approach is susceptible to problems involving local maxima and is slow to converge (1, 2), encouraging the development of models that make assumptions about the source of  .", "rank": 8, "paragraph_comparative_number": 4, "entities": [], "id": "p_8"}, "sentences": [{"end": 6105, "text": "Viewing documents as mixtures of probabilistic topics makes it possible to formulate the problem of discovering the set of topics that are used in a collection of documents.", "rank": 36, "start": 5932, "IsComparative": "0", "id": "st_36"}, {"end": 6413, "text": "Given D documents containing T topics expressed over W unique words, we can represent P(w z) with a set of T multinomial distributions over the W words, such that P(w z   j)    (j), and P(z) with  a set of D multinomial distributions   over the T topics, such that for a word in document d, P(z   j)    j(d).", "rank": 37, "start": 6105, "IsComparative": "1", "id": "st_37"}, {"end": 6474, "text": "To discover the set of topics used in a corpus w   <w1, w2, .", "rank": 38, "start": 6413, "IsComparative": "0", "id": "st_38"}, {"end": 6475, "text": ".", "rank": 39, "start": 6474, "IsComparative": "0", "id": "st_39"}, {"end": 6476, "text": ".", "rank": 40, "start": 6475, "IsComparative": "0", "id": "st_40"}, {"end": 6628, "text": ", wn>, where each wi belongs to some document di, we want to obtain an estimate of   that gives high probability to the words that appear in the corpus.", "rank": 41, "start": 6476, "IsComparative": "1", "id": "st_41"}, {"end": 6734, "text": "One strategy for obtaining such an estimate is to simply attempt to maximize P(w  ,  ), following from Eq.", "rank": 42, "start": 6628, "IsComparative": "0", "id": "st_42"}, {"end": 6854, "text": "1 directly by using the Expectation-Maximization (8) algorithm to find max- imum likelihood estimates of   and   (2, 3).", "rank": 43, "start": 6734, "IsComparative": "1", "id": "st_43"}, {"end": 7041, "text": "However, this approach is susceptible to problems involving local maxima and is slow to converge (1, 2), encouraging the development of models that make assumptions about the source of  .", "rank": 44, "start": 6854, "IsComparative": "1", "id": "st_44"}]}, {"paragraph_info": {"end": 8078, "start": 7041, "text": "Latent Dirichlet Allocation (1) is one such model, combining Eq.1 with a prior probability distribution on   to provide a complete generative model for documents.This generative model specifies a simple probabilistic procedure by which new documents can be produced given just a set of topics  , allowing   to be estimated without requiring the estimation of  .In Latent Dirichlet Allocation, documents are generated by first picking a distribution over topics   from a Dirichlet distribution, which determines P(z) for words in that document.The words in the document are then generated by picking a topic j from this distribution and then picking a word from that topic according to P(w z   j), which is determined by a fixed  (j).The estimation problem becomes one of maximizing P(w  , )     P(w  , )P(   )d , where P( ) is a Dirichlet ( ) distribution.The integral in this expression is intractable, and   is thus usually estimated by using sophisticated approximations, either varia- tional Bayes (1) or expectation propagation (9).", "rank": 9, "paragraph_comparative_number": 1, "entities": [], "id": "p_9"}, "sentences": [{"end": 7105, "text": "Latent Dirichlet Allocation (1) is one such model, combining Eq.", "rank": 45, "start": 7041, "IsComparative": "0", "id": "st_45"}, {"end": 7203, "text": "1 with a prior probability distribution on   to provide a complete generative model for documents.", "rank": 46, "start": 7105, "IsComparative": "0", "id": "st_46"}, {"end": 7402, "text": "This generative model specifies a simple probabilistic procedure by which new documents can be produced given just a set of topics  , allowing   to be estimated without requiring the estimation of  .", "rank": 47, "start": 7203, "IsComparative": "1", "id": "st_47"}, {"end": 7584, "text": "In Latent Dirichlet Allocation, documents are generated by first picking a distribution over topics   from a Dirichlet distribution, which determines P(z) for words in that document.", "rank": 48, "start": 7402, "IsComparative": "0", "id": "st_48"}, {"end": 7774, "text": "The words in the document are then generated by picking a topic j from this distribution and then picking a word from that topic according to P(w z   j), which is determined by a fixed  (j).", "rank": 49, "start": 7584, "IsComparative": "0", "id": "st_49"}, {"end": 7897, "text": "The estimation problem becomes one of maximizing P(w  , )     P(w  , )P(   )d , where P( ) is a Dirichlet ( ) distribution.", "rank": 50, "start": 7774, "IsComparative": "0", "id": "st_50"}, {"end": 8078, "text": "The integral in this expression is intractable, and   is thus usually estimated by using sophisticated approximations, either varia- tional Bayes (1) or expectation propagation (9).", "rank": 51, "start": 7897, "IsComparative": "0", "id": "st_51"}]}, {"paragraph_info": {"end": 8117, "start": 8078, "text": "Using Gibbs Sampling to Discover Topics", "rank": 10, "paragraph_comparative_number": 0, "entities": [], "id": "p_10"}, "sentences": [{"end": 8117, "text": "Using Gibbs Sampling to Discover Topics", "rank": 52, "start": 8078, "IsComparative": "0", "id": "st_52"}]}, {"paragraph_info": {"end": 8835, "start": 8117, "text": "Our strategy for discovering topics differs from previous ap- proaches in not explicitly representing   or   as parameters to be estimated, but instead considering the posterior distribution over the assignments of words to topics, P(z w).We then obtain estimates of   and   by examining this posterior distribution.Evaluating P(z w) requires solving a problem that has been studied in detail in Bayesian statistics and statistical physics, computing a probability distribution over a large discrete state space.We address this problem by using a Monte Carlo proce- dure, resulting in an algorithm that is easy to implement, requires little memory, and is competitive in speed and performance with existing algorithms.", "rank": 11, "paragraph_comparative_number": 3, "entities": [], "id": "p_11"}, "sentences": [{"end": 8356, "text": "Our strategy for discovering topics differs from previous ap- proaches in not explicitly representing   or   as parameters to be estimated, but instead considering the posterior distribution over the assignments of words to topics, P(z w).", "rank": 53, "start": 8117, "IsComparative": "1", "id": "st_53"}, {"end": 8433, "text": "We then obtain estimates of   and   by examining this posterior distribution.", "rank": 54, "start": 8356, "IsComparative": "1", "id": "st_54"}, {"end": 8629, "text": "Evaluating P(z w) requires solving a problem that has been studied in detail in Bayesian statistics and statistical physics, computing a probability distribution over a large discrete state space.", "rank": 55, "start": 8433, "IsComparative": "0", "id": "st_55"}, {"end": 8835, "text": "We address this problem by using a Monte Carlo proce- dure, resulting in an algorithm that is easy to implement, requires little memory, and is competitive in speed and performance with existing algorithms.", "rank": 56, "start": 8629, "IsComparative": "1", "id": "st_56"}]}, {"paragraph_info": {"end": 8979, "start": 8835, "text": "We use the probability model for Latent Dirichlet Allocation, with the addition of a Dirichlet prior on  .The complete probability model is thus", "rank": 12, "paragraph_comparative_number": 0, "entities": [], "id": "p_12"}, "sentences": [{"end": 8941, "text": "We use the probability model for Latent Dirichlet Allocation, with the addition of a Dirichlet prior on  .", "rank": 57, "start": 8835, "IsComparative": "0", "id": "st_57"}, {"end": 8979, "text": "The complete probability model is thus", "rank": 58, "start": 8941, "IsComparative": "0", "id": "st_58"}]}, {"paragraph_info": {"end": 9924, "start": 8979, "text": "Here,   and   are hyperparameters, specifying the nature of the priors on   and  .Although these hyperparameters could be vector-valued as in refs.1 and 9, for the purposes of this article we assume symmetric Dirichlet priors, with   and   each having a single value.These priors are conjugate to the multinomial distributions   and  , allowing us to compute the joint distri- bution P(w, z) by integrating out   and  .Because P(w, z)   P(w z)P(z) and   and   only appear in the first and second terms, respectively, we can perform these integrals separately.Inte- grating out   gives the first term in which n(w) is the number of times word w has been assigned to topic j in the vector of assignments z, and  ( ) is the standard gamma function.The second term results from integrating out  , to give where nj(d) is the number of times a word from document d has been assigned to topic j. Our goal is then to evaluate the posterior distribution.", "rank": 13, "paragraph_comparative_number": 3, "entities": [], "id": "p_13"}, "sentences": [{"end": 9061, "text": "Here,   and   are hyperparameters, specifying the nature of the priors on   and  .", "rank": 59, "start": 8979, "IsComparative": "0", "id": "st_59"}, {"end": 9126, "text": "Although these hyperparameters could be vector-valued as in refs.", "rank": 60, "start": 9061, "IsComparative": "0", "id": "st_60"}, {"end": 9246, "text": "1 and 9, for the purposes of this article we assume symmetric Dirichlet priors, with   and   each having a single value.", "rank": 61, "start": 9126, "IsComparative": "1", "id": "st_61"}, {"end": 9398, "text": "These priors are conjugate to the multinomial distributions   and  , allowing us to compute the joint distri- bution P(w, z) by integrating out   and  .", "rank": 62, "start": 9246, "IsComparative": "0", "id": "st_62"}, {"end": 9538, "text": "Because P(w, z)   P(w z)P(z) and   and   only appear in the first and second terms, respectively, we can perform these integrals separately.", "rank": 63, "start": 9398, "IsComparative": "0", "id": "st_63"}, {"end": 9724, "text": "Inte- grating out   gives the first term in which n(w) is the number of times word w has been assigned to topic j in the vector of assignments z, and  ( ) is the standard gamma function.", "rank": 64, "start": 9538, "IsComparative": "1", "id": "st_64"}, {"end": 9924, "text": "The second term results from integrating out  , to give where nj(d) is the number of times a word from document d has been assigned to topic j. Our goal is then to evaluate the posterior distribution.", "rank": 65, "start": 9724, "IsComparative": "1", "id": "st_65"}]}, {"paragraph_info": {"end": 10123, "start": 9924, "text": "Unfortunately, this distribution cannot be computed directly, because the sum in the denominator does not factorize and involves Tn terms, where n is the total number of word instances in the corpus.", "rank": 14, "paragraph_comparative_number": 1, "entities": [], "id": "p_14"}, "sentences": [{"end": 10123, "text": "Unfortunately, this distribution cannot be computed directly, because the sum in the denominator does not factorize and involves Tn terms, where n is the total number of word instances in the corpus.", "rank": 66, "start": 9924, "IsComparative": "1", "id": "st_66"}]}, {"paragraph_info": {"end": 11492, "start": 10123, "text": "Computing P(z w) involves evaluating a probability distribu- tion on a large discrete state space, a problem that arises often in statistical physics.Our setting is similar, in particular, to the Potts model (e.g., ref.10), with an ensemble of discrete variables z, each of which can take on values in <1, 2,..., T>, and an energy function given by H(z)     log P(w, z)    log P(w z)   log P(z).Unlike the Potts model, in which the energy function is usually defined in terms of local interactions on a lattice, here the contribution of each zi depends on all z i values through the counts nj(w) and nj(d).Intuitively, this energy function favors ensembles of assignments z that form a good compromise between having few topics per document and having few words per topic, with the terms of this compromise being set by the hyperparameters   and  .The fundamental computational problems raised by this model remain the same as those of the Potts model: We can evaluate H(z) for any configuration z, but the state space is too large to enumerate, and we cannot compute the partition function that converts this into a probability distribution (in our case, the denominator of Eq.4).Conse- quently, we apply a method that physicists and statisticians have developed for dealing with these problems, sampling from the target distribution by using Markov chain Monte Carlo.", "rank": 15, "paragraph_comparative_number": 4, "entities": [], "id": "p_15"}, "sentences": [{"end": 10273, "text": "Computing P(z w) involves evaluating a probability distribu- tion on a large discrete state space, a problem that arises often in statistical physics.", "rank": 67, "start": 10123, "IsComparative": "0", "id": "st_67"}, {"end": 10342, "text": "Our setting is similar, in particular, to the Potts model (e.g., ref.", "rank": 68, "start": 10273, "IsComparative": "1", "id": "st_68"}, {"end": 10518, "text": "10), with an ensemble of discrete variables z, each of which can take on values in <1, 2,..., T>, and an energy function given by H(z)     log P(w, z)    log P(w z)   log P(z).", "rank": 69, "start": 10342, "IsComparative": "1", "id": "st_69"}, {"end": 10729, "text": "Unlike the Potts model, in which the energy function is usually defined in terms of local interactions on a lattice, here the contribution of each zi depends on all z i values through the counts nj(w) and nj(d).", "rank": 70, "start": 10518, "IsComparative": "0", "id": "st_70"}, {"end": 10971, "text": "Intuitively, this energy function favors ensembles of assignments z that form a good compromise between having few topics per document and having few words per topic, with the terms of this compromise being set by the hyperparameters   and  .", "rank": 71, "start": 10729, "IsComparative": "0", "id": "st_71"}, {"end": 11301, "text": "The fundamental computational problems raised by this model remain the same as those of the Potts model: We can evaluate H(z) for any configuration z, but the state space is too large to enumerate, and we cannot compute the partition function that converts this into a probability distribution (in our case, the denominator of Eq.", "rank": 72, "start": 10971, "IsComparative": "1", "id": "st_72"}, {"end": 11304, "text": "4).", "rank": 73, "start": 11301, "IsComparative": "1", "id": "st_73"}, {"end": 11492, "text": "Conse- quently, we apply a method that physicists and statisticians have developed for dealing with these problems, sampling from the target distribution by using Markov chain Monte Carlo.", "rank": 74, "start": 11304, "IsComparative": "0", "id": "st_74"}]}, {"paragraph_info": {"end": 12654, "start": 11492, "text": "In Markov chain Monte Carlo, a Markov chain is constructed to converge to the target distribution, and samples are then taken from that Markov chain (see refs.1012).Each state of the chain is an assignment of values to the variables being sampled, in this case z, and transitions between states follow a simple rule.We use Gibbs sampling (13), known as the heat bath algorithm in statistical physics (10), where the next state is reached by sequentially sampling all variables from their distribution when conditioned on the current values of all other variables and the data.To apply this algorithm we need the full conditional distribution P(zi z i, w).This distribution can be obtained by a probabilistic argument or by cancellation of terms in Eqs.2 and 3, yielding of zi.This result is quite intuitive; the first ratio expresses the probability of wi under topic j, and the second ratio expresses the probability of topic j in document di.Critically, these counts are the only information necessary for computing the full condi- tional distribution, allowing the algorithm to be implemented efficiently by caching the relatively small set of nonzero counts.", "rank": 16, "paragraph_comparative_number": 1, "entities": [], "id": "p_16"}, "sentences": [{"end": 11651, "text": "In Markov chain Monte Carlo, a Markov chain is constructed to converge to the target distribution, and samples are then taken from that Markov chain (see refs.", "rank": 75, "start": 11492, "IsComparative": "0", "id": "st_75"}, {"end": 11657, "text": "1012).", "rank": 76, "start": 11651, "IsComparative": "1", "id": "st_76"}, {"end": 11808, "text": "Each state of the chain is an assignment of values to the variables being sampled, in this case z, and transitions between states follow a simple rule.", "rank": 77, "start": 11657, "IsComparative": "0", "id": "st_77"}, {"end": 12068, "text": "We use Gibbs sampling (13), known as the heat bath algorithm in statistical physics (10), where the next state is reached by sequentially sampling all variables from their distribution when conditioned on the current values of all other variables and the data.", "rank": 78, "start": 11808, "IsComparative": "0", "id": "st_78"}, {"end": 12147, "text": "To apply this algorithm we need the full conditional distribution P(zi z i, w).", "rank": 79, "start": 12068, "IsComparative": "0", "id": "st_79"}, {"end": 12244, "text": "This distribution can be obtained by a probabilistic argument or by cancellation of terms in Eqs.", "rank": 80, "start": 12147, "IsComparative": "0", "id": "st_80"}, {"end": 12268, "text": "2 and 3, yielding of zi.", "rank": 81, "start": 12244, "IsComparative": "0", "id": "st_81"}, {"end": 12436, "text": "This result is quite intuitive; the first ratio expresses the probability of wi under topic j, and the second ratio expresses the probability of topic j in document di.", "rank": 82, "start": 12268, "IsComparative": "0", "id": "st_82"}, {"end": 12654, "text": "Critically, these counts are the only information necessary for computing the full condi- tional distribution, allowing the algorithm to be implemented efficiently by caching the relatively small set of nonzero counts.", "rank": 83, "start": 12436, "IsComparative": "0", "id": "st_83"}]}, {"paragraph_info": {"end": 13744, "start": 12654, "text": "Having obtained the full conditional distribution, the Monte Carlo algorithm is then straightforward.The zi variables are initialized to values in <1, 2, ..., T>, determining the initial state of the Markov chain.We do this with an on-line version of the Gibbs sampler, using Eq.5 to assign words to topics, but with counts that are computed from the subset of the words seen so far rather than the full data.The chain is then run for a number of iterations, each time finding a new state by sampling each zi from the distribution specified by Eq.5.Because the only information needed to apply Eq.5 is the number of times a word is assigned to a topic and the number of times a topic occurs in a document, the algorithm can be run with minimal memory requirements by caching the sparse set of nonzero counts and updating them whenever a word is reassigned.After enough iterations for the chain to approach the target distribution, the current values of the zi variables are recorded.Subsequent samples are taken after an appropriate lag to ensure that their autocorrelation is low (10, 11).", "rank": 17, "paragraph_comparative_number": 3, "entities": [], "id": "p_17"}, "sentences": [{"end": 12755, "text": "Having obtained the full conditional distribution, the Monte Carlo algorithm is then straightforward.", "rank": 84, "start": 12654, "IsComparative": "0", "id": "st_84"}, {"end": 12809, "text": "The zi variables are initialized to values in <1, 2, .", "rank": 85, "start": 12755, "IsComparative": "0", "id": "st_85"}, {"end": 12810, "text": ".", "rank": 86, "start": 12809, "IsComparative": "0", "id": "st_86"}, {"end": 12811, "text": ".", "rank": 87, "start": 12810, "IsComparative": "0", "id": "st_87"}, {"end": 12867, "text": ", T>, determining the initial state of the Markov chain.", "rank": 88, "start": 12811, "IsComparative": "0", "id": "st_88"}, {"end": 12933, "text": "We do this with an on-line version of the Gibbs sampler, using Eq.", "rank": 89, "start": 12867, "IsComparative": "0", "id": "st_89"}, {"end": 13063, "text": "5 to assign words to topics, but with counts that are computed from the subset of the words seen so far rather than the full data.", "rank": 90, "start": 12933, "IsComparative": "0", "id": "st_90"}, {"end": 13201, "text": "The chain is then run for a number of iterations, each time finding a new state by sampling each zi from the distribution specified by Eq.", "rank": 91, "start": 13063, "IsComparative": "0", "id": "st_91"}, {"end": 13203, "text": "5.", "rank": 92, "start": 13201, "IsComparative": "1", "id": "st_92"}, {"end": 13251, "text": "Because the only information needed to apply Eq.", "rank": 93, "start": 13203, "IsComparative": "0", "id": "st_93"}, {"end": 13510, "text": "5 is the number of times a word is assigned to a topic and the number of times a topic occurs in a document, the algorithm can be run with minimal memory requirements by caching the sparse set of nonzero counts and updating them whenever a word is reassigned.", "rank": 94, "start": 13251, "IsComparative": "1", "id": "st_94"}, {"end": 13637, "text": "After enough iterations for the chain to approach the target distribution, the current values of the zi variables are recorded.", "rank": 95, "start": 13510, "IsComparative": "0", "id": "st_95"}, {"end": 13744, "text": "Subsequent samples are taken after an appropriate lag to ensure that their autocorrelation is low (10, 11).", "rank": 96, "start": 13637, "IsComparative": "1", "id": "st_96"}]}, {"paragraph_info": {"end": 14001, "start": 13744, "text": "With a set of samples from the posterior distribution P(z w), statistics that are independent of the content of individual topics can be computed by integrating across the full set of samples.For any single sample we can estimate   and   from the value z by", "rank": 18, "paragraph_comparative_number": 0, "entities": [], "id": "p_18"}, "sentences": [{"end": 13936, "text": "With a set of samples from the posterior distribution P(z w), statistics that are independent of the content of individual topics can be computed by integrating across the full set of samples.", "rank": 97, "start": 13744, "IsComparative": "0", "id": "st_97"}, {"end": 14001, "text": "For any single sample we can estimate   and   from the value z by", "rank": 98, "start": 13936, "IsComparative": "0", "id": "st_98"}]}, {"paragraph_info": {"end": 14114, "start": 14001, "text": "These values correspond to the predictive distributions over new words w and new topics z conditioned on w and z.", "rank": 19, "paragraph_comparative_number": 0, "entities": [], "id": "p_19"}, "sentences": [{"end": 14114, "text": "These values correspond to the predictive distributions over new words w and new topics z conditioned on w and z.", "rank": 99, "start": 14001, "IsComparative": "0", "id": "st_99"}]}, {"paragraph_info": {"end": 14133, "start": 14114, "text": "A graphical example", "rank": 20, "paragraph_comparative_number": 0, "entities": [], "id": "p_20"}, "sentences": [{"end": 14133, "text": "A graphical example", "rank": 100, "start": 14114, "IsComparative": "0", "id": "st_100"}]}, {"paragraph_info": {"end": 15251, "start": 14133, "text": "To illustrate the operation of the algorithm and to show that it runs in time comparable with existing methods of estimating  , we generated a small dataset in which the output of the algorithm can be shown graphically.The dataset consisted of a set of 2,000 images, each containing 25 pixels in a 5   5 grid.The intensity of any pixel is specified by an integer value between zero and infinity.This dataset is of exactly the same form as a word- document cooccurrence matrix constructed from a database of documents, with each image being a document, with each pixel being a word, and with the intensity of a pixel being its frequency.The images were generated by defining a set of 10 topics corresponding to horizontal and vertical bars, as shown in Fig.1a, then sampling a multinomial distribution   for each image from a Dirichlet distribution with     1, and sampling 100 pixels (words) according to Eq.1.A subset of the images generated in this fashion are shown in Fig.1b.Although some images show evidence of many samples from a single topic, it is difficult to discern the underlying structure of most images.", "rank": 21, "paragraph_comparative_number": 7, "entities": [], "id": "p_21"}, "sentences": [{"end": 14352, "text": "To illustrate the operation of the algorithm and to show that it runs in time comparable with existing methods of estimating  , we generated a small dataset in which the output of the algorithm can be shown graphically.", "rank": 101, "start": 14133, "IsComparative": "1", "id": "st_101"}, {"end": 14442, "text": "The dataset consisted of a set of 2,000 images, each containing 25 pixels in a 5   5 grid.", "rank": 102, "start": 14352, "IsComparative": "1", "id": "st_102"}, {"end": 14528, "text": "The intensity of any pixel is specified by an integer value between zero and infinity.", "rank": 103, "start": 14442, "IsComparative": "0", "id": "st_103"}, {"end": 14769, "text": "This dataset is of exactly the same form as a word- document cooccurrence matrix constructed from a database of documents, with each image being a document, with each pixel being a word, and with the intensity of a pixel being its frequency.", "rank": 104, "start": 14528, "IsComparative": "1", "id": "st_104"}, {"end": 14889, "text": "The images were generated by defining a set of 10 topics corresponding to horizontal and vertical bars, as shown in Fig.", "rank": 105, "start": 14769, "IsComparative": "1", "id": "st_105"}, {"end": 15041, "text": "1a, then sampling a multinomial distribution   for each image from a Dirichlet distribution with     1, and sampling 100 pixels (words) according to Eq.", "rank": 106, "start": 14889, "IsComparative": "1", "id": "st_106"}, {"end": 15043, "text": "1.", "rank": 107, "start": 15041, "IsComparative": "1", "id": "st_107"}, {"end": 15109, "text": "A subset of the images generated in this fashion are shown in Fig.", "rank": 108, "start": 15043, "IsComparative": "0", "id": "st_108"}, {"end": 15112, "text": "1b.", "rank": 109, "start": 15109, "IsComparative": "1", "id": "st_109"}, {"end": 15251, "text": "Although some images show evidence of many samples from a single topic, it is difficult to discern the underlying structure of most images.", "rank": 110, "start": 15112, "IsComparative": "0", "id": "st_110"}]}, {"paragraph_info": {"end": 17432, "start": 15251, "text": "We applied our Gibbs sampling algorithm to this dataset, together with the two algorithms that have previously been used for inference in Latent Dirichlet Allocation: variational Bayes (1) and expectation propagation (9).(The implementations of variational Bayes and expectation propagation were provided by Tom Minka and are available at www.stat.cmu.edu ~minka  papers aspect.html.)We divided the dataset into 1,000 training images and 1,000 test images and ran each algorithm four times, using the same initial conditions for all three algorithms on a given run.These initial conditions were found by an online application of Gibbs sampling, as mentioned above.Variational Bayes and expectation propagation were run until convergence, and Gibbs sampling was run for 1,000 iterations.All three algorithms used a fixed Dirichlet prior on  , with     1.We tracked the number of floating point operations per iteration for each algorithm and computed the test set perplexity for the estimates of   provided by the algorithms at several points.Perplexity is a standard measure of performance for statistical models of natural language (14) and is defined as exp< log P(wtest  ) ntest>, where wtest and ntest indicate the identities and number of words in the test set, respectively.Perplexity indicates the uncertainty in predicting a single word; lower values are better, and chance performance results in a perplexity equal to the size of the vocabulary, which is 25 in this case.The perplexity for all three models was evaluated by using importance sampling as in ref.9, and the estimates of   used for evaluating Gibbs sampling were each obtained from a single sample as in Eq.6.The results of these computations are shown in Fig.1c.All three algorithms are able to recover the underlying topics, and Gibbs sampling does so more rapidly than either variational Bayes or expectation propagation.A graphical illustration of the opera- tion of the Gibbs sampler is shown in Fig.2.The log-likelihood stabilizes quickly, in a fashion consistent across multiple runs, and the topics expressed in the dataset slowly emerge as appro- priate assignments of words to topics are discovered.", "rank": 22, "paragraph_comparative_number": 11, "entities": [], "id": "p_22"}, "sentences": [{"end": 15472, "text": "We applied our Gibbs sampling algorithm to this dataset, together with the two algorithms that have previously been used for inference in Latent Dirichlet Allocation: variational Bayes (1) and expectation propagation (9).", "rank": 111, "start": 15251, "IsComparative": "1", "id": "st_111"}, {"end": 15635, "text": "(The implementations of variational Bayes and expectation propagation were provided by Tom Minka and are available at www.stat.cmu.edu ~minka  papers aspect.html.)", "rank": 112, "start": 15472, "IsComparative": "0", "id": "st_112"}, {"end": 15816, "text": "We divided the dataset into 1,000 training images and 1,000 test images and ran each algorithm four times, using the same initial conditions for all three algorithms on a given run.", "rank": 113, "start": 15635, "IsComparative": "1", "id": "st_113"}, {"end": 15915, "text": "These initial conditions were found by an online application of Gibbs sampling, as mentioned above.", "rank": 114, "start": 15816, "IsComparative": "0", "id": "st_114"}, {"end": 16037, "text": "Variational Bayes and expectation propagation were run until convergence, and Gibbs sampling was run for 1,000 iterations.", "rank": 115, "start": 15915, "IsComparative": "1", "id": "st_115"}, {"end": 16104, "text": "All three algorithms used a fixed Dirichlet prior on  , with     1.", "rank": 116, "start": 16037, "IsComparative": "1", "id": "st_116"}, {"end": 16293, "text": "We tracked the number of floating point operations per iteration for each algorithm and computed the test set perplexity for the estimates of   provided by the algorithms at several points.", "rank": 117, "start": 16104, "IsComparative": "1", "id": "st_117"}, {"end": 16531, "text": "Perplexity is a standard measure of performance for statistical models of natural language (14) and is defined as exp< log P(wtest  ) ntest>, where wtest and ntest indicate the identities and number of words in the test set, respectively.", "rank": 118, "start": 16293, "IsComparative": "0", "id": "st_118"}, {"end": 16731, "text": "Perplexity indicates the uncertainty in predicting a single word; lower values are better, and chance performance results in a perplexity equal to the size of the vocabulary, which is 25 in this case.", "rank": 119, "start": 16531, "IsComparative": "1", "id": "st_119"}, {"end": 16820, "text": "The perplexity for all three models was evaluated by using importance sampling as in ref.", "rank": 120, "start": 16731, "IsComparative": "1", "id": "st_120"}, {"end": 16930, "text": "9, and the estimates of   used for evaluating Gibbs sampling were each obtained from a single sample as in Eq.", "rank": 121, "start": 16820, "IsComparative": "0", "id": "st_121"}, {"end": 16932, "text": "6.", "rank": 122, "start": 16930, "IsComparative": "1", "id": "st_122"}, {"end": 16983, "text": "The results of these computations are shown in Fig.", "rank": 123, "start": 16932, "IsComparative": "0", "id": "st_123"}, {"end": 16986, "text": "1c.", "rank": 124, "start": 16983, "IsComparative": "1", "id": "st_124"}, {"end": 17147, "text": "All three algorithms are able to recover the underlying topics, and Gibbs sampling does so more rapidly than either variational Bayes or expectation propagation.", "rank": 125, "start": 16986, "IsComparative": "1", "id": "st_125"}, {"end": 17228, "text": "A graphical illustration of the opera- tion of the Gibbs sampler is shown in Fig.", "rank": 126, "start": 17147, "IsComparative": "0", "id": "st_126"}, {"end": 17230, "text": "2.", "rank": 127, "start": 17228, "IsComparative": "1", "id": "st_127"}, {"end": 17432, "text": "The log-likelihood stabilizes quickly, in a fashion consistent across multiple runs, and the topics expressed in the dataset slowly emerge as appro- priate assignments of words to topics are discovered.", "rank": 128, "start": 17230, "IsComparative": "0", "id": "st_128"}]}, {"paragraph_info": {"end": 18198, "start": 17432, "text": "These results show that Gibbs sampling can be competitive in speed with existing algorithms, although further tests with larger datasets involving real text are necessary to evaluate the strengths and weaknesses of the different algorithms.The effects of including the Dirichlet ( ) prior in the model and the use of methods for estimating the hyperparameters   and   need to be assessed as part of this comparison.A variational algorithm for this smoothed model is described in ref.1, which may be more similar to the Gibbs sampling algorithm described here.Ulti- mately, these different approaches are complementary rather than competitive, providing different means of performing approximate inference that can be selected according to the demands of the problem.", "rank": 23, "paragraph_comparative_number": 0, "entities": [], "id": "p_23"}, "sentences": [{"end": 17672, "text": "These results show that Gibbs sampling can be competitive in speed with existing algorithms, although further tests with larger datasets involving real text are necessary to evaluate the strengths and weaknesses of the different algorithms.", "rank": 129, "start": 17432, "IsComparative": "0", "id": "st_129"}, {"end": 17847, "text": "The effects of including the Dirichlet ( ) prior in the model and the use of methods for estimating the hyperparameters   and   need to be assessed as part of this comparison.", "rank": 130, "start": 17672, "IsComparative": "0", "id": "st_130"}, {"end": 17915, "text": "A variational algorithm for this smoothed model is described in ref.", "rank": 131, "start": 17847, "IsComparative": "0", "id": "st_131"}, {"end": 17991, "text": "1, which may be more similar to the Gibbs sampling algorithm described here.", "rank": 132, "start": 17915, "IsComparative": "0", "id": "st_132"}, {"end": 18198, "text": "Ulti- mately, these different approaches are complementary rather than competitive, providing different means of performing approximate inference that can be selected according to the demands of the problem.", "rank": 133, "start": 17991, "IsComparative": "0", "id": "st_133"}]}, {"paragraph_info": {"end": 18213, "start": 18198, "text": "Model Selection", "rank": 24, "paragraph_comparative_number": 0, "entities": [], "id": "p_24"}, "sentences": [{"end": 18213, "text": "Model Selection", "rank": 134, "start": 18198, "IsComparative": "0", "id": "st_134"}]}, {"paragraph_info": {"end": 19348, "start": 18213, "text": "The statistical model we have described is conditioned on three parameters, which we have suppressed in the equations above: the Dirichlet hyperparameters   and   and the number of topics T. Our algorithm is easily extended to allow  ,  , and z to be sampled, but this extension can slow the convergence of the Markov chain.Our strategy in this article is to fix   and   and explore the consequences of varying T. The choice of   and   can have important implications for the results produced by the model.In particular, increasing   can be expected to decrease the number of topics used to describe a dataset, because it reduces the impact of sparsity in Eq.2.The value of   thus affects the granularity of the model: a corpus of documents can be sensibly factorized into a set of topics at several different scales, and the particular scale assessed by the model will be set by  .With scientific documents, a large value of   would lead the model to find a relatively small number of topics, perhaps at the level of scientific disciplines, whereas smaller values of   will produce more topics that address specific areas of research.", "rank": 25, "paragraph_comparative_number": 5, "entities": [], "id": "p_25"}, "sentences": [{"end": 18537, "text": "The statistical model we have described is conditioned on three parameters, which we have suppressed in the equations above: the Dirichlet hyperparameters   and   and the number of topics T. Our algorithm is easily extended to allow  ,  , and z to be sampled, but this extension can slow the convergence of the Markov chain.", "rank": 135, "start": 18213, "IsComparative": "1", "id": "st_135"}, {"end": 18719, "text": "Our strategy in this article is to fix   and   and explore the consequences of varying T. The choice of   and   can have important implications for the results produced by the model.", "rank": 136, "start": 18537, "IsComparative": "1", "id": "st_136"}, {"end": 18872, "text": "In particular, increasing   can be expected to decrease the number of topics used to describe a dataset, because it reduces the impact of sparsity in Eq.", "rank": 137, "start": 18719, "IsComparative": "1", "id": "st_137"}, {"end": 18874, "text": "2.", "rank": 138, "start": 18872, "IsComparative": "1", "id": "st_138"}, {"end": 19095, "text": "The value of   thus affects the granularity of the model: a corpus of documents can be sensibly factorized into a set of topics at several different scales, and the particular scale assessed by the model will be set by  .", "rank": 139, "start": 18874, "IsComparative": "0", "id": "st_139"}, {"end": 19348, "text": "With scientific documents, a large value of   would lead the model to find a relatively small number of topics, perhaps at the level of scientific disciplines, whereas smaller values of   will produce more topics that address specific areas of research.", "rank": 140, "start": 19095, "IsComparative": "1", "id": "st_140"}]}, {"paragraph_info": {"end": 20102, "start": 19348, "text": "Given values of   and  , the problem of choosing the appropriate value for T is a problem of model selection, which we address by using a standard method from Bayesian statistics (15).For a Bayesian statistician faced with a choice between a set of statistical models, the natural response is to compute the posterior probability of that set of models given the observed data.The key constituent of this posterior probability will be the likelihood of the data given the model, integrating over all parameters in the model.In our case, the data are the words in the corpus, w, and the model is specified by the number of topics, T, so we wish to compute the likelihood P(w T).The complica- tion is that this requires summing over all possible assignments", "rank": 26, "paragraph_comparative_number": 2, "entities": [], "id": "p_26"}, "sentences": [{"end": 19532, "text": "Given values of   and  , the problem of choosing the appropriate value for T is a problem of model selection, which we address by using a standard method from Bayesian statistics (15).", "rank": 141, "start": 19348, "IsComparative": "1", "id": "st_141"}, {"end": 19724, "text": "For a Bayesian statistician faced with a choice between a set of statistical models, the natural response is to compute the posterior probability of that set of models given the observed data.", "rank": 142, "start": 19532, "IsComparative": "1", "id": "st_142"}, {"end": 19871, "text": "The key constituent of this posterior probability will be the likelihood of the data given the model, integrating over all parameters in the model.", "rank": 143, "start": 19724, "IsComparative": "0", "id": "st_143"}, {"end": 20024, "text": "In our case, the data are the words in the corpus, w, and the model is specified by the number of topics, T, so we wish to compute the likelihood P(w T).", "rank": 144, "start": 19871, "IsComparative": "0", "id": "st_144"}, {"end": 20102, "text": "The complica- tion is that this requires summing over all possible assignments", "rank": 145, "start": 20024, "IsComparative": "0", "id": "st_145"}]}, {"paragraph_info": {"end": 20374, "start": 20102, "text": "of words to topics z.However, we can approximate P(w T) by taking the harmonic mean of a set of values of P(w z, T) when z is sampled from the posterior P(z w, T) (15).Our Gibbs sampling algorithm provides such samples, and the value of P(w z,T) can be computed from Eq.2.", "rank": 27, "paragraph_comparative_number": 3, "entities": [], "id": "p_27"}, "sentences": [{"end": 20123, "text": "of words to topics z.", "rank": 146, "start": 20102, "IsComparative": "0", "id": "st_146"}, {"end": 20270, "text": "However, we can approximate P(w T) by taking the harmonic mean of a set of values of P(w z, T) when z is sampled from the posterior P(z w, T) (15).", "rank": 147, "start": 20123, "IsComparative": "1", "id": "st_147"}, {"end": 20372, "text": "Our Gibbs sampling algorithm provides such samples, and the value of P(w z,T) can be computed from Eq.", "rank": 148, "start": 20270, "IsComparative": "1", "id": "st_148"}, {"end": 20374, "text": "2.", "rank": 149, "start": 20372, "IsComparative": "1", "id": "st_149"}]}, {"paragraph_info": {"end": 20395, "start": 20374, "text": "The Topics of Science", "rank": 28, "paragraph_comparative_number": 0, "entities": [], "id": "p_28"}, "sentences": [{"end": 20395, "text": "The Topics of Science", "rank": 150, "start": 20374, "IsComparative": "0", "id": "st_150"}]}, {"paragraph_info": {"end": 21168, "start": 20395, "text": "The algorithm outlined above can be used to find the topics that account for the words used in a set of documents.We applied this algorithm to the abstracts of papers published in PNAS from 1991 to 2001, with the aim of discovering some of the topics addressed by scientific research.We first used Bayesian model selection to identify the number of topics needed to best account for the structure of this corpus, and we then conducted a detailed analysis with the selected number of topics.Our detailed analysis involved examining the relationship between the topics discov- ered by our algorithm and the class designations supplied by PNAS authors, using topic dynamics to identify hot topics and using the topic assignments to highlight the semantic content in abstracts.", "rank": 29, "paragraph_comparative_number": 2, "entities": [], "id": "p_29"}, "sentences": [{"end": 20509, "text": "The algorithm outlined above can be used to find the topics that account for the words used in a set of documents.", "rank": 151, "start": 20395, "IsComparative": "0", "id": "st_151"}, {"end": 20679, "text": "We applied this algorithm to the abstracts of papers published in PNAS from 1991 to 2001, with the aim of discovering some of the topics addressed by scientific research.", "rank": 152, "start": 20509, "IsComparative": "0", "id": "st_152"}, {"end": 20885, "text": "We first used Bayesian model selection to identify the number of topics needed to best account for the structure of this corpus, and we then conducted a detailed analysis with the selected number of topics.", "rank": 153, "start": 20679, "IsComparative": "1", "id": "st_153"}, {"end": 21168, "text": "Our detailed analysis involved examining the relationship between the topics discov- ered by our algorithm and the class designations supplied by PNAS authors, using topic dynamics to identify hot topics and using the topic assignments to highlight the semantic content in abstracts.", "rank": 154, "start": 20885, "IsComparative": "1", "id": "st_154"}]}, {"paragraph_info": {"end": 22004, "start": 21168, "text": "How Many Topics?To evaluate the consequences of changing the number of topics T, we used the Gibbs sampling algorithm outlined in the preceding section to obtain samples from the posterior distribution over z at several choices of T. We used all 28,154 abstracts published in PNAS from 1991 to 2001, with each of these abstracts constituting a single document in the corpus (we will use the words abstract and document interchangeably from this point forward).Any delimiting character, including hyphens, was used to separate words, and we deleted any words that occurred in less than five abstracts or belonged to a standard stop list used in computational linguistics, including numbers, individual characters, and some function words.This gave us a vocabulary of 20,551 words, which occurred a total of 3,026,970 times in the corpus.", "rank": 30, "paragraph_comparative_number": 3, "entities": [], "id": "p_30"}, "sentences": [{"end": 21184, "text": "How Many Topics?", "rank": 155, "start": 21168, "IsComparative": "0", "id": "st_155"}, {"end": 21628, "text": "To evaluate the consequences of changing the number of topics T, we used the Gibbs sampling algorithm outlined in the preceding section to obtain samples from the posterior distribution over z at several choices of T. We used all 28,154 abstracts published in PNAS from 1991 to 2001, with each of these abstracts constituting a single document in the corpus (we will use the words abstract and document interchangeably from this point forward).", "rank": 156, "start": 21184, "IsComparative": "1", "id": "st_156"}, {"end": 21905, "text": "Any delimiting character, including hyphens, was used to separate words, and we deleted any words that occurred in less than five abstracts or belonged to a standard stop list used in computational linguistics, including numbers, individual characters, and some function words.", "rank": 157, "start": 21628, "IsComparative": "1", "id": "st_157"}, {"end": 22004, "text": "This gave us a vocabulary of 20,551 words, which occurred a total of 3,026,970 times in the corpus.", "rank": 158, "start": 21905, "IsComparative": "1", "id": "st_158"}]}, {"paragraph_info": {"end": 22940, "start": 22004, "text": "For all runs of the algorithm, we used     0.1 and     50 T, keeping constant the sum of the Dirichlet hyperparameters, which can be interpreted as the number of virtual samples contributing to the smoothing of  .This value of   is relatively small and can be expected to result in a fine-grained decompo- sition of the corpus into topics that address specific research areas.We computed an estimate of P(w T) for T values of 50, 100, 200, 300, 400, 500, 600, and 1,000 topics.For all values of T, except the last, we ran eight Markov chains, discarding the first 1,000 iterations, and then took 10 samples from each chain at a lag of 100 iterations.In all cases, the log-likelihood values stabilized within a few hundred iterations, as in Fig.2.The simulation with 1,000 topics was more time-consuming, and thus we used only six chains, taking two samples from each chain after 700 initial iterations, again at a lag of 100 iterations.", "rank": 31, "paragraph_comparative_number": 7, "entities": [], "id": "p_31"}, "sentences": [{"end": 22217, "text": "For all runs of the algorithm, we used     0.1 and     50 T, keeping constant the sum of the Dirichlet hyperparameters, which can be interpreted as the number of virtual samples contributing to the smoothing of  .", "rank": 159, "start": 22004, "IsComparative": "1", "id": "st_159"}, {"end": 22380, "text": "This value of   is relatively small and can be expected to result in a fine-grained decompo- sition of the corpus into topics that address specific research areas.", "rank": 160, "start": 22217, "IsComparative": "1", "id": "st_160"}, {"end": 22481, "text": "We computed an estimate of P(w T) for T values of 50, 100, 200, 300, 400, 500, 600, and 1,000 topics.", "rank": 161, "start": 22380, "IsComparative": "1", "id": "st_161"}, {"end": 22654, "text": "For all values of T, except the last, we ran eight Markov chains, discarding the first 1,000 iterations, and then took 10 samples from each chain at a lag of 100 iterations.", "rank": 162, "start": 22481, "IsComparative": "1", "id": "st_162"}, {"end": 22748, "text": "In all cases, the log-likelihood values stabilized within a few hundred iterations, as in Fig.", "rank": 163, "start": 22654, "IsComparative": "1", "id": "st_163"}, {"end": 22750, "text": "2.", "rank": 164, "start": 22748, "IsComparative": "1", "id": "st_164"}, {"end": 22940, "text": "The simulation with 1,000 topics was more time-consuming, and thus we used only six chains, taking two samples from each chain after 700 initial iterations, again at a lag of 100 iterations.", "rank": 165, "start": 22750, "IsComparative": "1", "id": "st_165"}]}, {"paragraph_info": {"end": 24043, "start": 22940, "text": "Estimates of P(w T) were computed based on the full set of samples for each value of T and are shown in Fig.3.The results suggest that the data are best accounted for by a model incor- porating 300 topics.P(w T) initially increases as a function of T, reaches a peak at T   300, and then decreases thereafter.This kind of profile is often seen when varying the dimensionality of a statistical model, with the optimal model being rich enough to fit the information available in the data, yet not so complex as to begin fitting noise.As mentioned above, the value of T found through this procedure depends on the choice of   and  , and it will also be affected by specific decisions made in forming the dataset, such as the use of a stop list and the inclusion of documents from all PNAS classifications.By using just P(w T) to choose a value of T, we are assuming very weak prior constraints on the number of topics.P(w T) is just the likelihood term in the inference to P(T w), and the prior P(T) might overwhelm this likelihood if we had a particularly strong preference for a smaller number of topics.", "rank": 32, "paragraph_comparative_number": 2, "entities": [], "id": "p_32"}, "sentences": [{"end": 23048, "text": "Estimates of P(w T) were computed based on the full set of samples for each value of T and are shown in Fig.", "rank": 166, "start": 22940, "IsComparative": "0", "id": "st_166"}, {"end": 23050, "text": "3.", "rank": 167, "start": 23048, "IsComparative": "1", "id": "st_167"}, {"end": 23145, "text": "The results suggest that the data are best accounted for by a model incor- porating 300 topics.", "rank": 168, "start": 23050, "IsComparative": "0", "id": "st_168"}, {"end": 23249, "text": "P(w T) initially increases as a function of T, reaches a peak at T   300, and then decreases thereafter.", "rank": 169, "start": 23145, "IsComparative": "0", "id": "st_169"}, {"end": 23472, "text": "This kind of profile is often seen when varying the dimensionality of a statistical model, with the optimal model being rich enough to fit the information available in the data, yet not so complex as to begin fitting noise.", "rank": 170, "start": 23249, "IsComparative": "0", "id": "st_170"}, {"end": 23742, "text": "As mentioned above, the value of T found through this procedure depends on the choice of   and  , and it will also be affected by specific decisions made in forming the dataset, such as the use of a stop list and the inclusion of documents from all PNAS classifications.", "rank": 171, "start": 23472, "IsComparative": "0", "id": "st_171"}, {"end": 23855, "text": "By using just P(w T) to choose a value of T, we are assuming very weak prior constraints on the number of topics.", "rank": 172, "start": 23742, "IsComparative": "0", "id": "st_172"}, {"end": 24043, "text": "P(w T) is just the likelihood term in the inference to P(T w), and the prior P(T) might overwhelm this likelihood if we had a particularly strong preference for a smaller number of topics.", "rank": 173, "start": 23855, "IsComparative": "1", "id": "st_173"}]}, {"paragraph_info": {"end": 25051, "start": 24043, "text": "Scientific Topics and Classes.When authors submit a paper to PNAS, they choose one of three major categories, indicating whether a paper belongs to the Biological, the Physical, or the Social Sciences, and one of 33 minor categories, such as Ecology, Pharmacology, Mathematics, or Economic Sciences.(Anthro- pology and Psychology can be chosen as a minor category for papers in both Biological and Social Sciences.We treat these minor categories as distinct for the purposes of our analysis.)Having a class designation for each abstract in the corpus provides two opportunities.First, because the topics recovered by our algorithm are purely a consequence of the statistical structure of the data, we can evaluate whether the class desig- nations pick out differences between abstracts that can be expressed in terms of this statistical structure.Second, we can use the class designations to illustrate how the distribution over topics can reveal relationships between documents and between document classes.", "rank": 33, "paragraph_comparative_number": 3, "entities": [], "id": "p_33"}, "sentences": [{"end": 24073, "text": "Scientific Topics and Classes.", "rank": 174, "start": 24043, "IsComparative": "0", "id": "st_174"}, {"end": 24342, "text": "When authors submit a paper to PNAS, they choose one of three major categories, indicating whether a paper belongs to the Biological, the Physical, or the Social Sciences, and one of 33 minor categories, such as Ecology, Pharmacology, Mathematics, or Economic Sciences.", "rank": 175, "start": 24073, "IsComparative": "0", "id": "st_175"}, {"end": 24457, "text": "(Anthro- pology and Psychology can be chosen as a minor category for papers in both Biological and Social Sciences.", "rank": 176, "start": 24342, "IsComparative": "0", "id": "st_176"}, {"end": 24535, "text": "We treat these minor categories as distinct for the purposes of our analysis.)", "rank": 177, "start": 24457, "IsComparative": "1", "id": "st_177"}, {"end": 24621, "text": "Having a class designation for each abstract in the corpus provides two opportunities.", "rank": 178, "start": 24535, "IsComparative": "1", "id": "st_178"}, {"end": 24890, "text": "First, because the topics recovered by our algorithm are purely a consequence of the statistical structure of the data, we can evaluate whether the class desig- nations pick out differences between abstracts that can be expressed in terms of this statistical structure.", "rank": 179, "start": 24621, "IsComparative": "0", "id": "st_179"}, {"end": 25051, "text": "Second, we can use the class designations to illustrate how the distribution over topics can reveal relationships between documents and between document classes.", "rank": 180, "start": 24890, "IsComparative": "1", "id": "st_180"}]}, {"paragraph_info": {"end": 26233, "start": 25051, "text": "We used a single sample taken after 2,000 iterations of Gibbs sampling and computed estimates of  (d) by means of Eq.7.(In this and other analyses, similar results were obtained by exam- ining samples across multiple chains, up to the permutation of topics, and the choice of this particular sample to display the results was arbitrary.)Using these estimates, we computed a mean   vector for each minor category, considering just the 2,620 abstracts published in 2001.We then found the most diagnostic topic for each minor category, defined to be the topic j for which the ratio of  j for that category to the sum of  j across all other categories was greatest.The results of this analysis are shown in Fig.4.The matrix shown in Fig.4 Upper indicates the mean value of   for each minor category, restricted to the set of most diagnostic topics.The strong diagonal is a consequence of our selection procedure, with diagnostic topics having high proba- bility within the classes for which they are diagnostic, but low probability in other classes.The off-diagonal elements illustrate the relationships between classes, with similar classes showing similar distributions across topics.", "rank": 34, "paragraph_comparative_number": 8, "entities": [], "id": "p_34"}, "sentences": [{"end": 25168, "text": "We used a single sample taken after 2,000 iterations of Gibbs sampling and computed estimates of  (d) by means of Eq.", "rank": 181, "start": 25051, "IsComparative": "1", "id": "st_181"}, {"end": 25170, "text": "7.", "rank": 182, "start": 25168, "IsComparative": "1", "id": "st_182"}, {"end": 25388, "text": "(In this and other analyses, similar results were obtained by exam- ining samples across multiple chains, up to the permutation of topics, and the choice of this particular sample to display the results was arbitrary.)", "rank": 183, "start": 25170, "IsComparative": "1", "id": "st_183"}, {"end": 25519, "text": "Using these estimates, we computed a mean   vector for each minor category, considering just the 2,620 abstracts published in 2001.", "rank": 184, "start": 25388, "IsComparative": "1", "id": "st_184"}, {"end": 25712, "text": "We then found the most diagnostic topic for each minor category, defined to be the topic j for which the ratio of  j for that category to the sum of  j across all other categories was greatest.", "rank": 185, "start": 25519, "IsComparative": "1", "id": "st_185"}, {"end": 25758, "text": "The results of this analysis are shown in Fig.", "rank": 186, "start": 25712, "IsComparative": "0", "id": "st_186"}, {"end": 25760, "text": "4.", "rank": 187, "start": 25758, "IsComparative": "1", "id": "st_187"}, {"end": 25784, "text": "The matrix shown in Fig.", "rank": 188, "start": 25760, "IsComparative": "0", "id": "st_188"}, {"end": 25895, "text": "4 Upper indicates the mean value of   for each minor category, restricted to the set of most diagnostic topics.", "rank": 189, "start": 25784, "IsComparative": "1", "id": "st_189"}, {"end": 26096, "text": "The strong diagonal is a consequence of our selection procedure, with diagnostic topics having high proba- bility within the classes for which they are diagnostic, but low probability in other classes.", "rank": 190, "start": 25895, "IsComparative": "1", "id": "st_190"}, {"end": 26233, "text": "The off-diagonal elements illustrate the relationships between classes, with similar classes showing similar distributions across topics.", "rank": 191, "start": 26096, "IsComparative": "0", "id": "st_191"}]}, {"paragraph_info": {"end": 27114, "start": 26233, "text": "The distributions over topics for the different classes illustrate how this statistical model can capture similarity in the semantic content of documents.Fig.4 reveals relationships between specific minor categories, such as Ecology and Evolution, and some of the correspondences within major categories; for ex- ample, the minor categories in the Physical and Social Sciences show much greater commonality in the topics appearing in their abstracts than do the Biological Sciences.The results can also be used to assess how much different disciplines depend on partic- ular methods.For example, topic 39, relating to mathematical methods, receives reasonably high probability in Applied Math- ematics, Applied Physical Sciences, Chemistry, Engineering, Mathematics, Physics, and Economic Sciences, suggesting that mathematical theory is particularly relevant to these disciplines.", "rank": 35, "paragraph_comparative_number": 1, "entities": [], "id": "p_35"}, "sentences": [{"end": 26387, "text": "The distributions over topics for the different classes illustrate how this statistical model can capture similarity in the semantic content of documents.", "rank": 192, "start": 26233, "IsComparative": "0", "id": "st_192"}, {"end": 26391, "text": "Fig.", "rank": 193, "start": 26387, "IsComparative": "0", "id": "st_193"}, {"end": 26715, "text": "4 reveals relationships between specific minor categories, such as Ecology and Evolution, and some of the correspondences within major categories; for ex- ample, the minor categories in the Physical and Social Sciences show much greater commonality in the topics appearing in their abstracts than do the Biological Sciences.", "rank": 194, "start": 26391, "IsComparative": "1", "id": "st_194"}, {"end": 26816, "text": "The results can also be used to assess how much different disciplines depend on partic- ular methods.", "rank": 195, "start": 26715, "IsComparative": "0", "id": "st_195"}, {"end": 27114, "text": "For example, topic 39, relating to mathematical methods, receives reasonably high probability in Applied Math- ematics, Applied Physical Sciences, Chemistry, Engineering, Mathematics, Physics, and Economic Sciences, suggesting that mathematical theory is particularly relevant to these disciplines.", "rank": 196, "start": 26816, "IsComparative": "0", "id": "st_196"}]}, {"paragraph_info": {"end": 28678, "start": 27114, "text": "The content of the diagnostic topics themselves is shown in Fig.4 Lower, listing the five words given highest probability by each topic.In some cases, a single topic was the most diagnostic for several classes: topic 2, containing words relating to global climate change, was diagnostic of Ecology, Geology, and Geo- physics; topic 280, containing words relating to evolution and natural selection, was diagnostic of both Evolution and Popu- lation Biology; topic 222, containing words relating to cognitive neuroscience, was diagnostic of Psychology as both a Biological and a Social Science; topic 39, containing words relating to mathematical theory, was diagnostic of both Applied Mathe- matics and Mathematics; and topic 270, containing words having to do with spectroscopy, was diagnostic of both Chemistry and Physics.The remaining topics were each diagnostic of a single minor category and, in general, seemed to contain words rele- vant to enquiry in that discipline.The only exception was topic 109, diagnostic of Economic Sciences, which contains words generally relevant to scientific research.This may be a conse- quence of the relatively small number of documents in this class (only three in 2001), which makes the estimate of   extremely unreliable.Topic 109 also serves to illustrate that not all of the topics found by the algorithm correspond to areas of research; some of the topics picked out scientific words that tend to occur together for other reasons, like those that are used to describe data or those that express tentative conclusions.", "rank": 36, "paragraph_comparative_number": 5, "entities": [], "id": "p_36"}, "sentences": [{"end": 27178, "text": "The content of the diagnostic topics themselves is shown in Fig.", "rank": 197, "start": 27114, "IsComparative": "0", "id": "st_197"}, {"end": 27250, "text": "4 Lower, listing the five words given highest probability by each topic.", "rank": 198, "start": 27178, "IsComparative": "1", "id": "st_198"}, {"end": 27939, "text": "In some cases, a single topic was the most diagnostic for several classes: topic 2, containing words relating to global climate change, was diagnostic of Ecology, Geology, and Geo- physics; topic 280, containing words relating to evolution and natural selection, was diagnostic of both Evolution and Popu- lation Biology; topic 222, containing words relating to cognitive neuroscience, was diagnostic of Psychology as both a Biological and a Social Science; topic 39, containing words relating to mathematical theory, was diagnostic of both Applied Mathe- matics and Mathematics; and topic 270, containing words having to do with spectroscopy, was diagnostic of both Chemistry and Physics.", "rank": 199, "start": 27250, "IsComparative": "1", "id": "st_199"}, {"end": 28090, "text": "The remaining topics were each diagnostic of a single minor category and, in general, seemed to contain words rele- vant to enquiry in that discipline.", "rank": 200, "start": 27939, "IsComparative": "1", "id": "st_200"}, {"end": 28220, "text": "The only exception was topic 109, diagnostic of Economic Sciences, which contains words generally relevant to scientific research.", "rank": 201, "start": 28090, "IsComparative": "1", "id": "st_201"}, {"end": 28379, "text": "This may be a conse- quence of the relatively small number of documents in this class (only three in 2001), which makes the estimate of   extremely unreliable.", "rank": 202, "start": 28220, "IsComparative": "1", "id": "st_202"}, {"end": 28678, "text": "Topic 109 also serves to illustrate that not all of the topics found by the algorithm correspond to areas of research; some of the topics picked out scientific words that tend to occur together for other reasons, like those that are used to describe data or those that express tentative conclusions.", "rank": 203, "start": 28379, "IsComparative": "0", "id": "st_203"}]}, {"paragraph_info": {"end": 29360, "start": 28678, "text": "Finding strong diagnostic topics for almost all of the minor categories suggests that these categories have differences that can be expressed in terms of the statistical structure recovered by our algorithm.The topics discovered by the algorithm are found in a completely unsupervised fashion, using no informa- tion except the distribution of the words themselves, implying that the minor categories capture real differences in the content of abstracts, at the level of the words used by authors.It also shows that this algorithm finds genuinely informative structure in the data, producing topics that connect with our intuitive understanding of the semantic content of documents.", "rank": 37, "paragraph_comparative_number": 1, "entities": [], "id": "p_37"}, "sentences": [{"end": 28885, "text": "Finding strong diagnostic topics for almost all of the minor categories suggests that these categories have differences that can be expressed in terms of the statistical structure recovered by our algorithm.", "rank": 204, "start": 28678, "IsComparative": "0", "id": "st_204"}, {"end": 29175, "text": "The topics discovered by the algorithm are found in a completely unsupervised fashion, using no informa- tion except the distribution of the words themselves, implying that the minor categories capture real differences in the content of abstracts, at the level of the words used by authors.", "rank": 205, "start": 28885, "IsComparative": "0", "id": "st_205"}, {"end": 29360, "text": "It also shows that this algorithm finds genuinely informative structure in the data, producing topics that connect with our intuitive understanding of the semantic content of documents.", "rank": 206, "start": 29175, "IsComparative": "1", "id": "st_206"}]}, {"paragraph_info": {"end": 30853, "start": 29360, "text": "Hot and Cold Topics.Historians, sociologists, and philosophers of science and scientists themselves recognize that topics rise and fall in the amount of scientific interest they generate, although whether this is the result of social forces or rational scientific practice is the subject of debate (e.g., refs.16 and 17).Because our analysis reduces a corpus of scientific documents to a set of topics, it is straightforward to analyze the dynamics of these topics as a means of gaining insight into the dynamics of science.If understanding these dynamics is the goal of our analysis, we can formulate more sophisticated generative models that incor- porate parameters describing the change in the prevalence of topics over time.Here, we present a basic analysis based on a post hoc examination of the estimates of   produced by the model.Being able to identify the hot topics in science at a particular point is one of the most attractive applications of this kind of model, providing quantitative measures of the preva- lence of particular kinds of research that may be useful for historical purposes and for determination of targets for scientific funding.Analysis at the level of topics provides the opportunity to combine information about the occurrences of a set of semantically related words with cues that come from the content of the remainder of the document, potentially highlighting trends that might be less obvious in analyses that consider only the frequencies of single words.", "rank": 38, "paragraph_comparative_number": 4, "entities": [], "id": "p_38"}, "sentences": [{"end": 29380, "text": "Hot and Cold Topics.", "rank": 207, "start": 29360, "IsComparative": "0", "id": "st_207"}, {"end": 29670, "text": "Historians, sociologists, and philosophers of science and scientists themselves recognize that topics rise and fall in the amount of scientific interest they generate, although whether this is the result of social forces or rational scientific practice is the subject of debate (e.g., refs.", "rank": 208, "start": 29380, "IsComparative": "1", "id": "st_208"}, {"end": 29681, "text": "16 and 17).", "rank": 209, "start": 29670, "IsComparative": "1", "id": "st_209"}, {"end": 29884, "text": "Because our analysis reduces a corpus of scientific documents to a set of topics, it is straightforward to analyze the dynamics of these topics as a means of gaining insight into the dynamics of science.", "rank": 210, "start": 29681, "IsComparative": "1", "id": "st_210"}, {"end": 30089, "text": "If understanding these dynamics is the goal of our analysis, we can formulate more sophisticated generative models that incor- porate parameters describing the change in the prevalence of topics over time.", "rank": 211, "start": 29884, "IsComparative": "1", "id": "st_211"}, {"end": 30199, "text": "Here, we present a basic analysis based on a post hoc examination of the estimates of   produced by the model.", "rank": 212, "start": 30089, "IsComparative": "0", "id": "st_212"}, {"end": 30519, "text": "Being able to identify the hot topics in science at a particular point is one of the most attractive applications of this kind of model, providing quantitative measures of the preva- lence of particular kinds of research that may be useful for historical purposes and for determination of targets for scientific funding.", "rank": 213, "start": 30199, "IsComparative": "0", "id": "st_213"}, {"end": 30853, "text": "Analysis at the level of topics provides the opportunity to combine information about the occurrences of a set of semantically related words with cues that come from the content of the remainder of the document, potentially highlighting trends that might be less obvious in analyses that consider only the frequencies of single words.", "rank": 214, "start": 30519, "IsComparative": "0", "id": "st_214"}]}, {"paragraph_info": {"end": 31166, "start": 30853, "text": "To find topics that consistently rose or fell in popularity from 1991 to 2001, we conducted a linear trend analysis on  j by year, using the same single sample as in our previous analyses.We applied this analysis to the sample used to generate Fig.4.Consistent with the idea that science shows strong trends, with", "rank": 39, "paragraph_comparative_number": 3, "entities": [], "id": "p_39"}, "sentences": [{"end": 31041, "text": "To find topics that consistently rose or fell in popularity from 1991 to 2001, we conducted a linear trend analysis on  j by year, using the same single sample as in our previous analyses.", "rank": 215, "start": 30853, "IsComparative": "1", "id": "st_215"}, {"end": 31101, "text": "We applied this analysis to the sample used to generate Fig.", "rank": 216, "start": 31041, "IsComparative": "0", "id": "st_216"}, {"end": 31103, "text": "4.", "rank": 217, "start": 31101, "IsComparative": "1", "id": "st_217"}, {"end": 31166, "text": "Consistent with the idea that science shows strong trends, with", "rank": 218, "start": 31103, "IsComparative": "1", "id": "st_218"}]}, {"paragraph_info": {"end": 32258, "start": 31166, "text": "topics rising and falling regularly in popularity, 54 of the topics showed a statistically significant increasing linear trend, and 50 showed a statistically significant decreasing linear trend, both at the P   0.0001 level.The three hottest and coldest topics, assessed by the size of the linear trend test statistic, are shown in Fig.5.The hottest topics discovered through this analysis were topics 2, 134, and 179, corresponding to global warming and climate change, gene knockout techniques, and apoptosis (pro- grammed cell death), the subject of the 2002 Nobel Prize in Physiology.The cold topics were not topics that lacked preva- lence in the corpus but those that showed a strong decrease in popularity over time.The coldest topics were 37, 289, and 75, corresponding to sequencing and cloning, structural biology, and immunology.All these topics were very popular in about 1991 and fell in popularity over the period of analysis.The Nobel Prizes again provide a good means of validating these trends, with prizes being awarded for work on sequencing in 1993 and immunology in 1989.", "rank": 40, "paragraph_comparative_number": 5, "entities": [], "id": "p_40"}, "sentences": [{"end": 31390, "text": "topics rising and falling regularly in popularity, 54 of the topics showed a statistically significant increasing linear trend, and 50 showed a statistically significant decreasing linear trend, both at the P   0.0001 level.", "rank": 219, "start": 31166, "IsComparative": "0", "id": "st_219"}, {"end": 31502, "text": "The three hottest and coldest topics, assessed by the size of the linear trend test statistic, are shown in Fig.", "rank": 220, "start": 31390, "IsComparative": "0", "id": "st_220"}, {"end": 31504, "text": "5.", "rank": 221, "start": 31502, "IsComparative": "1", "id": "st_221"}, {"end": 31754, "text": "The hottest topics discovered through this analysis were topics 2, 134, and 179, corresponding to global warming and climate change, gene knockout techniques, and apoptosis (pro- grammed cell death), the subject of the 2002 Nobel Prize in Physiology.", "rank": 222, "start": 31504, "IsComparative": "1", "id": "st_222"}, {"end": 31889, "text": "The cold topics were not topics that lacked preva- lence in the corpus but those that showed a strong decrease in popularity over time.", "rank": 223, "start": 31754, "IsComparative": "1", "id": "st_223"}, {"end": 32006, "text": "The coldest topics were 37, 289, and 75, corresponding to sequencing and cloning, structural biology, and immunology.", "rank": 224, "start": 31889, "IsComparative": "1", "id": "st_224"}, {"end": 32106, "text": "All these topics were very popular in about 1991 and fell in popularity over the period of analysis.", "rank": 225, "start": 32006, "IsComparative": "1", "id": "st_225"}, {"end": 32258, "text": "The Nobel Prizes again provide a good means of validating these trends, with prizes being awarded for work on sequencing in 1993 and immunology in 1989.", "rank": 226, "start": 32106, "IsComparative": "0", "id": "st_226"}]}, {"paragraph_info": {"end": 32891, "start": 32258, "text": "Tagging Abstracts.Each sample produced by our algorithm con- sists of a set of assignments of words to topics.We can use these assignments to identify the role that words play in documents.In particular, we can tag each word with the topic to which it was assigned and use these assignments to highlight topics that are particularly informative about the content of a document.The abstract shown in Fig.6 is tagged with topic labels as superscripts.Words without superscripts were not included in the vocabulary supplied to the model.All assignments come from the same single sample as used in our previous analyses, illustrating the", "rank": 41, "paragraph_comparative_number": 3, "entities": [], "id": "p_41"}, "sentences": [{"end": 32276, "text": "Tagging Abstracts.", "rank": 227, "start": 32258, "IsComparative": "0", "id": "st_227"}, {"end": 32368, "text": "Each sample produced by our algorithm con- sists of a set of assignments of words to topics.", "rank": 228, "start": 32276, "IsComparative": "1", "id": "st_228"}, {"end": 32447, "text": "We can use these assignments to identify the role that words play in documents.", "rank": 229, "start": 32368, "IsComparative": "0", "id": "st_229"}, {"end": 32635, "text": "In particular, we can tag each word with the topic to which it was assigned and use these assignments to highlight topics that are particularly informative about the content of a document.", "rank": 230, "start": 32447, "IsComparative": "1", "id": "st_230"}, {"end": 32661, "text": "The abstract shown in Fig.", "rank": 231, "start": 32635, "IsComparative": "0", "id": "st_231"}, {"end": 32707, "text": "6 is tagged with topic labels as superscripts.", "rank": 232, "start": 32661, "IsComparative": "0", "id": "st_232"}, {"end": 32792, "text": "Words without superscripts were not included in the vocabulary supplied to the model.", "rank": 233, "start": 32707, "IsComparative": "0", "id": "st_233"}, {"end": 32891, "text": "All assignments come from the same single sample as used in our previous analyses, illustrating the", "rank": 234, "start": 32792, "IsComparative": "1", "id": "st_234"}]}, {"paragraph_info": {"end": 32965, "start": 32891, "text": "kind of words assigned to the evolution topic discussed above (topic 280).", "rank": 42, "paragraph_comparative_number": 0, "entities": [], "id": "p_42"}, "sentences": [{"end": 32965, "text": "kind of words assigned to the evolution topic discussed above (topic 280).", "rank": 235, "start": 32891, "IsComparative": "0", "id": "st_235"}]}, {"paragraph_info": {"end": 33954, "start": 32965, "text": "This kind of tagging is mainly useful for illustrating the content of individual topics and how individual words are assigned, and it was used for this purpose in ref.1.It is also possible to use the results of our algorithm to highlight conceptual content in other ways.For example, if we integrate across a set of samples, we can compute a probability that a particular word is assigned to the most prevalent topic in a document.This probability provides a graded measure of the importance of a word that uses informa- tion from the full set of samples, rather than a discrete measure computed from a single sample.This form of highlighting is used to set the contrast of the words shown in Fig.6 and picks out the words that determine the topical content of the document.Such methods might provide a means of increasing the efficiency of searching large document databases, in particular, because it can be modified to indicate words belonging to the topics of interest to the searcher.", "rank": 43, "paragraph_comparative_number": 5, "entities": [], "id": "p_43"}, "sentences": [{"end": 33132, "text": "This kind of tagging is mainly useful for illustrating the content of individual topics and how individual words are assigned, and it was used for this purpose in ref.", "rank": 236, "start": 32965, "IsComparative": "0", "id": "st_236"}, {"end": 33134, "text": "1.", "rank": 237, "start": 33132, "IsComparative": "1", "id": "st_237"}, {"end": 33236, "text": "It is also possible to use the results of our algorithm to highlight conceptual content in other ways.", "rank": 238, "start": 33134, "IsComparative": "1", "id": "st_238"}, {"end": 33396, "text": "For example, if we integrate across a set of samples, we can compute a probability that a particular word is assigned to the most prevalent topic in a document.", "rank": 239, "start": 33236, "IsComparative": "0", "id": "st_239"}, {"end": 33582, "text": "This probability provides a graded measure of the importance of a word that uses informa- tion from the full set of samples, rather than a discrete measure computed from a single sample.", "rank": 240, "start": 33396, "IsComparative": "1", "id": "st_240"}, {"end": 33662, "text": "This form of highlighting is used to set the contrast of the words shown in Fig.", "rank": 241, "start": 33582, "IsComparative": "0", "id": "st_241"}, {"end": 33739, "text": "6 and picks out the words that determine the topical content of the document.", "rank": 242, "start": 33662, "IsComparative": "1", "id": "st_242"}, {"end": 33954, "text": "Such methods might provide a means of increasing the efficiency of searching large document databases, in particular, because it can be modified to indicate words belonging to the topics of interest to the searcher.", "rank": 243, "start": 33739, "IsComparative": "1", "id": "st_243"}]}, {"paragraph_info": {"end": 33964, "start": 33954, "text": "Conclusion", "rank": 44, "paragraph_comparative_number": 1, "entities": [], "id": "p_44"}, "sentences": [{"end": 33964, "text": "Conclusion", "rank": 244, "start": 33954, "IsComparative": "1", "id": "st_244"}]}, {"paragraph_info": {"end": 34712, "start": 33964, "text": "We have presented a statistical inference algorithm for Latent Dirichlet Allocation (1), a generative model for documents in which each document is viewed as a mixture of topics, and have shown how this algorithm can be used to gain insight into the content of scientific documents.The topics recovered by our algorithm pick out meaningful aspects of the structure of science and reveal some of the relationships between scientific papers in different disciplines.The results of our algorithm have several interesting applications that can make it easier for people to understand the information contained in large knowledge do- mains, including exploring topic dynamics and indicating the role that words play in the semantic content of documents.", "rank": 45, "paragraph_comparative_number": 3, "entities": [], "id": "p_45"}, "sentences": [{"end": 34246, "text": "We have presented a statistical inference algorithm for Latent Dirichlet Allocation (1), a generative model for documents in which each document is viewed as a mixture of topics, and have shown how this algorithm can be used to gain insight into the content of scientific documents.", "rank": 245, "start": 33964, "IsComparative": "1", "id": "st_245"}, {"end": 34428, "text": "The topics recovered by our algorithm pick out meaningful aspects of the structure of science and reveal some of the relationships between scientific papers in different disciplines.", "rank": 246, "start": 34246, "IsComparative": "1", "id": "st_246"}, {"end": 34712, "text": "The results of our algorithm have several interesting applications that can make it easier for people to understand the information contained in large knowledge do- mains, including exploring topic dynamics and indicating the role that words play in the semantic content of documents.", "rank": 247, "start": 34428, "IsComparative": "1", "id": "st_247"}]}, {"paragraph_info": {"end": 35508, "start": 34712, "text": "The results we have presented use the simplest model of this kind and the simplest algorithm for generating samples.In future research, we intend to extend this work by exploring both more complex models and more sophisticated algorithms.Whereas in this article we have focused on the analysis of scientific docu- ments, as represented by the articles published in PNAS, the methods and applications we have presented are relevant to a variety of other knowledge domains.Latent Dirichlet Allocation is a statistical model that is appropriate for any collection of documents, from e-mail records and newsgroups to the entire World Wide Web.Discovering the topics underlying the struc- ture of such datasets is the first step to being able to visualize their content and discover meaningful trends.", "rank": 46, "paragraph_comparative_number": 4, "entities": [], "id": "p_46"}, "sentences": [{"end": 34828, "text": "The results we have presented use the simplest model of this kind and the simplest algorithm for generating samples.", "rank": 248, "start": 34712, "IsComparative": "0", "id": "st_248"}, {"end": 34950, "text": "In future research, we intend to extend this work by exploring both more complex models and more sophisticated algorithms.", "rank": 249, "start": 34828, "IsComparative": "1", "id": "st_249"}, {"end": 35183, "text": "Whereas in this article we have focused on the analysis of scientific docu- ments, as represented by the articles published in PNAS, the methods and applications we have presented are relevant to a variety of other knowledge domains.", "rank": 250, "start": 34950, "IsComparative": "1", "id": "st_250"}, {"end": 35351, "text": "Latent Dirichlet Allocation is a statistical model that is appropriate for any collection of documents, from e-mail records and newsgroups to the entire World Wide Web.", "rank": 251, "start": 35183, "IsComparative": "1", "id": "st_251"}, {"end": 35508, "text": "Discovering the topics underlying the struc- ture of such datasets is the first step to being able to visualize their content and discover meaningful trends.", "rank": 252, "start": 35351, "IsComparative": "1", "id": "st_252"}]}]}