{"paragraph_scenes_info": [{"x": 1, "text": "In bibliographies like DBLP and Citeseer, there are three kinds of entity-name problems that need to be solved.First, multiple entities share one name, which is called the name sharing problem.Second, one entity has different names, which is called the name variant problem.Third, multiple entities share multiple names, which is called the name mixing problem.We aim to solve these problems based on one model in this paper.We call this task complete entity resolution.Different from previous work, our work use global information based on data with two types of information, words and author names.We propose a generative latent topic model that involves both author names and words the LDA-dual model, by extending the LDA (Latent Dirichlet Allocation) model.We also propose a method to obtain model parameters that is global information.Based on obtained model parameters, we propose two algorithms to solve the three problems mentioned above.Experimental results demonstrate the effectiveness and great potential of the proposed model and algorithms."}, {"x": 3, "text": "Bibliography websites like DBLP <1> and Citeseer provide much convenience for scientists and researchers to search or browse the citations of papers.A citation includes authors names, paper title, venue of publication, publication year, etc.The information are very useful.But there are problems about the correctness of the information.Entities, particularly authors, are frequently inconsistent with their names.We identify three major entity-name problems  the name sharing problem, the name variant problem and the name mixing problem.These problems cause confusion for users of bibliography websites.Now we use real examples to explain these problems."}, {"x": 4, "text": "The name sharing problem A full name may be shared by multiple authors.DBLP bibliography treats these authors as one entity and lists all citations under the shared name in a single page.And users of DBLP cannot distinguish those authors with the same full name.This causes confusion and handicaps the usage of this bibliography.We call this problem the name sharing problem or multiple-entity-one-name problem."}, {"x": 5, "text": "In Figure 1 (left), all 23 citations with the full name Michael Johnson are listed in a single web page at the DBLP website.But based on our investigation, citations listed under this name are from five different entities."}, {"x": 8, "text": "The second problem is called the name variant problem or one-entity-multiple-name problem.An author may have multiple full names which are called name variants of this author.But DBLP treats these full names as from different entities and lists them in separate web pages.For example, in Figure 1 (right), Clement Yu and Clement T. Yu represent the same entity.But DBLP treats them as the names of two entities and lists the citations in separate web pages.This problem has been also referred to as the entity resolution <7> or split citation <5> problem.And it has been researched for quite a few years because of its strong connection with data cleaning and record linkage."}, {"x": 10, "text": "The two problems above may intertwine.In that case, multiple entities share multiple names.This is called the name mixing problem or multiple-name-multiple-entity problem.For example, in Figure 2, four entities share the name Guohui Li and two of them share another name Guo-Hui Li.But citations under Guohui Li and those under Guo-Hui Li appear in separate web pages in DBLP.Solving this problem requires solving name sharing problem and name variant problem simultaneously."}, {"x": 14, "text": "Clement T. Yu.Multimedia Metasearch Engines.Multimedia Information Systems 2002: 5-6"}, {"x": 17, "text": "Inspired by the LDA model <8>, we try to catch global information by topic.we propose the LDA-dual model in which we extend the notion topic in LDA.While it is only a Dirichlet distribution over words in the LDA, a topic is represented by two Dirichlet distributions in the LDA-dual, one over words and the other over author names.Then a topic is characterized by a series of words and a series of author names.For example, topic physics might be characterized by relativity and Einstein, and other words and names."}, {"x": 18, "text": "Topics come from the whole corpus, so we call them global information.Author names, the paper title, etc for a citation are called local information.The two citations above have little local information in common, but they probably have much global information in common that helps estimate similarity of two citations."}, {"x": 23, "text": "We propose a generative model, LDA-dual.Different from previous models, the model involves two types of data  words and author names."}, {"x": 24, "text": "We propose an approach to obtain the model parameters for a corpus.And we deduce a series of conditional probabilities in support of Gibbs sampling.Different from previous work, hyperparameter vectors ,  and  are also included in the sampling process by means of Metropolis-Hasting within Gibbs."}, {"x": 26, "text": "The rest of the paper is organized as follows.In Section II we propose the LDA-dual model.Section III presents how to learn model parameters by Gibbs sampling.Section IV discusses LDA-duals application in entity, including two algorithms for the name sharing and name variant problems.Section V reports experimental results.Section VI is related work.Section VII is conclusion.Appendix is proofs of propositions."}, {"x": 27, "text": "II.THE LDA-DUAL MODEL"}, {"x": 28, "text": "To obtain global information of a corpus, we propose a generative latent topic model that we called the LDA-dual model as shown in Figure 3.The explanations to the symbols are included in Table I. This is a kind of graphical model <9>.There is a conditional dependence assumption for this kind of model, i.e., each node in Figure 3 is conditionally independent of its non-descendants, given its immediate parents <10>.The assumption is the basis for most derived conditional probabilities in Sections II and III in this paper.The LDA-dual model is extended from the Latent Dirichlet Allocation (LDA) model <8>.The LDA model has two basic assumptions.First, every document is a mixture of topics.Second, every topic is a Dirichlet distribution over words in the vocabulary.The LDA model has been widely applied to analyzing documents that include one type of information like words.But It has not been applied to documents that contain two or more types of information, such as a bibliography that includes both words and author names, a demographic document that includes words, person names and place names, etc.To apply to documents containing author names as well as words, we extend LDA in our model by adding the third assumption  every topic is a Dirichlet distribution over all author names."}, {"x": 29, "text": "In our model, words and author names are generated in a parallel manner for a document.Specifically, given the number of words and the number of author names, this model generates every word by first choosing a topic and then choosing a word according to the topics Dirichlet distribution over words.And it generates every author name by first choosing a topic and then choosing an author name according to the topics Dirichlet distribution over author names.The latent variable topic is slightly different from that in LDA.To understand that easily, we can think of a topic as a research group, a group of people who share research interests and coauthor papers, because a research group includes information for both words and author names."}, {"x": 30, "text": "In Section III, we learn this model by Gibbs sampling.In Section IV, we present an application of this model to complete entity resolution.After all, this model can also be applied to other domains in which documents include two types of information."}, {"x": 32, "text": "We first define documents that include two types of information.It is called words and author names in this paper, but it can have other names for different domains.Definition 1: A document is a collection of N words and M author names, denoted as d = <w1, ..., wN, a1, ..., aM>, where wn is the nth word and am the mth author name.And we denote the collection of words as d(w) = <w1, ..., wN> and the collection of author names as d(a) = <a1, ..., aM>."}, {"x": 35, "text": "Two probability distributions are involved in this model  the Dirichlet distribution and the multinomial distribution.(a).Dirichlet distribution In the LDA model <8> and the LDA-dual model, we obtain a mixture of topics, denoted by , by drawing a sample from a Dirichlet distribution p(|) = ("}, {"x": 36, "text": "Similarly,  is drawn from a Dirichlet distribution with hyperparameter .is drawn from a Dirichlet distribution with hyperparameter ."}, {"x": 37, "text": "(b).Multinomial distribution"}, {"x": 38, "text": "In the LDA model <8><12>, given a mixture of topics , one topic is drawn from a probability distribution.This distribution is a special case of the multinomial distribution of n independent trials, with n = 1.A word is drawn from the multinomial distribution with the parameter .In addition, in the LDA-dual model, an author name is drawn from the multinomial distribution with the parameter ."}, {"x": 39, "text": "The Dirichlet distribution is conjugate prior of the multinomial distribution.This relationship helps integrate some intermediate latent variables like ,  and  in parameter estimation in Section III."}, {"x": 40, "text": "Based on the Dirichlet distribution and multinomial distribution, this model involves several generative steps which are represented by nodes and arrows between nodes as shown in Figure 3.Steps 1 and 4 below appeared in <8>, and Steps 2 and 6 appeared in <12>.Steps 3, 5 and 7 are introduced in this model."}, {"x": 41, "text": "For a document, choose a mixture of topics  from a Dirichlet distribution with hyperparameter vector .For a corpus of D documents, there are D such s and they construct a D  T matrix, denoted by .Each row of  is a  corresponding to a document.d denotes the dth row that corresponds to the dth document."}, {"x": 42, "text": "For a topic, choose  from a Dirichlet distribution over words with hyperparameter vector .Since we have T topics altogether, there are T such s and they construct a T W matrix, denoted by .Each row of  is a  corresponding to a topic.t denotes the tth row that corresponds to the tth topic."}, {"x": 43, "text": "For a topic, choose  from a Dirichlet distribution over author names with hyperparameter vector .There are T such s and they construct a T  A matrix, denoted by .Each row of  is a  corresponding to a topic.t denotes the tth row that corresponds to the tth topic."}, {"x": 51, "text": "Here is an example for explanation.This is a case of the name mixing problem.Two entities share two names  George Bush and George W. Bush."}, {"x": 52, "text": "Example 1: A tiny corpus includes only two documents.Document #1 includes three citations under George Bush: 1.1 George Bush, and D. Cheney: The Iraq war.1.2 George Bush, and C. Powell: The Gulf war.1.3 George Bush: The Gulf report.Document #2 includes one citation under George W. Bush: 2.1 George W. Bush, and D. Cheney: The Iraq report.The word The is treated as a stop word and eliminated.The number of words in the corpus N = 8.The number of author names in the corpus M = 7.The counts are based on the number of occurrences."}, {"x": 53, "text": "The vocabulary W = <Gulf, Iraq, report, war> with size W = 4.The author name list A = <George Bush, George W. Bush, D. Cheney, C. Powell> with size A = 4.Let the set of topics T = <1, 2>, where we use its order number to represent a topic.T = 2 is the size of T ."}, {"x": 56, "text": "The integrals in Formula (1) are intractable <13> <8>, due to the coupling of z(w) and , and that of z(a) and .So It is quite difficult to estimate parameters ,  and  by EM algorithms.Fortunately, some approximate inference algorithms could be used in this case, such as variational approximation <8><14>, expectation propagation <15> and Monte Carlo simulation <13><16><17><18><19><20>."}, {"x": 57, "text": "III.GIBBS SAMPLING"}, {"x": 58, "text": "In this paper, we use Gibbs sampling <13><18><21><20>, a Monte Carlo simulation algorithm, to estimate parameters of the LDA-dual model.Gibbs sampling simulates a multivariate probabilistic distribution by only considering univariate conditional distributions.The key idea is to sample one random variable when other random variables are assigned fixed values.And each random variable is sampled in this way alternately.Such univariate conditional distributions are far easier and faster to simulate than overall distribution.We extended the work in <7><12>.<7><12> used Gibbs Sampling for the LDA model.In their work, Dirichlet priors like  are single values, instead of vectors.Also, Dirichlet priors are fixed and excluded from sampling process.Furthermore, their sampling process involves only one kind of information  words <12> or author names <7>."}, {"x": 59, "text": "Instead, in our sampling process, two types of data, both words and author names, are considered in our algorithm.And Dirichlet priors ,  and  are vectors and they are included in the sampling process as well as samples of topic.The method of Metropolis-Hasting within Gibbs <17> is employed to sample Dirichlet prior vectors."}, {"x": 61, "text": "In order to estimate model parameters, we simulate the posterior distribution of model parameters given a corpus.We do not need to include all model parameters in the distribution, some parameters can be eliminated.Specifically,  can be integrated out, because the Dirichlet distribution of  is conjugate prior of the multinomial distribution of Z.For the similar reason,  and  can be integrated out.Then we just need the posterior distribution of , ,  and topic assignment Z, given a corpus D.That is the critical part for Gibbs sampling."}, {"x": 62, "text": "According to generative processes of the LDAdual model in Figure 3, considering the conditional independence assumption, we have the joint probability for a document: p(z, d, , , ) = p() p() p() p(z|) p(d(w)|z(w), ) p(d(a) |z(a), ).In a similar way, we get the joint probability for a corpus: p(Z,D, , , ) = p()p()p()p(Z|)p(D(w)|Z(w), )p(D(a)|Z(a), ).And then we obtain the posterior distribution for Gibbs Sampling, the joint probability of Z, ,  and  given a corpus: p(Z, , , |D) = p() p() p() p(Z|) p(D(w)|Z(w), ) p(D(a)|Z(a), )/ p(D)."}, {"x": 63, "text": "Here p(D) can be considered as a normalizing constant.In the following propositions, we determine p(Z|), p(D(w)|Z(w), ) and p(D(a)|Z(a), )."}, {"x": 65, "text": "Proposition 1: Suppose D is a corpus of D documents, Z is a total topic assignment of D, and  is a Dirichlet prior vector in the LDA-dual model.Then the probability of Z given  is"}, {"x": 66, "text": "where t is the tth component of vector , T is the number of topics, Nd is the number of words in document d, Md is the number of author names in document d, ndt is the number of times topic t is assigned to words in document d according to topic assignment Z, and mdt is the number of times topic t is assigned to author names in document d according to Z. Proposition 2: Suppose D is a corpus, D(w) is the collection of words in D, Z(w) is a partial topic assignment of D for words, and  is a Dirichlet prior vector in the LDA-dual model.Then the probability of D(w), the words part of D, given Z(w) and , is"}, {"x": 67, "text": "where w is the wth component of vector , T is the number of topics,W is the size of the vocabularyW, ntw is the number of times topic t is assigned to word w in the vocabulary according to the topic assignment Z(w), and nt is the number of times topic t is assigned to words according to Z(w)."}, {"x": 68, "text": "Proposition 3: Suppose D is a corpus, D(a) is the collection of author names in D, Z(a) is a partial topic assignment of D for author names, and  is a Dirichlet prior vector in the LDAdual model.Then the probability of D(a), the author names part of D, given Z(a) and , is"}, {"x": 69, "text": "where a is the ath component of vector , T is the number of topics, A is the size of the author name list A, mta is the number of times topic t is assigned to author name a in the author name list, according to the topic assignment Z(a), and mt is the number of times topic t is assigned to author names according to Z(a)."}, {"x": 70, "text": "The proof of Proposition 1 is in Appendix.We do not include proofs of Propositions 2 and 3 due to space limit.In Formulas (4), (5) and (6), D, T , W, A, Nd and Md are constants.ndt and mdt are counts in Z. ntw and nt are counts in Z(w).mta and mt are counts in Z(a)."}, {"x": 71, "text": "After putting Formulas (4), (5) and (6) into Formula (3), Formula (3) can be used to derive univariate conditional distributions that can be directly used in Gibbs sampling."}, {"x": 72, "text": "B. Univariate conditional distributions"}, {"x": 76, "text": "2) Conditional distribution of a component of Dirichlet prior vectors: We also include Dirichlet prior vectors ,  and  into our sampling process.Each time we sample one component of a Dirichlet prior vector, assuming other components and parameters are fixed."}, {"x": 80, "text": "From the formula above, we have interesting observations about the Dirichlet prior vector .Note that each component of , w, corresponds to a word w in the vocabulary W.We found that a word w appears more frequently and more evenly over topics, it has larger chance to be associated with a higher w.For example, in DBLP, the word algorithm has higher w than the word clustering."}, {"x": 82, "text": "The formula above indicates that if an author name a appears more frequently and more evenly over topics, it has larger change to be associated with a higher a.In DBLP, if an author name has more publications and the publications cover more topics, it has a higher a."}, {"x": 84, "text": "The conditional distributions in Formulas (9), (10) and (11) are continuous probability density functions.Therefore, we employ the method of Metropolis-Hastings within Gibbs <17>, <19>.We use log-normal distribution as the proposal density the Metropolis-Hastings algorithm, where P(x) is the right part of any one of Formula (9), (10) and (11).If a > 1, the tentative new value is accepted; otherwise, it is accepted by probability a.The proposal densitys parameter  is tuned to guarantee that the acceptance rate is around 0.5.This value is recommended for the random walk chain <17>."}, {"x": 86, "text": "After Gibbs sampling is finished, we get the model parameters: , ,  and Z.And we can estimate , , and p(t)."}, {"x": 90, "text": "In the example in Section II-C, after learning the model by Gibbs sampling, model parameters could be as follows.Dirichlet prior vectors:"}, {"x": 91, "text": "Topic assignment for Document #1: 1.1 George Bush(2), D. Cheney(1): Iraq(1) war(2).1.2 George Bush(2), C. Powell(2): Gulf(2) war(1).1.3 George Bush(1): Gulf(2) report(2).Topic assignment for Document #2: 2.1 George W. Bush(1), D. Cheney(1): Iraq(1) report(1).Here superscripts (1) and (2) denote samples of topic for words and author names.For example, George Bush(2) means topic 2 is assigned to the author name George Bush.Based on the parameters given above, by Formula (12), we obtain the matrix , the topics distributions over words in W (i is for topic i):"}, {"x": 92, "text": "By Formula (13), we obtain the matrix , the topics distributions over author names in A (i is for topic i): George Bush George W. Bush D. Cheney C. Powell"}, {"x": 95, "text": "If a test document is not in the corpus D, it is possible that it contains new words that are not in the vocabulary W. How to deal with the new words is an issue.When we try to represent a new document by a mixture of topics, using Formula (15), we need the value of tw for each word.But for a new word, we cannot compute tw by Formula (12) because of no corresponding w.Therefore, we use the following method for computing tw for new words in a test document.For each new word in test document d, we append it to the vocabulary W, and extend current W-dimensional  to a (W +1)-dimensional vector by adding a component with the value min<1, ..., W>, and then W is incremented by 1.We repeat this process until all new words have been added to W.For each new word, we let its ntw be 0."}, {"x": 99, "text": "1) A document as a mixture of topics: Based on the derived model parameters, we can estimate a test documents mixture of topics.We define the test document ds weight for a topic where N d and M d are the numbers of words and author names in d, respectively; wi and aj as subscripts are the order numbers of ds ith word and jth author name in W and A, respectively.Other notations have been defined in Formulas (12), (13) or (14)."}, {"x": 103, "text": "IV.COMPLETE ENTITY RESOLUTION"}, {"x": 105, "text": "Complete entity resolution consists of four steps: (1) obtain topic information for each document or citation in the corpus through Gibbs sampling; (2) build a classifier based on pairwise feature of two citations; (3) solve the name sharing problem by spectral clustering after constructing graphs for each ambiguous name, with the classifiers support; (4) solve the name variant and name mixing problems with help of the classifier.The first step has been presented in Sections III and III-G.We now introduce the other three steps."}, {"x": 106, "text": "Based on model parameters, the topic similarity of two citations can be computed by Formula (17).Based on topic similarity and some other features, we build a classifier.Its features are a series of similarities or distances between two citations.Its class label has two values  merge when it decides that the two citations are from the same entity, and not merge otherwise."}, {"x": 114, "text": "Consider two different author names a1 and a2: (1) If a1 and a2 have the same first name and last name and one of them has no middle name, we define (a1, a2) = 0.5, e.g., Clement Yu and Clement T. Yu.(2) If a1 and a2 have the same first name and last name and one middle name is another middle names initial, we define (a1, a2) = 0.5, e.g., Chee W. Chin and Chee Wee Chin.(3) If a1 and a2 have the same last name and one first name is the other first names initial, we define (a1, a2) = 0.5, e.g., Yang Zhang and Y. Zhang.(4) If a1 and a2 have the same last name and the difference of two first names is only letter cases or -, we define (a1, a2) = 0.5, e.g., Guohui Li and Guo-Hui Li."}, {"x": 122, "text": "To solve the name sharing problem based on the classifier, we first construct a graph for each ambiguous name shared by K entities, and then employ K-way spectral clustering <23><24><25> to retrieve entities from this graph, as in Algorithm 1.K, the number of entities under an author name, is prior knowledge."}, {"x": 123, "text": "1) Constructing graphs: For a given ambiguous name, we first obtain a collection of all citations of the ambiguous name, and then construct a graph.Each node of the graph corresponds to a citation in the collection.The edges are determined by the classifier.If the classifier decides to merge the two citations, we draw an edge connecting two nodes corresponding to the two citations.Otherwise, no edge is drawn between them.Each edge has an equivalent weight that is 1."}, {"x": 125, "text": "According to Ky Fans theorem <27>, we can retrieve clusters from the subspace of k eigenvectors corresponding to the k smallest eigenvalues of the Laplacian matrix L of the graph, using another algorithm like k-means <25>.Assume we have obtained k eigenvectors of L: u1, ..., uk.Let U = <u1, ..., uk>.Each row of matrix U corresponds to a node in the graph.We cluster rows of U by k-means and then we obtain the clusters of nodes."}, {"x": 127, "text": "After the name sharing problem is solved, we solve the name variant problem by Algorithm 2."}, {"x": 131, "text": "We choose the DBLP bibliography <1> as the test bed for our experimentation.Within the DBLP website, we can obtain a web page for an author name as shown in Figure 1.The web page lists all citations for which the author name appears as one of the coauthor.Each citation includes coauthors names and links to their web pages, paper titles, venues of publication, publication years, etc."}, {"x": 132, "text": "A perfect corpus for experiments is the whole DBLP bibliography.For this case, Gibbs sampling process needs prohibitory hardware support like a main frame, or even a supercomputer that work in <12> was done on.Due to hardware limits, in our experiments, we select a medium-size corpus that is a subset of the whole bibliography."}, {"x": 133, "text": "To collect data for the corpus, we start from several author names DBLP web pages and crawl for a few levels following the links on the web pages.Please note that there is no special criterion for the selection of the initial author names.The corpus includes 82721 words and 28678 author names, and the size of the vocabulary is 7736 and the size of author name list (the number of distinct author names) is 7470.Our objective is complete entity resolution in the corpus, assuming a list of ambiguous author names is given and the number of entities behind each ambiguous author name is known."}, {"x": 134, "text": "B. Gibbs sampling process"}, {"x": 137, "text": "One iteration of the Gibbs sampling process includes sampling for every word and author name in corpus D according to Formulas (7) and (8) and sampling for every component of vectors ,  and ."}, {"x": 143, "text": "F-measure is defined as the harmonic mean of precision and recall.This measure is directly applied to the classifier in Section IV-A and Algorithm 1.For Algorithm 2, we can redefine Sa and Sr by replacing citations with author names, and precision and recall can be calculated similarly."}, {"x": 145, "text": "The classifier is used to determine if two citations are from the same entity.Its performance is critical because it is the basis of Algorithms 1 and 2.We compare two classifiers  the decision tree algorithm C4.5 and support vector machines (SVMs) in the Weka machine learning package <28>."}, {"x": 150, "text": "We test classifiers by 10-fold cross validation and get average precision, recall and F-measure.The comparison results are in Figure 5.The classifiers have the better performance on topic models than no topic model.And among the topic models, the LDA-dual model is better than the LDA model.From this comparison, we can also see C4.5 and SVMs have almost the same performance."}, {"x": 152, "text": "For an author name that is shared by multiple entities, we treat each citation under this name as a document.Based on the classifier, we construct a graph and do spectral clustering with three methods for spectral relaxations  ratio cut, normalized cut, and min-max cut.The ratio cut makes the number of vertices balanced in clusters, while the normalized cut makes the number of edges balanced.The min-max cut has no preference for balance.We compared three cuts on our data when we run Algorithm 1 and found that ratio cut has the best performance, as shown in Figure 6 (left)."}, {"x": 156, "text": "We solve the name variant problem by Algorithm 2.There are two thresholds to be determined in advance: dthresh and mthresh.dthresh is the admission threshold of name distance.If the name distance of two author names is greater than this value, they are considered from different entities and are dismissed.This threshold determines efficiency of the algorithm.If dthresh is too large, the algorithm will be time consuming.In our experiment, we let dthresh be between 1 and 3.The other threshold mthresh is a threshold for name merging, and 0  mthresh  1.For a pair of author names, if their merging rate of citation pair surpasses mthresh, they are considered from the same entity.Figure 6 (right) gives the relationship of mthresh and precision, recall and F-measure of this algorithm.As mthresh increases, precision increases and recall decreases.When 0.1  mthresh  0.35, the algorithm has the highest F-measure.Our algorithm has a high precision 0.99 and recall 0.917.This is because the classifier that has been learned earlier has high performance, after including topic information of the corpus.Previous work in <7> achieved precision 0.997 and recall 0.988 on the Citeseer data set.The performance difference could result from different data sets used.Another potential reason is that <7> considered only the name variant problem, while we consider the name sharing problem and the name mixing problem as well as the name variant problem.That makes our tasks and criteria a little different."}, {"x": 160, "text": "Probabilistic models of latent variables have been proposed and applied in information retrieval for years.<29> introduced probabilistic Latent Semantic Indexing (pLSI), an approach for automated document indexing based on a statistical latent class model.<8> pointed out a limitation of the pLSI model  providing no probabilistic model at the level of document, and then proposed Latent Dirichlet Allocation (LDA), a generative probabilistic model, with the latent variable topic introduced."}, {"x": 161, "text": "Based on the LDA model, <12> employed Gibbs Sampling, a Monte Carlo method <16><19><20><18>, to discover topics in a corpus.And the number of topics is estimated by maximizing log likelihood.<30><31> extended LDA by introducing author into the model.In the model documents are generated by topicword and author-topic distributions that are learned from data.But it is not clear that the model can be used in name disambiguation.<7> extended and applied LDA to entity resolution."}, {"x": 168, "text": "We then proposed an improved process to learn the model from a corpus by Gibbs sampling, including Dirichlet priors in the sampling.The model is then applied to help solve two subproblems of complete entity resolution."}], "chapters": [{"text": "Abstract", "sentence_id": "s_0", "sentence_rank": "0", "paragraph_id": "p_0", "paragraph_rank": 0}, {"text": "I. INTRODUCTION", "sentence_id": "s_12", "sentence_rank": "12", "paragraph_id": "p_2", "paragraph_rank": 2}, {"text": "II.", "sentence_id": "s_102", "sentence_rank": "102", "paragraph_id": "p_27", "paragraph_rank": 27}, {"text": "A.", "sentence_id": "s_123", "sentence_rank": "123", "paragraph_id": "p_31", "paragraph_rank": 31}, {"text": "B.", "sentence_id": "s_142", "sentence_rank": "142", "paragraph_id": "p_34", "paragraph_rank": 34}, {"text": "C.", "sentence_id": "s_183", "sentence_rank": "183", "paragraph_id": "p_50", "paragraph_rank": 50}, {"text": "D.", "sentence_id": "s_201", "sentence_rank": "201", "paragraph_id": "p_54", "paragraph_rank": 54}, {"text": "III.", "sentence_id": "s_208", "sentence_rank": "208", "paragraph_id": "p_57", "paragraph_rank": 57}, {"text": "A.", "sentence_id": "s_223", "sentence_rank": "223", "paragraph_id": "p_60", "paragraph_rank": 60}, {"text": "B. Univariate conditional distributions", "sentence_id": "s_252", "sentence_rank": "252", "paragraph_id": "p_72", "paragraph_rank": 72}, {"text": "C.", "sentence_id": "s_273", "sentence_rank": "273", "paragraph_id": "p_83", "paragraph_rank": 83}, {"text": "D.", "sentence_id": "s_281", "sentence_rank": "281", "paragraph_id": "p_85", "paragraph_rank": 85}, {"text": "E.", "sentence_id": "s_289", "sentence_rank": "289", "paragraph_id": "p_89", "paragraph_rank": 89}, {"text": "F. Smoothing for new words or author names", "sentence_id": "s_302", "sentence_rank": "302", "paragraph_id": "p_94", "paragraph_rank": 94}, {"text": "G.", "sentence_id": "s_317", "sentence_rank": "317", "paragraph_id": "p_98", "paragraph_rank": 98}, {"text": "IV.", "sentence_id": "s_329", "sentence_rank": "329", "paragraph_id": "p_103", "paragraph_rank": 103}, {"text": "A. Building the classifier", "sentence_id": "s_352", "sentence_rank": "352", "paragraph_id": "p_110", "paragraph_rank": 110}, {"text": "B. Solving the name sharing problem", "sentence_id": "s_389", "sentence_rank": "389", "paragraph_id": "p_121", "paragraph_rank": 121}, {"text": "C. Solving the name variant problem", "sentence_id": "s_411", "sentence_rank": "411", "paragraph_id": "p_126", "paragraph_rank": 126}, {"text": "A. Data sets", "sentence_id": "s_422", "sentence_rank": "422", "paragraph_id": "p_130", "paragraph_rank": 130}, {"text": "B. Gibbs sampling process", "sentence_id": "s_433", "sentence_rank": "433", "paragraph_id": "p_134", "paragraph_rank": 134}, {"text": "C. Precision and recall", "sentence_id": "s_449", "sentence_rank": "449", "paragraph_id": "p_141", "paragraph_rank": 141}, {"text": "D. Training the classifier", "sentence_id": "s_456", "sentence_rank": "456", "paragraph_id": "p_144", "paragraph_rank": 144}, {"text": "E. Solving the name sharing problem", "sentence_id": "s_480", "sentence_rank": "480", "paragraph_id": "p_151", "paragraph_rank": 151}, {"text": "F. Solving the name variant problem", "sentence_id": "s_491", "sentence_rank": "491", "paragraph_id": "p_155", "paragraph_rank": 155}, {"text": "VI.", "sentence_id": "s_510", "sentence_rank": "510", "paragraph_id": "p_157", "paragraph_rank": 157}, {"text": "Probabilistic models", "sentence_id": "s_513", "sentence_rank": "513", "paragraph_id": "p_159", "paragraph_rank": 159}, {"text": "Entity resolution", "sentence_id": "s_526", "sentence_rank": "526", "paragraph_id": "p_163", "paragraph_rank": 163}, {"text": "VII.", "sentence_id": "s_534", "sentence_rank": "534", "paragraph_id": "p_165", "paragraph_rank": 165}], "scenes": [["CiteSeer", "Latent_Dirichlet_allocation", "DBLP"], ["CiteSeer", "DBLP"], ["DBLP"], ["Johnson_County,_Kansas", "DBLP"], ["DBLP"], ["Hui_Li", "DBLP"], ["Metasearch_engine", "Multimedia"], ["Dirichlet_distribution", "Albert_Einstein", "Latent_Dirichlet_allocation"], ["Author"], ["Latent_Dirichlet_allocation"], ["Gibbs_sampling"], ["Latent_Dirichlet_allocation", "Gibbs_sampling"], ["Dual_polyhedron", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Gibbs_sampling"], ["AM_broadcasting"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Multinomial_distribution"], ["Latent_Dirichlet_allocation"], ["Dirichlet_distribution"], ["Dirichlet_distribution"], ["Dirichlet_distribution"], ["North_Carolina_Agricultural_and_Technical_State_University", "Dirichlet_distribution"], ["North_Carolina_Agricultural_and_Technical_State_University", "Dirichlet_distribution"], ["George_W._Bush"], ["Gulf_War", "Iraq_War", "Colin_Powell", "George_W._Bush", "Report_to_Congress_on_the_Situation_in_Iraq", "Dick_Cheney"], ["Iraq_War", "Colin_Powell", "George_W._Bush", "Gulf_War", "Dick_Cheney"], ["Formula_One", "Monte_Carlo_method"], ["Gibbs_sampling"], ["Dirichlet_distribution", "Gibbs_sampling", "Latent_Dirichlet_allocation", "Monte_Carlo_method"], ["Dirichlet_distribution", "Gibbs_sampling"], ["Dirichlet_distribution", "Gibbs_sampling"], ["Digital-to-analog_converter", "Gibbs_sampling"], ["Digital-to-analog_converter"], ["Dirichlet_distribution", "Latent_Dirichlet_allocation"], ["Dirichlet_distribution", "Proposition", "North_Dakota"], ["Proposition"], ["Dirichlet_distribution"], ["List_A_cricket"], ["Proposition", "North_Dakota", "Trans_World_Airlines"], ["Gibbs_sampling"], ["Univariate"], ["Dirichlet_distribution"], ["Dirichlet_distribution", "DBLP"], ["DBLP"], ["Gibbs_sampling", "Metropolis\u2013Hastings_algorithm"], ["Gibbs_sampling"], ["Dirichlet_distribution", "Gibbs_sampling"], ["Gulf_War", "Iraq_War", "Colin_Powell", "Holotype", "George_W._Bush", "Dick_Cheney"], ["George_W._Bush", "Artificial_intelligence", "Dick_Cheney"], ["Sine_qua_non"], ["Physician", "Holotype"], ["Entity\u2013relationship_model"], ["Holotype", "Gibbs_sampling"], ["Holotype"], ["China", "Hui_Li"], ["Algorithm"], ["Construction"], ["Laplacian_matrix"], ["Algorithm"], ["DBLP"], ["DBLP", "Gibbs_sampling"], ["DBLP"], ["Gibbs_sampling"], ["Gibbs_sampling"], ["Algorithm"], ["Weka_(machine_learning)", "Support_vector_machine"], ["F1_score", "Support_vector_machine"], ["Algorithm"], ["F1_score", "FOR-A", "Algorithm"], ["Probabilistic_latent_semantic_analysis", "Latent_Dirichlet_allocation"], ["Gibbs_sampling", "Monte_Carlo_method"], ["Dirichlet_distribution", "Gibbs_sampling"]], "characters": [{"name": "Author", "offsets": [5935], "paragraph_occurrences": [18], "sentence_occurrences": [72], "affiliation": "light", "frequency": 1, "id": "Author"}, {"name": "Multimedia", "offsets": [4618, 4648], "paragraph_occurrences": [14, 14], "sentence_occurrences": [55, 56], "affiliation": "light", "frequency": 2, "id": "Multimedia"}, {"name": "George W. Bush", "offsets": [14768, 14895, 14912, 14957, 15002, 14784, 15071, 15091, 15423, 15439, 24907, 24956, 25222, 25005, 25282, 25539, 25077, 25551], "paragraph_occurrences": [51, 52, 52, 52, 52, 51, 52, 52, 53, 53, 91, 91, 91, 91, 91, 92, 91, 92], "sentence_occurrences": [187, 189, 189, 190, 191, 187, 192, 192, 198, 198, 293, 294, 298, 295, 298, 300, 296, 300], "affiliation": "light", "frequency": 18, "id": "George_W._Bush"}, {"name": "Albert Einstein", "offsets": [5829], "paragraph_occurrences": [17], "sentence_occurrences": [71], "affiliation": "light", "frequency": 1, "id": "Albert_Einstein"}, {"name": "FOR-A", "offsets": [43670], "paragraph_occurrences": [156], "sentence_occurrences": [499], "affiliation": "light", "frequency": 1, "id": "FOR-A"}, {"name": "Formula One", "offsets": [15857], "paragraph_occurrences": [56], "sentence_occurrences": [205], "affiliation": "light", "frequency": 1, "id": "Formula_One"}, {"name": "Gulf War", "offsets": [14985, 15019, 15349, 24986, 25021], "paragraph_occurrences": [52, 52, 53, 91, 91], "sentence_occurrences": [190, 191, 197, 294, 295], "affiliation": "light", "frequency": 5, "id": "Gulf_War"}, {"name": "Weka", "offsets": [39923], "paragraph_occurrences": [145], "sentence_occurrences": [459], "affiliation": "light", "frequency": 1, "id": "Weka_(machine_learning)"}, {"name": "Dirichlet distribution", "offsets": [5517, 8899, 9432, 5593, 9743, 9895, 11338, 11398, 11537, 11596, 11656, 12125, 12333, 12677, 12956, 13245, 17714, 16864, 16931, 17217, 17401, 18971, 19545, 20104, 21766, 21807, 21904, 22826, 24845, 46969], "paragraph_occurrences": [17, 28, 28, 17, 29, 29, 35, 35, 35, 36, 36, 39, 40, 41, 42, 43, 61, 58, 58, 59, 59, 65, 66, 68, 76, 76, 76, 80, 90, 168], "sentence_occurrences": [69, 111, 114, 69, 116, 117, 144, 145, 146, 147, 148, 155, 157, 160, 164, 168, 227, 217, 218, 221, 222, 238, 240, 243, 257, 257, 258, 266, 291, 539], "affiliation": "light", "frequency": 30, "id": "Dirichlet_distribution"}, {"name": "Johnson County", "offsets": [2209], "paragraph_occurrences": [5], "sentence_occurrences": [26], "affiliation": "light", "frequency": 1, "id": "Johnson_County,_Kansas"}, {"name": "Sine qua non", "offsets": [25992], "paragraph_occurrences": [95], "sentence_occurrences": [304], "affiliation": "light", "frequency": 1, "id": "Sine_qua_non"}, {"name": "Construction", "offsets": [34098], "paragraph_occurrences": [123], "sentence_occurrences": [392], "affiliation": "light", "frequency": 1, "id": "Construction"}, {"name": "China", "offsets": [31106, 31124], "paragraph_occurrences": [114, 114], "sentence_occurrences": [363, 363], "affiliation": "light", "frequency": 2, "id": "China"}, {"name": "Probabilistic latent semantic analysis", "offsets": [44853, 44893, 45022], "paragraph_occurrences": [160, 160, 160], "sentence_occurrences": [515, 515, 516], "affiliation": "light", "frequency": 3, "id": "Probabilistic_latent_semantic_analysis"}, {"name": "Support vector machine", "offsets": [39910, 41850], "paragraph_occurrences": [145, 150], "sentence_occurrences": [459, 479], "affiliation": "light", "frequency": 2, "id": "Support_vector_machine"}, {"name": "Monte Carlo method", "offsets": [16179, 16302, 45278], "paragraph_occurrences": [56, 58, 161], "sentence_occurrences": [207, 210, 517], "affiliation": "light", "frequency": 3, "id": "Monte_Carlo_method"}, {"name": "Report to Congress on the Situation in Iraq", "offsets": [15126], "paragraph_occurrences": [52], "sentence_occurrences": [192], "affiliation": "light", "frequency": 1, "id": "Report_to_Congress_on_the_Situation_in_Iraq"}, {"name": "Physician", "offsets": [27079], "paragraph_occurrences": [99], "sentence_occurrences": [320], "affiliation": "light", "frequency": 1, "id": "Physician"}, {"name": "Algorithm", "offsets": [34016, 35390, 39492, 39508, 42411, 43153], "paragraph_occurrences": [122, 127, 143, 143, 152, 156], "sentence_occurrences": [390, 412, 454, 455, 485, 492], "affiliation": "light", "frequency": 6, "id": "Algorithm"}, {"name": "North Dakota", "offsets": [19119, 20700], "paragraph_occurrences": [66, 70], "sentence_occurrences": [240, 248], "affiliation": "light", "frequency": 2, "id": "North_Dakota"}, {"name": "F1 score", "offsets": [41598, 43874, 44020], "paragraph_occurrences": [150, 156, 156], "sentence_occurrences": [475, 501, 503], "affiliation": "light", "frequency": 3, "id": "F1_score"}, {"name": "Entity\u2013relationship model", "offsets": [27705], "paragraph_occurrences": [103], "sentence_occurrences": [330], "affiliation": "light", "frequency": 1, "id": "Entity\u2013relationship_model"}, {"name": "Latent Dirichlet allocation", "offsets": [697, 730, 5366, 5440, 5558, 5624, 7230, 7821, 7926, 8165, 8283, 8709, 8774, 8793, 8955, 9366, 735, 8745, 11428, 11450, 11735, 12027, 16366, 16839, 19001, 45111], "paragraph_occurrences": [1, 1, 17, 17, 17, 17, 23, 26, 26, 27, 28, 28, 28, 28, 28, 28, 1, 28, 35, 35, 38, 38, 58, 58, 65, 160], "sentence_occurrences": [8, 8, 67, 68, 69, 69, 88, 95, 97, 103, 104, 108, 108, 109, 112, 114, 8, 108, 146, 146, 151, 154, 210, 216, 238, 516], "affiliation": "light", "frequency": 26, "id": "Latent_Dirichlet_allocation"}, {"name": "Trans World Airlines", "offsets": [20690], "paragraph_occurrences": [70], "sentence_occurrences": [248], "affiliation": "light", "frequency": 1, "id": "Trans_World_Airlines"}, {"name": "AM broadcasting", "offsets": [10755, 10929], "paragraph_occurrences": [32, 32], "sentence_occurrences": [132, 138], "affiliation": "light", "frequency": 2, "id": "AM_broadcasting"}, {"name": "CiteSeer", "offsets": [40, 1118], "paragraph_occurrences": [1, 3], "sentence_occurrences": [1, 13], "affiliation": "light", "frequency": 2, "id": "CiteSeer"}, {"name": "Artificial intelligence", "offsets": [25517], "paragraph_occurrences": [92], "sentence_occurrences": [300], "affiliation": "light", "frequency": 1, "id": "Artificial_intelligence"}, {"name": "Dick Cheney", "offsets": [14932, 15114, 15448, 24926, 25099, 25569], "paragraph_occurrences": [52, 52, 53, 91, 91, 92], "sentence_occurrences": [189, 192, 198, 293, 296, 300], "affiliation": "light", "frequency": 6, "id": "Dick_Cheney"}, {"name": "North Carolina Agricultural and Technical State University", "offsets": [13091, 13352], "paragraph_occurrences": [42, 43], "sentence_occurrences": [165, 169], "affiliation": "light", "frequency": 2, "id": "North_Carolina_Agricultural_and_Technical_State_University"}, {"name": "Dual polyhedron", "offsets": [8169], "paragraph_occurrences": [27], "sentence_occurrences": [103], "affiliation": "light", "frequency": 1, "id": "Dual_polyhedron"}, {"name": "Digital Bibliography & Library Project", "offsets": [31, 1105, 1805, 1934, 2256, 2783, 2969, 3673, 23073, 23442, 36303, 36376, 36720, 37069], "paragraph_occurrences": [1, 3, 4, 4, 5, 8, 8, 10, 80, 82, 131, 131, 132, 133], "sentence_occurrences": [1, 13, 21, 23, 26, 33, 35, 43, 269, 272, 423, 423, 426, 429], "affiliation": "light", "frequency": 14, "id": "DBLP"}, {"name": "Metropolis\u2013Hastings algorithm", "offsets": [23730, 23833], "paragraph_occurrences": [84, 84], "sentence_occurrences": [276, 277], "affiliation": "light", "frequency": 2, "id": "Metropolis\u2013Hastings_algorithm"}, {"name": "Metasearch engine", "offsets": [4629], "paragraph_occurrences": [14], "sentence_occurrences": [56], "affiliation": "light", "frequency": 1, "id": "Metasearch_engine"}, {"name": "List A cricket", "offsets": [20326], "paragraph_occurrences": [69], "sentence_occurrences": [245], "affiliation": "light", "frequency": 1, "id": "List_A_cricket"}, {"name": "Iraq War", "offsets": [14940, 15355, 24937, 25110], "paragraph_occurrences": [52, 53, 91, 91], "sentence_occurrences": [189, 197, 293, 296], "affiliation": "light", "frequency": 4, "id": "Iraq_War"}, {"name": "Digital-to-analog converter", "offsets": [18326, 18507, 18652], "paragraph_occurrences": [62, 62, 63], "sentence_occurrences": [232, 233, 235], "affiliation": "light", "frequency": 3, "id": "Digital-to-analog_converter"}, {"name": "Multinomial distribution", "offsets": [11704], "paragraph_occurrences": [37], "sentence_occurrences": [149], "affiliation": "light", "frequency": 1, "id": "Multinomial_distribution"}, {"name": "Colin Powell", "offsets": [14977, 15459, 24975], "paragraph_occurrences": [52, 53, 91], "sentence_occurrences": [190, 198, 294], "affiliation": "light", "frequency": 3, "id": "Colin_Powell"}, {"name": "Proposition", "offsets": [19408, 19953, 20560], "paragraph_occurrences": [66, 67, 70], "sentence_occurrences": [240, 242, 246], "affiliation": "light", "frequency": 3, "id": "Proposition"}, {"name": "Holotype", "offsets": [25294, 26925, 28387, 28484], "paragraph_occurrences": [91, 99, 105, 106], "sentence_occurrences": [298, 319, 334, 335], "affiliation": "light", "frequency": 4, "id": "Holotype"}, {"name": "Hui Li", "offsets": [3577, 3634, 31435], "paragraph_occurrences": [10, 10, 114], "sentence_occurrences": [42, 43, 365], "affiliation": "light", "frequency": 3, "id": "Hui_Li"}, {"name": "Laplacian matrix", "offsets": [34993], "paragraph_occurrences": [125], "sentence_occurrences": [400], "affiliation": "light", "frequency": 1, "id": "Laplacian_matrix"}, {"name": "Univariate", "offsets": [20989], "paragraph_occurrences": [72], "sentence_occurrences": [252], "affiliation": "light", "frequency": 1, "id": "Univariate"}, {"name": "Gibbs sampling", "offsets": [7465, 7890, 7621, 10258, 16267, 16381, 17973, 16231, 16816, 18389, 17368, 20971, 24214, 24792, 27986, 23757, 36753, 37598, 38152, 45260, 46943], "paragraph_occurrences": [24, 26, 24, 30, 58, 58, 61, 57, 58, 62, 59, 71, 86, 90, 105, 84, 132, 134, 137, 161, 168], "sentence_occurrences": [91, 96, 92, 120, 210, 210, 230, 208, 216, 233, 222, 251, 283, 291, 332, 276, 427, 433, 440, 517, 539], "affiliation": "light", "frequency": 21, "id": "Gibbs_sampling"}], "all_paragraphs": [{"paragraph_info": {"end": 8, "start": 0, "text": "Abstract", "rank": 0, "paragraph_comparative_number": 1, "entities": [], "id": "p_0"}, "sentences": [{"end": 8, "text": "Abstract", "rank": 0, "start": 0, "IsComparative": "1", "id": "st_0"}]}, {"paragraph_info": {"end": 1063, "start": 8, "text": "In bibliographies like DBLP and Citeseer, there are three kinds of entity-name problems that need to be solved.First, multiple entities share one name, which is called the name sharing problem.Second, one entity has different names, which is called the name variant problem.Third, multiple entities share multiple names, which is called the name mixing problem.We aim to solve these problems based on one model in this paper.We call this task complete entity resolution.Different from previous work, our work use global information based on data with two types of information, words and author names.We propose a generative latent topic model that involves both author names and words the LDA-dual model, by extending the LDA (Latent Dirichlet Allocation) model.We also propose a method to obtain model parameters that is global information.Based on obtained model parameters, we propose two algorithms to solve the three problems mentioned above.Experimental results demonstrate the effectiveness and great potential of the proposed model and algorithms.", "rank": 1, "paragraph_comparative_number": 5, "entities": [], "id": "p_1"}, "sentences": [{"end": 119, "text": "In bibliographies like DBLP and Citeseer, there are three kinds of entity-name problems that need to be solved.", "rank": 1, "start": 8, "IsComparative": "1", "id": "st_1"}, {"end": 201, "text": "First, multiple entities share one name, which is called the name sharing problem.", "rank": 2, "start": 119, "IsComparative": "0", "id": "st_2"}, {"end": 282, "text": "Second, one entity has different names, which is called the name variant problem.", "rank": 3, "start": 201, "IsComparative": "0", "id": "st_3"}, {"end": 369, "text": "Third, multiple entities share multiple names, which is called the name mixing problem.", "rank": 4, "start": 282, "IsComparative": "0", "id": "st_4"}, {"end": 433, "text": "We aim to solve these problems based on one model in this paper.", "rank": 5, "start": 369, "IsComparative": "0", "id": "st_5"}, {"end": 478, "text": "We call this task complete entity resolution.", "rank": 6, "start": 433, "IsComparative": "0", "id": "st_6"}, {"end": 608, "text": "Different from previous work, our work use global information based on data with two types of information, words and author names.", "rank": 7, "start": 478, "IsComparative": "1", "id": "st_7"}, {"end": 770, "text": "We propose a generative latent topic model that involves both author names and words the LDA-dual model, by extending the LDA (Latent Dirichlet Allocation) model.", "rank": 8, "start": 608, "IsComparative": "1", "id": "st_8"}, {"end": 849, "text": "We also propose a method to obtain model parameters that is global information.", "rank": 9, "start": 770, "IsComparative": "1", "id": "st_9"}, {"end": 955, "text": "Based on obtained model parameters, we propose two algorithms to solve the three problems mentioned above.", "rank": 10, "start": 849, "IsComparative": "1", "id": "st_10"}, {"end": 1063, "text": "Experimental results demonstrate the effectiveness and great potential of the proposed model and algorithms.", "rank": 11, "start": 955, "IsComparative": "0", "id": "st_11"}]}, {"paragraph_info": {"end": 1078, "start": 1063, "text": "I. INTRODUCTION", "rank": 2, "paragraph_comparative_number": 0, "entities": [], "id": "p_2"}, "sentences": [{"end": 1078, "text": "I. INTRODUCTION", "rank": 12, "start": 1063, "IsComparative": "0", "id": "st_12"}]}, {"paragraph_info": {"end": 1734, "start": 1078, "text": "Bibliography websites like DBLP <1> and Citeseer provide much convenience for scientists and researchers to search or browse the citations of papers.A citation includes authors names, paper title, venue of publication, publication year, etc.The information are very useful.But there are problems about the correctness of the information.Entities, particularly authors, are frequently inconsistent with their names.We identify three major entity-name problems  the name sharing problem, the name variant problem and the name mixing problem.These problems cause confusion for users of bibliography websites.Now we use real examples to explain these problems.", "rank": 3, "paragraph_comparative_number": 3, "entities": [], "id": "p_3"}, "sentences": [{"end": 1227, "text": "Bibliography websites like DBLP <1> and Citeseer provide much convenience for scientists and researchers to search or browse the citations of papers.", "rank": 13, "start": 1078, "IsComparative": "1", "id": "st_13"}, {"end": 1319, "text": "A citation includes authors names, paper title, venue of publication, publication year, etc.", "rank": 14, "start": 1227, "IsComparative": "0", "id": "st_14"}, {"end": 1351, "text": "The information are very useful.", "rank": 15, "start": 1319, "IsComparative": "0", "id": "st_15"}, {"end": 1415, "text": "But there are problems about the correctness of the information.", "rank": 16, "start": 1351, "IsComparative": "0", "id": "st_16"}, {"end": 1492, "text": "Entities, particularly authors, are frequently inconsistent with their names.", "rank": 17, "start": 1415, "IsComparative": "1", "id": "st_17"}, {"end": 1617, "text": "We identify three major entity-name problems  the name sharing problem, the name variant problem and the name mixing problem.", "rank": 18, "start": 1492, "IsComparative": "0", "id": "st_18"}, {"end": 1683, "text": "These problems cause confusion for users of bibliography websites.", "rank": 19, "start": 1617, "IsComparative": "0", "id": "st_19"}, {"end": 1734, "text": "Now we use real examples to explain these problems.", "rank": 20, "start": 1683, "IsComparative": "1", "id": "st_20"}]}, {"paragraph_info": {"end": 2145, "start": 1734, "text": "The name sharing problem A full name may be shared by multiple authors.DBLP bibliography treats these authors as one entity and lists all citations under the shared name in a single page.And users of DBLP cannot distinguish those authors with the same full name.This causes confusion and handicaps the usage of this bibliography.We call this problem the name sharing problem or multiple-entity-one-name problem.", "rank": 4, "paragraph_comparative_number": 2, "entities": [], "id": "p_4"}, "sentences": [{"end": 1805, "text": "The name sharing problem A full name may be shared by multiple authors.", "rank": 21, "start": 1734, "IsComparative": "0", "id": "st_21"}, {"end": 1921, "text": "DBLP bibliography treats these authors as one entity and lists all citations under the shared name in a single page.", "rank": 22, "start": 1805, "IsComparative": "1", "id": "st_22"}, {"end": 1996, "text": "And users of DBLP cannot distinguish those authors with the same full name.", "rank": 23, "start": 1921, "IsComparative": "0", "id": "st_23"}, {"end": 2063, "text": "This causes confusion and handicaps the usage of this bibliography.", "rank": 24, "start": 1996, "IsComparative": "1", "id": "st_24"}, {"end": 2145, "text": "We call this problem the name sharing problem or multiple-entity-one-name problem.", "rank": 25, "start": 2063, "IsComparative": "0", "id": "st_25"}]}, {"paragraph_info": {"end": 2367, "start": 2145, "text": "In Figure 1 (left), all 23 citations with the full name Michael Johnson are listed in a single web page at the DBLP website.But based on our investigation, citations listed under this name are from five different entities.", "rank": 5, "paragraph_comparative_number": 1, "entities": [], "id": "p_5"}, "sentences": [{"end": 2269, "text": "In Figure 1 (left), all 23 citations with the full name Michael Johnson are listed in a single web page at the DBLP website.", "rank": 26, "start": 2145, "IsComparative": "0", "id": "st_26"}, {"end": 2367, "text": "But based on our investigation, citations listed under this name are from five different entities.", "rank": 27, "start": 2269, "IsComparative": "1", "id": "st_27"}]}, {"paragraph_info": {"end": 2580, "start": 2367, "text": "This problem has attracted much attention from researchers in recent years.Different names for this problem are name disambiguation <2><3>, object distinction <4>, mixed citation <5> and author disambiguation <6>.", "rank": 6, "paragraph_comparative_number": 0, "entities": [], "id": "p_6"}, "sentences": [{"end": 2442, "text": "This problem has attracted much attention from researchers in recent years.", "rank": 28, "start": 2367, "IsComparative": "0", "id": "st_28"}, {"end": 2580, "text": "Different names for this problem are name disambiguation <2><3>, object distinction <4>, mixed citation <5> and author disambiguation <6>.", "rank": 29, "start": 2442, "IsComparative": "0", "id": "st_29"}]}, {"paragraph_info": {"end": 2604, "start": 2580, "text": "The name variant problem", "rank": 7, "paragraph_comparative_number": 0, "entities": [], "id": "p_7"}, "sentences": [{"end": 2604, "text": "The name variant problem", "rank": 30, "start": 2580, "IsComparative": "0", "id": "st_30"}]}, {"paragraph_info": {"end": 3279, "start": 2604, "text": "The second problem is called the name variant problem or one-entity-multiple-name problem.An author may have multiple full names which are called name variants of this author.But DBLP treats these full names as from different entities and lists them in separate web pages.For example, in Figure 1 (right), Clement Yu and Clement T. Yu represent the same entity.But DBLP treats them as the names of two entities and lists the citations in separate web pages.This problem has been also referred to as the entity resolution <7> or split citation <5> problem.And it has been researched for quite a few years because of its strong connection with data cleaning and record linkage.", "rank": 8, "paragraph_comparative_number": 2, "entities": [], "id": "p_8"}, "sentences": [{"end": 2694, "text": "The second problem is called the name variant problem or one-entity-multiple-name problem.", "rank": 31, "start": 2604, "IsComparative": "0", "id": "st_31"}, {"end": 2779, "text": "An author may have multiple full names which are called name variants of this author.", "rank": 32, "start": 2694, "IsComparative": "0", "id": "st_32"}, {"end": 2876, "text": "But DBLP treats these full names as from different entities and lists them in separate web pages.", "rank": 33, "start": 2779, "IsComparative": "1", "id": "st_33"}, {"end": 2965, "text": "For example, in Figure 1 (right), Clement Yu and Clement T. Yu represent the same entity.", "rank": 34, "start": 2876, "IsComparative": "0", "id": "st_34"}, {"end": 3061, "text": "But DBLP treats them as the names of two entities and lists the citations in separate web pages.", "rank": 35, "start": 2965, "IsComparative": "1", "id": "st_35"}, {"end": 3159, "text": "This problem has been also referred to as the entity resolution <7> or split citation <5> problem.", "rank": 36, "start": 3061, "IsComparative": "0", "id": "st_36"}, {"end": 3279, "text": "And it has been researched for quite a few years because of its strong connection with data cleaning and record linkage.", "rank": 37, "start": 3159, "IsComparative": "0", "id": "st_37"}]}, {"paragraph_info": {"end": 3302, "start": 3279, "text": "The name mixing problem", "rank": 9, "paragraph_comparative_number": 0, "entities": [], "id": "p_9"}, "sentences": [{"end": 3302, "text": "The name mixing problem", "rank": 38, "start": 3279, "IsComparative": "0", "id": "st_38"}]}, {"paragraph_info": {"end": 3777, "start": 3302, "text": "The two problems above may intertwine.In that case, multiple entities share multiple names.This is called the name mixing problem or multiple-name-multiple-entity problem.For example, in Figure 2, four entities share the name Guohui Li and two of them share another name Guo-Hui Li.But citations under Guohui Li and those under Guo-Hui Li appear in separate web pages in DBLP.Solving this problem requires solving name sharing problem and name variant problem simultaneously.", "rank": 10, "paragraph_comparative_number": 3, "entities": [], "id": "p_10"}, "sentences": [{"end": 3340, "text": "The two problems above may intertwine.", "rank": 39, "start": 3302, "IsComparative": "1", "id": "st_39"}, {"end": 3393, "text": "In that case, multiple entities share multiple names.", "rank": 40, "start": 3340, "IsComparative": "0", "id": "st_40"}, {"end": 3473, "text": "This is called the name mixing problem or multiple-name-multiple-entity problem.", "rank": 41, "start": 3393, "IsComparative": "0", "id": "st_41"}, {"end": 3584, "text": "For example, in Figure 2, four entities share the name Guohui Li and two of them share another name Guo-Hui Li.", "rank": 42, "start": 3473, "IsComparative": "1", "id": "st_42"}, {"end": 3678, "text": "But citations under Guohui Li and those under Guo-Hui Li appear in separate web pages in DBLP.", "rank": 43, "start": 3584, "IsComparative": "1", "id": "st_43"}, {"end": 3777, "text": "Solving this problem requires solving name sharing problem and name variant problem simultaneously.", "rank": 44, "start": 3678, "IsComparative": "0", "id": "st_44"}]}, {"paragraph_info": {"end": 3811, "start": 3777, "text": "Challenges and potential solutions", "rank": 11, "paragraph_comparative_number": 0, "entities": [], "id": "p_11"}, "sentences": [{"end": 3811, "text": "Challenges and potential solutions", "rank": 45, "start": 3777, "IsComparative": "0", "id": "st_45"}]}, {"paragraph_info": {"end": 4390, "start": 3811, "text": "The three problems are very challenging.First, authors may move from one place to another, so their coauthors may change significantly.That makes it difficult to integrate citations before and after their moves.Second, authors may change research interests and collaborate with a wide variety of other researchers.If they share identical names, it is difficult to differentiate their citations.Third, the two scenarios above may happen simultaneously and cause more intricacies.Furthermore, for the name mixing problem with the two scenarios, intricacies would be very extensive.", "rank": 12, "paragraph_comparative_number": 7, "entities": [], "id": "p_12"}, "sentences": [{"end": 3851, "text": "The three problems are very challenging.", "rank": 46, "start": 3811, "IsComparative": "1", "id": "st_46"}, {"end": 3946, "text": "First, authors may move from one place to another, so their coauthors may change significantly.", "rank": 47, "start": 3851, "IsComparative": "1", "id": "st_47"}, {"end": 4022, "text": "That makes it difficult to integrate citations before and after their moves.", "rank": 48, "start": 3946, "IsComparative": "1", "id": "st_48"}, {"end": 4125, "text": "Second, authors may change research interests and collaborate with a wide variety of other researchers.", "rank": 49, "start": 4022, "IsComparative": "1", "id": "st_49"}, {"end": 4205, "text": "If they share identical names, it is difficult to differentiate their citations.", "rank": 50, "start": 4125, "IsComparative": "1", "id": "st_50"}, {"end": 4289, "text": "Third, the two scenarios above may happen simultaneously and cause more intricacies.", "rank": 51, "start": 4205, "IsComparative": "1", "id": "st_51"}, {"end": 4390, "text": "Furthermore, for the name mixing problem with the two scenarios, intricacies would be very extensive.", "rank": 52, "start": 4289, "IsComparative": "1", "id": "st_52"}]}, {"paragraph_info": {"end": 4604, "start": 4390, "text": "We try to see through these intricacies and describe citations and documents by something invariant, the global information for a corpus or a bibliography.We explain it with the help of an example of two citations.", "rank": 13, "paragraph_comparative_number": 2, "entities": [], "id": "p_13"}, "sentences": [{"end": 4545, "text": "We try to see through these intricacies and describe citations and documents by something invariant, the global information for a corpus or a bibliography.", "rank": 53, "start": 4390, "IsComparative": "1", "id": "st_53"}, {"end": 4604, "text": "We explain it with the help of an example of two citations.", "rank": 54, "start": 4545, "IsComparative": "1", "id": "st_54"}]}, {"paragraph_info": {"end": 4688, "start": 4604, "text": "Clement T. Yu.Multimedia Metasearch Engines.Multimedia Information Systems 2002: 5-6", "rank": 14, "paragraph_comparative_number": 1, "entities": [], "id": "p_14"}, "sentences": [{"end": 4618, "text": "Clement T. Yu.", "rank": 55, "start": 4604, "IsComparative": "0", "id": "st_55"}, {"end": 4648, "text": "Multimedia Metasearch Engines.", "rank": 56, "start": 4618, "IsComparative": "0", "id": "st_56"}, {"end": 4688, "text": "Multimedia Information Systems 2002: 5-6", "rank": 57, "start": 4648, "IsComparative": "1", "id": "st_57"}]}, {"paragraph_info": {"end": 4859, "start": 4688, "text": "Fang Liu, Shuang Liu, Clement T. Yu, Weiyi Meng, Ophir Frieder, and David Grossman.Database selection in intranet mediators for natural language queries.CIKM 2005: 229-230", "rank": 15, "paragraph_comparative_number": 1, "entities": [], "id": "p_15"}, "sentences": [{"end": 4771, "text": "Fang Liu, Shuang Liu, Clement T. Yu, Weiyi Meng, Ophir Frieder, and David Grossman.", "rank": 58, "start": 4688, "IsComparative": "0", "id": "st_58"}, {"end": 4841, "text": "Database selection in intranet mediators for natural language queries.", "rank": 59, "start": 4771, "IsComparative": "1", "id": "st_59"}, {"end": 4859, "text": "CIKM 2005: 229-230", "rank": 60, "start": 4841, "IsComparative": "0", "id": "st_60"}]}, {"paragraph_info": {"end": 5350, "start": 4859, "text": "In this example, to solve the name sharing problem, we try to find out whether the name Clement T. Yu in the two citations are from the same person.The two citations above have just one author name Clement T. Yu in common.They seems to be very different.But actually the two citations have close relationship.First, database selection and queries are both important concepts of metasearch engines.Second, Clement T. Yu and Weiyi Meng have appeared in many citations about metasearch engines.", "rank": 16, "paragraph_comparative_number": 4, "entities": [], "id": "p_16"}, "sentences": [{"end": 5007, "text": "In this example, to solve the name sharing problem, we try to find out whether the name Clement T. Yu in the two citations are from the same person.", "rank": 61, "start": 4859, "IsComparative": "1", "id": "st_61"}, {"end": 5081, "text": "The two citations above have just one author name Clement T. Yu in common.", "rank": 62, "start": 5007, "IsComparative": "1", "id": "st_62"}, {"end": 5113, "text": "They seems to be very different.", "rank": 63, "start": 5081, "IsComparative": "1", "id": "st_63"}, {"end": 5168, "text": "But actually the two citations have close relationship.", "rank": 64, "start": 5113, "IsComparative": "1", "id": "st_64"}, {"end": 5256, "text": "First, database selection and queries are both important concepts of metasearch engines.", "rank": 65, "start": 5168, "IsComparative": "0", "id": "st_65"}, {"end": 5350, "text": "Second, Clement T. Yu and Weiyi Meng have appeared in many citations about metasearch engines.", "rank": 66, "start": 5256, "IsComparative": "0", "id": "st_66"}]}, {"paragraph_info": {"end": 5865, "start": 5350, "text": "Inspired by the LDA model <8>, we try to catch global information by topic.we propose the LDA-dual model in which we extend the notion topic in LDA.While it is only a Dirichlet distribution over words in the LDA, a topic is represented by two Dirichlet distributions in the LDA-dual, one over words and the other over author names.Then a topic is characterized by a series of words and a series of author names.For example, topic physics might be characterized by relativity and Einstein, and other words and names.", "rank": 17, "paragraph_comparative_number": 1, "entities": [], "id": "p_17"}, "sentences": [{"end": 5425, "text": "Inspired by the LDA model <8>, we try to catch global information by topic.", "rank": 67, "start": 5350, "IsComparative": "1", "id": "st_67"}, {"end": 5498, "text": "we propose the LDA-dual model in which we extend the notion topic in LDA.", "rank": 68, "start": 5425, "IsComparative": "0", "id": "st_68"}, {"end": 5681, "text": "While it is only a Dirichlet distribution over words in the LDA, a topic is represented by two Dirichlet distributions in the LDA-dual, one over words and the other over author names.", "rank": 69, "start": 5498, "IsComparative": "0", "id": "st_69"}, {"end": 5761, "text": "Then a topic is characterized by a series of words and a series of author names.", "rank": 70, "start": 5681, "IsComparative": "0", "id": "st_70"}, {"end": 5865, "text": "For example, topic physics might be characterized by relativity and Einstein, and other words and names.", "rank": 71, "start": 5761, "IsComparative": "0", "id": "st_71"}]}, {"paragraph_info": {"end": 6184, "start": 5865, "text": "Topics come from the whole corpus, so we call them global information.Author names, the paper title, etc for a citation are called local information.The two citations above have little local information in common, but they probably have much global information in common that helps estimate similarity of two citations.", "rank": 18, "paragraph_comparative_number": 1, "entities": [], "id": "p_18"}, "sentences": [{"end": 5935, "text": "Topics come from the whole corpus, so we call them global information.", "rank": 72, "start": 5865, "IsComparative": "0", "id": "st_72"}, {"end": 6014, "text": "Author names, the paper title, etc for a citation are called local information.", "rank": 73, "start": 5935, "IsComparative": "0", "id": "st_73"}, {"end": 6184, "text": "The two citations above have little local information in common, but they probably have much global information in common that helps estimate similarity of two citations.", "rank": 74, "start": 6014, "IsComparative": "1", "id": "st_74"}]}, {"paragraph_info": {"end": 6210, "start": 6184, "text": "Complete entity resolution", "rank": 19, "paragraph_comparative_number": 1, "entities": [], "id": "p_19"}, "sentences": [{"end": 6210, "text": "Complete entity resolution", "rank": 75, "start": 6184, "IsComparative": "1", "id": "st_75"}]}, {"paragraph_info": {"end": 7133, "start": 6210, "text": "We propose the notion of complete entity resolution to refer to the three entity-name problems in a bibliography.Previous work does not solve the three problems simultaneously.Work in <7> is aimed at entity resolution.It is aimed at solving only the name variant problem and using only author names in citations.In this paper, we solve name sharing and name variant problem, and use both author names and words, both global and local information of documents.information, for representing a citation by a vector that is a mixture of topics.The topic similarity of two citations is computed based on two vectors.Other similarities are computed based on local information like coauthor names, titles, etc.Based on these similarities, a classifier is used to decide if two citations are from the same person.And based on the classifier, we propose two algorithms to solve the name sharing problem and the name variant problem.", "rank": 20, "paragraph_comparative_number": 5, "entities": [], "id": "p_20"}, "sentences": [{"end": 6323, "text": "We propose the notion of complete entity resolution to refer to the three entity-name problems in a bibliography.", "rank": 76, "start": 6210, "IsComparative": "0", "id": "st_76"}, {"end": 6386, "text": "Previous work does not solve the three problems simultaneously.", "rank": 77, "start": 6323, "IsComparative": "1", "id": "st_77"}, {"end": 6428, "text": "Work in <7> is aimed at entity resolution.", "rank": 78, "start": 6386, "IsComparative": "0", "id": "st_78"}, {"end": 6522, "text": "It is aimed at solving only the name variant problem and using only author names in citations.", "rank": 79, "start": 6428, "IsComparative": "0", "id": "st_79"}, {"end": 6669, "text": "In this paper, we solve name sharing and name variant problem, and use both author names and words, both global and local information of documents.", "rank": 80, "start": 6522, "IsComparative": "0", "id": "st_80"}, {"end": 6750, "text": "information, for representing a citation by a vector that is a mixture of topics.", "rank": 81, "start": 6669, "IsComparative": "1", "id": "st_81"}, {"end": 6821, "text": "The topic similarity of two citations is computed based on two vectors.", "rank": 82, "start": 6750, "IsComparative": "1", "id": "st_82"}, {"end": 6913, "text": "Other similarities are computed based on local information like coauthor names, titles, etc.", "rank": 83, "start": 6821, "IsComparative": "0", "id": "st_83"}, {"end": 7015, "text": "Based on these similarities, a classifier is used to decide if two citations are from the same person.", "rank": 84, "start": 6913, "IsComparative": "1", "id": "st_84"}, {"end": 7133, "text": "And based on the classifier, we propose two algorithms to solve the name sharing problem and the name variant problem.", "rank": 85, "start": 7015, "IsComparative": "1", "id": "st_85"}]}, {"paragraph_info": {"end": 7146, "start": 7133, "text": "Contributions", "rank": 21, "paragraph_comparative_number": 1, "entities": [], "id": "p_21"}, "sentences": [{"end": 7146, "text": "Contributions", "rank": 86, "start": 7133, "IsComparative": "1", "id": "st_86"}]}, {"paragraph_info": {"end": 7199, "start": 7146, "text": "Our contributions in this paper are summarized below.", "rank": 22, "paragraph_comparative_number": 0, "entities": [], "id": "p_22"}, "sentences": [{"end": 7199, "text": "Our contributions in this paper are summarized below.", "rank": 87, "start": 7146, "IsComparative": "0", "id": "st_87"}]}, {"paragraph_info": {"end": 7332, "start": 7199, "text": "We propose a generative model, LDA-dual.Different from previous models, the model involves two types of data  words and author names.", "rank": 23, "paragraph_comparative_number": 1, "entities": [], "id": "p_23"}, "sentences": [{"end": 7239, "text": "We propose a generative model, LDA-dual.", "rank": 88, "start": 7199, "IsComparative": "0", "id": "st_88"}, {"end": 7332, "text": "Different from previous models, the model involves two types of data  words and author names.", "rank": 89, "start": 7239, "IsComparative": "1", "id": "st_89"}]}, {"paragraph_info": {"end": 7627, "start": 7332, "text": "We propose an approach to obtain the model parameters for a corpus.And we deduce a series of conditional probabilities in support of Gibbs sampling.Different from previous work, hyperparameter vectors ,  and  are also included in the sampling process by means of Metropolis-Hasting within Gibbs.", "rank": 24, "paragraph_comparative_number": 0, "entities": [], "id": "p_24"}, "sentences": [{"end": 7399, "text": "We propose an approach to obtain the model parameters for a corpus.", "rank": 90, "start": 7332, "IsComparative": "0", "id": "st_90"}, {"end": 7480, "text": "And we deduce a series of conditional probabilities in support of Gibbs sampling.", "rank": 91, "start": 7399, "IsComparative": "0", "id": "st_91"}, {"end": 7627, "text": "Different from previous work, hyperparameter vectors ,  and  are also included in the sampling process by means of Metropolis-Hasting within Gibbs.", "rank": 92, "start": 7480, "IsComparative": "0", "id": "st_92"}]}, {"paragraph_info": {"end": 7746, "start": 7627, "text": "Based on the model parameters, we propose two algorithm to solve the name sharing problem and the name variant problem.", "rank": 25, "paragraph_comparative_number": 0, "entities": [], "id": "p_25"}, "sentences": [{"end": 7746, "text": "Based on the model parameters, we propose two algorithm to solve the name sharing problem and the name variant problem.", "rank": 93, "start": 7627, "IsComparative": "0", "id": "st_93"}]}, {"paragraph_info": {"end": 8158, "start": 7746, "text": "The rest of the paper is organized as follows.In Section II we propose the LDA-dual model.Section III presents how to learn model parameters by Gibbs sampling.Section IV discusses LDA-duals application in entity, including two algorithms for the name sharing and name variant problems.Section V reports experimental results.Section VI is related work.Section VII is conclusion.Appendix is proofs of propositions.", "rank": 26, "paragraph_comparative_number": 2, "entities": [], "id": "p_26"}, "sentences": [{"end": 7792, "text": "The rest of the paper is organized as follows.", "rank": 94, "start": 7746, "IsComparative": "0", "id": "st_94"}, {"end": 7836, "text": "In Section II we propose the LDA-dual model.", "rank": 95, "start": 7792, "IsComparative": "0", "id": "st_95"}, {"end": 7905, "text": "Section III presents how to learn model parameters by Gibbs sampling.", "rank": 96, "start": 7836, "IsComparative": "1", "id": "st_96"}, {"end": 8031, "text": "Section IV discusses LDA-duals application in entity, including two algorithms for the name sharing and name variant problems.", "rank": 97, "start": 7905, "IsComparative": "1", "id": "st_97"}, {"end": 8070, "text": "Section V reports experimental results.", "rank": 98, "start": 8031, "IsComparative": "0", "id": "st_98"}, {"end": 8097, "text": "Section VI is related work.", "rank": 99, "start": 8070, "IsComparative": "0", "id": "st_99"}, {"end": 8123, "text": "Section VII is conclusion.", "rank": 100, "start": 8097, "IsComparative": "0", "id": "st_100"}, {"end": 8158, "text": "Appendix is proofs of propositions.", "rank": 101, "start": 8123, "IsComparative": "0", "id": "st_101"}]}, {"paragraph_info": {"end": 8179, "start": 8158, "text": "II.THE LDA-DUAL MODEL", "rank": 27, "paragraph_comparative_number": 0, "entities": [], "id": "p_27"}, "sentences": [{"end": 8161, "text": "II.", "rank": 102, "start": 8158, "IsComparative": "0", "id": "st_102"}, {"end": 8179, "text": "THE LDA-DUAL MODEL", "rank": 103, "start": 8161, "IsComparative": "0", "id": "st_103"}]}, {"paragraph_info": {"end": 9477, "start": 8179, "text": "To obtain global information of a corpus, we propose a generative latent topic model that we called the LDA-dual model as shown in Figure 3.The explanations to the symbols are included in Table I. This is a kind of graphical model <9>.There is a conditional dependence assumption for this kind of model, i.e., each node in Figure 3 is conditionally independent of its non-descendants, given its immediate parents <10>.The assumption is the basis for most derived conditional probabilities in Sections II and III in this paper.The LDA-dual model is extended from the Latent Dirichlet Allocation (LDA) model <8>.The LDA model has two basic assumptions.First, every document is a mixture of topics.Second, every topic is a Dirichlet distribution over words in the vocabulary.The LDA model has been widely applied to analyzing documents that include one type of information like words.But It has not been applied to documents that contain two or more types of information, such as a bibliography that includes both words and author names, a demographic document that includes words, person names and place names, etc.To apply to documents containing author names as well as words, we extend LDA in our model by adding the third assumption  every topic is a Dirichlet distribution over all author names.", "rank": 28, "paragraph_comparative_number": 3, "entities": [], "id": "p_28"}, "sentences": [{"end": 8319, "text": "To obtain global information of a corpus, we propose a generative latent topic model that we called the LDA-dual model as shown in Figure 3.", "rank": 104, "start": 8179, "IsComparative": "0", "id": "st_104"}, {"end": 8414, "text": "The explanations to the symbols are included in Table I. This is a kind of graphical model <9>.", "rank": 105, "start": 8319, "IsComparative": "0", "id": "st_105"}, {"end": 8597, "text": "There is a conditional dependence assumption for this kind of model, i.e., each node in Figure 3 is conditionally independent of its non-descendants, given its immediate parents <10>.", "rank": 106, "start": 8414, "IsComparative": "1", "id": "st_106"}, {"end": 8705, "text": "The assumption is the basis for most derived conditional probabilities in Sections II and III in this paper.", "rank": 107, "start": 8597, "IsComparative": "0", "id": "st_107"}, {"end": 8789, "text": "The LDA-dual model is extended from the Latent Dirichlet Allocation (LDA) model <8>.", "rank": 108, "start": 8705, "IsComparative": "0", "id": "st_108"}, {"end": 8829, "text": "The LDA model has two basic assumptions.", "rank": 109, "start": 8789, "IsComparative": "0", "id": "st_109"}, {"end": 8874, "text": "First, every document is a mixture of topics.", "rank": 110, "start": 8829, "IsComparative": "0", "id": "st_110"}, {"end": 8951, "text": "Second, every topic is a Dirichlet distribution over words in the vocabulary.", "rank": 111, "start": 8874, "IsComparative": "0", "id": "st_111"}, {"end": 9060, "text": "The LDA model has been widely applied to analyzing documents that include one type of information like words.", "rank": 112, "start": 8951, "IsComparative": "0", "id": "st_112"}, {"end": 9292, "text": "But It has not been applied to documents that contain two or more types of information, such as a bibliography that includes both words and author names, a demographic document that includes words, person names and place names, etc.", "rank": 113, "start": 9060, "IsComparative": "1", "id": "st_113"}, {"end": 9477, "text": "To apply to documents containing author names as well as words, we extend LDA in our model by adding the third assumption  every topic is a Dirichlet distribution over all author names.", "rank": 114, "start": 9292, "IsComparative": "1", "id": "st_114"}]}, {"paragraph_info": {"end": 10219, "start": 9477, "text": "In our model, words and author names are generated in a parallel manner for a document.Specifically, given the number of words and the number of author names, this model generates every word by first choosing a topic and then choosing a word according to the topics Dirichlet distribution over words.And it generates every author name by first choosing a topic and then choosing an author name according to the topics Dirichlet distribution over author names.The latent variable topic is slightly different from that in LDA.To understand that easily, we can think of a topic as a research group, a group of people who share research interests and coauthor papers, because a research group includes information for both words and author names.", "rank": 29, "paragraph_comparative_number": 4, "entities": [], "id": "p_29"}, "sentences": [{"end": 9564, "text": "In our model, words and author names are generated in a parallel manner for a document.", "rank": 115, "start": 9477, "IsComparative": "1", "id": "st_115"}, {"end": 9777, "text": "Specifically, given the number of words and the number of author names, this model generates every word by first choosing a topic and then choosing a word according to the topics Dirichlet distribution over words.", "rank": 116, "start": 9564, "IsComparative": "1", "id": "st_116"}, {"end": 9936, "text": "And it generates every author name by first choosing a topic and then choosing an author name according to the topics Dirichlet distribution over author names.", "rank": 117, "start": 9777, "IsComparative": "1", "id": "st_117"}, {"end": 10001, "text": "The latent variable topic is slightly different from that in LDA.", "rank": 118, "start": 9936, "IsComparative": "0", "id": "st_118"}, {"end": 10219, "text": "To understand that easily, we can think of a topic as a research group, a group of people who share research interests and coauthor papers, because a research group includes information for both words and author names.", "rank": 119, "start": 10001, "IsComparative": "1", "id": "st_119"}]}, {"paragraph_info": {"end": 10469, "start": 10219, "text": "In Section III, we learn this model by Gibbs sampling.In Section IV, we present an application of this model to complete entity resolution.After all, this model can also be applied to other domains in which documents include two types of information.", "rank": 30, "paragraph_comparative_number": 1, "entities": [], "id": "p_30"}, "sentences": [{"end": 10273, "text": "In Section III, we learn this model by Gibbs sampling.", "rank": 120, "start": 10219, "IsComparative": "0", "id": "st_120"}, {"end": 10358, "text": "In Section IV, we present an application of this model to complete entity resolution.", "rank": 121, "start": 10273, "IsComparative": "0", "id": "st_121"}, {"end": 10469, "text": "After all, this model can also be applied to other domains in which documents include two types of information.", "rank": 122, "start": 10358, "IsComparative": "1", "id": "st_122"}]}, {"paragraph_info": {"end": 10480, "start": 10469, "text": "A.Documents", "rank": 31, "paragraph_comparative_number": 2, "entities": [], "id": "p_31"}, "sentences": [{"end": 10471, "text": "A.", "rank": 123, "start": 10469, "IsComparative": "1", "id": "st_123"}, {"end": 10480, "text": "Documents", "rank": 124, "start": 10471, "IsComparative": "1", "id": "st_124"}]}, {"paragraph_info": {"end": 10933, "start": 10480, "text": "We first define documents that include two types of information.It is called words and author names in this paper, but it can have other names for different domains.Definition 1: A document is a collection of N words and M author names, denoted as d = <w1, ..., wN, a1, ..., aM>, where wn is the nth word and am the mth author name.And we denote the collection of words as d(w) = <w1, ..., wN> and the collection of author names as d(a) = <a1, ..., aM>.", "rank": 32, "paragraph_comparative_number": 3, "entities": [], "id": "p_32"}, "sentences": [{"end": 10544, "text": "We first define documents that include two types of information.", "rank": 125, "start": 10480, "IsComparative": "1", "id": "st_125"}, {"end": 10645, "text": "It is called words and author names in this paper, but it can have other names for different domains.", "rank": 126, "start": 10544, "IsComparative": "0", "id": "st_126"}, {"end": 10738, "text": "Definition 1: A document is a collection of N words and M author names, denoted as d = <w1, .", "rank": 127, "start": 10645, "IsComparative": "1", "id": "st_127"}, {"end": 10739, "text": ".", "rank": 128, "start": 10738, "IsComparative": "0", "id": "st_128"}, {"end": 10751, "text": "., wN, a1, .", "rank": 129, "start": 10739, "IsComparative": "0", "id": "st_129"}, {"end": 10752, "text": ".", "rank": 130, "start": 10751, "IsComparative": "0", "id": "st_130"}, {"end": 10753, "text": ".", "rank": 131, "start": 10752, "IsComparative": "0", "id": "st_131"}, {"end": 10812, "text": ", aM>, where wn is the nth word and am the mth author name.", "rank": 132, "start": 10753, "IsComparative": "0", "id": "st_132"}, {"end": 10866, "text": "And we denote the collection of words as d(w) = <w1, .", "rank": 133, "start": 10812, "IsComparative": "0", "id": "st_133"}, {"end": 10867, "text": ".", "rank": 134, "start": 10866, "IsComparative": "0", "id": "st_134"}, {"end": 10925, "text": "., wN> and the collection of author names as d(a) = <a1, .", "rank": 135, "start": 10867, "IsComparative": "1", "id": "st_135"}, {"end": 10926, "text": ".", "rank": 136, "start": 10925, "IsComparative": "0", "id": "st_136"}, {"end": 10927, "text": ".", "rank": 137, "start": 10926, "IsComparative": "0", "id": "st_137"}, {"end": 10933, "text": ", aM>.", "rank": 138, "start": 10927, "IsComparative": "0", "id": "st_138"}]}, {"paragraph_info": {"end": 11256, "start": 10933, "text": "Definition 2: A sample of topic is a topic that is drawn from the set of topics T and corresponds to a word or an author name in a document.It is denoted by z(w) if corresponding to a word, or z(a) if corresponding to an author name.A sample of topic can be considered as a mapping from a word or an author name to a topic.", "rank": 33, "paragraph_comparative_number": 0, "entities": [], "id": "p_33"}, "sentences": [{"end": 11073, "text": "Definition 2: A sample of topic is a topic that is drawn from the set of topics T and corresponds to a word or an author name in a document.", "rank": 139, "start": 10933, "IsComparative": "0", "id": "st_139"}, {"end": 11166, "text": "It is denoted by z(w) if corresponding to a word, or z(a) if corresponding to an author name.", "rank": 140, "start": 11073, "IsComparative": "0", "id": "st_140"}, {"end": 11256, "text": "A sample of topic can be considered as a mapping from a word or an author name to a topic.", "rank": 141, "start": 11166, "IsComparative": "0", "id": "st_141"}]}, {"paragraph_info": {"end": 11276, "start": 11256, "text": "B.Generative process", "rank": 34, "paragraph_comparative_number": 1, "entities": [], "id": "p_34"}, "sentences": [{"end": 11258, "text": "B.", "rank": 142, "start": 11256, "IsComparative": "0", "id": "st_142"}, {"end": 11276, "text": "Generative process", "rank": 143, "start": 11258, "IsComparative": "1", "id": "st_143"}]}, {"paragraph_info": {"end": 11568, "start": 11276, "text": "Two probability distributions are involved in this model  the Dirichlet distribution and the multinomial distribution.(a).Dirichlet distribution In the LDA model <8> and the LDA-dual model, we obtain a mixture of topics, denoted by , by drawing a sample from a Dirichlet distribution p(|) = (", "rank": 35, "paragraph_comparative_number": 1, "entities": [], "id": "p_35"}, "sentences": [{"end": 11394, "text": "Two probability distributions are involved in this model  the Dirichlet distribution and the multinomial distribution.", "rank": 144, "start": 11276, "IsComparative": "0", "id": "st_144"}, {"end": 11398, "text": "(a).", "rank": 145, "start": 11394, "IsComparative": "1", "id": "st_145"}, {"end": 11568, "text": "Dirichlet distribution In the LDA model <8> and the LDA-dual model, we obtain a mixture of topics, denoted by , by drawing a sample from a Dirichlet distribution p(|) = (", "rank": 146, "start": 11398, "IsComparative": "0", "id": "st_146"}]}, {"paragraph_info": {"end": 11700, "start": 11568, "text": "Similarly,  is drawn from a Dirichlet distribution with hyperparameter .is drawn from a Dirichlet distribution with hyperparameter .", "rank": 36, "paragraph_comparative_number": 0, "entities": [], "id": "p_36"}, "sentences": [{"end": 11640, "text": "Similarly,  is drawn from a Dirichlet distribution with hyperparameter .", "rank": 147, "start": 11568, "IsComparative": "0", "id": "st_147"}, {"end": 11700, "text": "is drawn from a Dirichlet distribution with hyperparameter .", "rank": 148, "start": 11640, "IsComparative": "0", "id": "st_148"}]}, {"paragraph_info": {"end": 11728, "start": 11700, "text": "(b).Multinomial distribution", "rank": 37, "paragraph_comparative_number": 1, "entities": [], "id": "p_37"}, "sentences": [{"end": 11704, "text": "(b).", "rank": 149, "start": 11700, "IsComparative": "0", "id": "st_149"}, {"end": 11728, "text": "Multinomial distribution", "rank": 150, "start": 11704, "IsComparative": "1", "id": "st_150"}]}, {"paragraph_info": {"end": 12121, "start": 11728, "text": "In the LDA model <8><12>, given a mixture of topics , one topic is drawn from a probability distribution.This distribution is a special case of the multinomial distribution of n independent trials, with n = 1.A word is drawn from the multinomial distribution with the parameter .In addition, in the LDA-dual model, an author name is drawn from the multinomial distribution with the parameter .", "rank": 38, "paragraph_comparative_number": 1, "entities": [], "id": "p_38"}, "sentences": [{"end": 11833, "text": "In the LDA model <8><12>, given a mixture of topics , one topic is drawn from a probability distribution.", "rank": 151, "start": 11728, "IsComparative": "0", "id": "st_151"}, {"end": 11937, "text": "This distribution is a special case of the multinomial distribution of n independent trials, with n = 1.", "rank": 152, "start": 11833, "IsComparative": "1", "id": "st_152"}, {"end": 12007, "text": "A word is drawn from the multinomial distribution with the parameter .", "rank": 153, "start": 11937, "IsComparative": "0", "id": "st_153"}, {"end": 12121, "text": "In addition, in the LDA-dual model, an author name is drawn from the multinomial distribution with the parameter .", "rank": 154, "start": 12007, "IsComparative": "0", "id": "st_154"}]}, {"paragraph_info": {"end": 12320, "start": 12121, "text": "The Dirichlet distribution is conjugate prior of the multinomial distribution.This relationship helps integrate some intermediate latent variables like ,  and  in parameter estimation in Section III.", "rank": 39, "paragraph_comparative_number": 0, "entities": [], "id": "p_39"}, "sentences": [{"end": 12199, "text": "The Dirichlet distribution is conjugate prior of the multinomial distribution.", "rank": 155, "start": 12121, "IsComparative": "0", "id": "st_155"}, {"end": 12320, "text": "This relationship helps integrate some intermediate latent variables like ,  and  in parameter estimation in Section III.", "rank": 156, "start": 12199, "IsComparative": "0", "id": "st_156"}]}, {"paragraph_info": {"end": 12626, "start": 12320, "text": "Based on the Dirichlet distribution and multinomial distribution, this model involves several generative steps which are represented by nodes and arrows between nodes as shown in Figure 3.Steps 1 and 4 below appeared in <8>, and Steps 2 and 6 appeared in <12>.Steps 3, 5 and 7 are introduced in this model.", "rank": 40, "paragraph_comparative_number": 1, "entities": [], "id": "p_40"}, "sentences": [{"end": 12508, "text": "Based on the Dirichlet distribution and multinomial distribution, this model involves several generative steps which are represented by nodes and arrows between nodes as shown in Figure 3.", "rank": 157, "start": 12320, "IsComparative": "0", "id": "st_157"}, {"end": 12580, "text": "Steps 1 and 4 below appeared in <8>, and Steps 2 and 6 appeared in <12>.", "rank": 158, "start": 12508, "IsComparative": "1", "id": "st_158"}, {"end": 12626, "text": "Steps 3, 5 and 7 are introduced in this model.", "rank": 159, "start": 12580, "IsComparative": "0", "id": "st_159"}]}, {"paragraph_info": {"end": 12928, "start": 12626, "text": "For a document, choose a mixture of topics  from a Dirichlet distribution with hyperparameter vector .For a corpus of D documents, there are D such s and they construct a D  T matrix, denoted by .Each row of  is a  corresponding to a document.d denotes the dth row that corresponds to the dth document.", "rank": 41, "paragraph_comparative_number": 2, "entities": [], "id": "p_41"}, "sentences": [{"end": 12728, "text": "For a document, choose a mixture of topics  from a Dirichlet distribution with hyperparameter vector .", "rank": 160, "start": 12626, "IsComparative": "0", "id": "st_160"}, {"end": 12822, "text": "For a corpus of D documents, there are D such s and they construct a D  T matrix, denoted by .", "rank": 161, "start": 12728, "IsComparative": "1", "id": "st_161"}, {"end": 12869, "text": "Each row of  is a  corresponding to a document.", "rank": 162, "start": 12822, "IsComparative": "1", "id": "st_162"}, {"end": 12928, "text": "d denotes the dth row that corresponds to the dth document.", "rank": 163, "start": 12869, "IsComparative": "0", "id": "st_163"}]}, {"paragraph_info": {"end": 13217, "start": 12928, "text": "For a topic, choose  from a Dirichlet distribution over words with hyperparameter vector .Since we have T topics altogether, there are T such s and they construct a T W matrix, denoted by .Each row of  is a  corresponding to a topic.t denotes the tth row that corresponds to the tth topic.", "rank": 42, "paragraph_comparative_number": 1, "entities": [], "id": "p_42"}, "sentences": [{"end": 13018, "text": "For a topic, choose  from a Dirichlet distribution over words with hyperparameter vector .", "rank": 164, "start": 12928, "IsComparative": "0", "id": "st_164"}, {"end": 13117, "text": "Since we have T topics altogether, there are T such s and they construct a T W matrix, denoted by .", "rank": 165, "start": 13018, "IsComparative": "0", "id": "st_165"}, {"end": 13161, "text": "Each row of  is a  corresponding to a topic.", "rank": 166, "start": 13117, "IsComparative": "1", "id": "st_166"}, {"end": 13217, "text": "t denotes the tth row that corresponds to the tth topic.", "rank": 167, "start": 13161, "IsComparative": "0", "id": "st_167"}]}, {"paragraph_info": {"end": 13479, "start": 13217, "text": "For a topic, choose  from a Dirichlet distribution over author names with hyperparameter vector .There are T such s and they construct a T  A matrix, denoted by .Each row of  is a  corresponding to a topic.t denotes the tth row that corresponds to the tth topic.", "rank": 43, "paragraph_comparative_number": 1, "entities": [], "id": "p_43"}, "sentences": [{"end": 13314, "text": "For a topic, choose  from a Dirichlet distribution over author names with hyperparameter vector .", "rank": 168, "start": 13217, "IsComparative": "0", "id": "st_168"}, {"end": 13379, "text": "There are T such s and they construct a T  A matrix, denoted by .", "rank": 169, "start": 13314, "IsComparative": "0", "id": "st_169"}, {"end": 13423, "text": "Each row of  is a  corresponding to a topic.", "rank": 170, "start": 13379, "IsComparative": "1", "id": "st_170"}, {"end": 13479, "text": "t denotes the tth row that corresponds to the tth topic.", "rank": 171, "start": 13423, "IsComparative": "0", "id": "st_171"}]}, {"paragraph_info": {"end": 13609, "start": 13479, "text": "For a word in a document, choose a sample of topic z(w) given , a mixture of topic for the document.This is a multinomial process.", "rank": 44, "paragraph_comparative_number": 0, "entities": [], "id": "p_44"}, "sentences": [{"end": 13579, "text": "For a word in a document, choose a sample of topic z(w) given , a mixture of topic for the document.", "rank": 172, "start": 13479, "IsComparative": "0", "id": "st_172"}, {"end": 13609, "text": "This is a multinomial process.", "rank": 173, "start": 13579, "IsComparative": "0", "id": "st_173"}]}, {"paragraph_info": {"end": 13717, "start": 13609, "text": "For an author name in a document, choose a sample of topic z(a) given , a mixture of topic for the document.", "rank": 45, "paragraph_comparative_number": 0, "entities": [], "id": "p_45"}, "sentences": [{"end": 13717, "text": "For an author name in a document, choose a sample of topic z(a) given , a mixture of topic for the document.", "rank": 174, "start": 13609, "IsComparative": "0", "id": "st_174"}]}, {"paragraph_info": {"end": 13830, "start": 13717, "text": "Choose a word w, given a sample of topic z(w) and its corresponding , the distribution over words for topic z(w).", "rank": 46, "paragraph_comparative_number": 1, "entities": [], "id": "p_46"}, "sentences": [{"end": 13830, "text": "Choose a word w, given a sample of topic z(w) and its corresponding , the distribution over words for topic z(w).", "rank": 175, "start": 13717, "IsComparative": "1", "id": "st_175"}]}, {"paragraph_info": {"end": 13958, "start": 13830, "text": "Choose an author name a, given a sample of topic z(a) and its corresponding , the distribution over author names for topic z(a).", "rank": 47, "paragraph_comparative_number": 1, "entities": [], "id": "p_47"}, "sentences": [{"end": 13958, "text": "Choose an author name a, given a sample of topic z(a) and its corresponding , the distribution over author names for topic z(a).", "rank": 176, "start": 13830, "IsComparative": "1", "id": "st_176"}]}, {"paragraph_info": {"end": 14429, "start": 13958, "text": "Definition 3: A topic assignment z of a document d is the set of samples of topics for this document.We define z(w) = = z(w)  z(a).z is called the total topic assignment, and z(w) and z(a) are called partial topic assignments.Definition 4: A topic assignment Z is a set of samples of topic for a corpus D.We define Z = are topic assignments of the dth document in D. Z is called the total topic assignment of D. Z(w) and Z(a) are called the partial topic assignment of D.", "rank": 48, "paragraph_comparative_number": 1, "entities": [], "id": "p_48"}, "sentences": [{"end": 14059, "text": "Definition 3: A topic assignment z of a document d is the set of samples of topics for this document.", "rank": 177, "start": 13958, "IsComparative": "0", "id": "st_177"}, {"end": 14089, "text": "We define z(w) = = z(w)  z(a).", "rank": 178, "start": 14059, "IsComparative": "0", "id": "st_178"}, {"end": 14184, "text": "z is called the total topic assignment, and z(w) and z(a) are called partial topic assignments.", "rank": 179, "start": 14089, "IsComparative": "1", "id": "st_179"}, {"end": 14263, "text": "Definition 4: A topic assignment Z is a set of samples of topic for a corpus D.", "rank": 180, "start": 14184, "IsComparative": "0", "id": "st_180"}, {"end": 14429, "text": "We define Z = are topic assignments of the dth document in D. Z is called the total topic assignment of D. Z(w) and Z(a) are called the partial topic assignment of D.", "rank": 181, "start": 14263, "IsComparative": "0", "id": "st_181"}]}, {"paragraph_info": {"end": 14636, "start": 14429, "text": "A topic assignment can be understood as a function that maps from a collection of words and author names to the set of topics, while the sample of topic is a mapping from a word or an author name to a topic.", "rank": 49, "paragraph_comparative_number": 1, "entities": [], "id": "p_49"}, "sentences": [{"end": 14636, "text": "A topic assignment can be understood as a function that maps from a collection of words and author names to the set of topics, while the sample of topic is a mapping from a word or an author name to a topic.", "rank": 182, "start": 14429, "IsComparative": "1", "id": "st_182"}]}, {"paragraph_info": {"end": 14661, "start": 14636, "text": "C.An illustrative example", "rank": 50, "paragraph_comparative_number": 0, "entities": [], "id": "p_50"}, "sentences": [{"end": 14638, "text": "C.", "rank": 183, "start": 14636, "IsComparative": "0", "id": "st_183"}, {"end": 14661, "text": "An illustrative example", "rank": 184, "start": 14638, "IsComparative": "0", "id": "st_184"}]}, {"paragraph_info": {"end": 14799, "start": 14661, "text": "Here is an example for explanation.This is a case of the name mixing problem.Two entities share two names  George Bush and George W. Bush.", "rank": 51, "paragraph_comparative_number": 1, "entities": [], "id": "p_51"}, "sentences": [{"end": 14696, "text": "Here is an example for explanation.", "rank": 185, "start": 14661, "IsComparative": "0", "id": "st_185"}, {"end": 14738, "text": "This is a case of the name mixing problem.", "rank": 186, "start": 14696, "IsComparative": "0", "id": "st_186"}, {"end": 14799, "text": "Two entities share two names  George Bush and George W. Bush.", "rank": 187, "start": 14738, "IsComparative": "1", "id": "st_187"}]}, {"paragraph_info": {"end": 15329, "start": 14799, "text": "Example 1: A tiny corpus includes only two documents.Document #1 includes three citations under George Bush: 1.1 George Bush, and D. Cheney: The Iraq war.1.2 George Bush, and C. Powell: The Gulf war.1.3 George Bush: The Gulf report.Document #2 includes one citation under George W. Bush: 2.1 George W. Bush, and D. Cheney: The Iraq report.The word The is treated as a stop word and eliminated.The number of words in the corpus N = 8.The number of author names in the corpus M = 7.The counts are based on the number of occurrences.", "rank": 52, "paragraph_comparative_number": 2, "entities": [], "id": "p_52"}, "sentences": [{"end": 14852, "text": "Example 1: A tiny corpus includes only two documents.", "rank": 188, "start": 14799, "IsComparative": "1", "id": "st_188"}, {"end": 14953, "text": "Document #1 includes three citations under George Bush: 1.1 George Bush, and D. Cheney: The Iraq war.", "rank": 189, "start": 14852, "IsComparative": "1", "id": "st_189"}, {"end": 14998, "text": "1.2 George Bush, and C. Powell: The Gulf war.", "rank": 190, "start": 14953, "IsComparative": "0", "id": "st_190"}, {"end": 15031, "text": "1.3 George Bush: The Gulf report.", "rank": 191, "start": 14998, "IsComparative": "0", "id": "st_191"}, {"end": 15138, "text": "Document #2 includes one citation under George W. Bush: 2.1 George W. Bush, and D. Cheney: The Iraq report.", "rank": 192, "start": 15031, "IsComparative": "0", "id": "st_192"}, {"end": 15192, "text": "The word The is treated as a stop word and eliminated.", "rank": 193, "start": 15138, "IsComparative": "0", "id": "st_193"}, {"end": 15232, "text": "The number of words in the corpus N = 8.", "rank": 194, "start": 15192, "IsComparative": "0", "id": "st_194"}, {"end": 15279, "text": "The number of author names in the corpus M = 7.", "rank": 195, "start": 15232, "IsComparative": "0", "id": "st_195"}, {"end": 15329, "text": "The counts are based on the number of occurrences.", "rank": 196, "start": 15279, "IsComparative": "0", "id": "st_196"}]}, {"paragraph_info": {"end": 15592, "start": 15329, "text": "The vocabulary W = <Gulf, Iraq, report, war> with size W = 4.The author name list A = <George Bush, George W. Bush, D. Cheney, C. Powell> with size A = 4.Let the set of topics T = <1, 2>, where we use its order number to represent a topic.T = 2 is the size of T .", "rank": 53, "paragraph_comparative_number": 2, "entities": [], "id": "p_53"}, "sentences": [{"end": 15390, "text": "The vocabulary W = <Gulf, Iraq, report, war> with size W = 4.", "rank": 197, "start": 15329, "IsComparative": "0", "id": "st_197"}, {"end": 15483, "text": "The author name list A = <George Bush, George W. Bush, D. Cheney, C. Powell> with size A = 4.", "rank": 198, "start": 15390, "IsComparative": "0", "id": "st_198"}, {"end": 15568, "text": "Let the set of topics T = <1, 2>, where we use its order number to represent a topic.", "rank": 199, "start": 15483, "IsComparative": "1", "id": "st_199"}, {"end": 15592, "text": "T = 2 is the size of T .", "rank": 200, "start": 15568, "IsComparative": "1", "id": "st_200"}]}, {"paragraph_info": {"end": 15621, "start": 15592, "text": "D.The probability of a corpus", "rank": 54, "paragraph_comparative_number": 0, "entities": [], "id": "p_54"}, "sentences": [{"end": 15594, "text": "D.", "rank": 201, "start": 15592, "IsComparative": "0", "id": "st_201"}, {"end": 15621, "text": "The probability of a corpus", "rank": 202, "start": 15594, "IsComparative": "0", "id": "st_202"}]}, {"paragraph_info": {"end": 15840, "start": 15621, "text": "We intend to derive the conditional probability of corpus D given ,  and  to see if we can estimate parameters by EM algorithms.We can obtain the probability of a document d, by summing over z and integrating over , , :", "rank": 55, "paragraph_comparative_number": 0, "entities": [], "id": "p_55"}, "sentences": [{"end": 15749, "text": "We intend to derive the conditional probability of corpus D given ,  and  to see if we can estimate parameters by EM algorithms.", "rank": 203, "start": 15621, "IsComparative": "0", "id": "st_203"}, {"end": 15840, "text": "We can obtain the probability of a document d, by summing over z and integrating over , , :", "rank": 204, "start": 15749, "IsComparative": "0", "id": "st_204"}]}, {"paragraph_info": {"end": 16227, "start": 15840, "text": "The integrals in Formula (1) are intractable <13> <8>, due to the coupling of z(w) and , and that of z(a) and .So It is quite difficult to estimate parameters ,  and  by EM algorithms.Fortunately, some approximate inference algorithms could be used in this case, such as variational approximation <8><14>, expectation propagation <15> and Monte Carlo simulation <13><16><17><18><19><20>.", "rank": 56, "paragraph_comparative_number": 2, "entities": [], "id": "p_56"}, "sentences": [{"end": 15951, "text": "The integrals in Formula (1) are intractable <13> <8>, due to the coupling of z(w) and , and that of z(a) and .", "rank": 205, "start": 15840, "IsComparative": "1", "id": "st_205"}, {"end": 16024, "text": "So It is quite difficult to estimate parameters ,  and  by EM algorithms.", "rank": 206, "start": 15951, "IsComparative": "1", "id": "st_206"}, {"end": 16227, "text": "Fortunately, some approximate inference algorithms could be used in this case, such as variational approximation <8><14>, expectation propagation <15> and Monte Carlo simulation <13><16><17><18><19><20>.", "rank": 207, "start": 16024, "IsComparative": "0", "id": "st_207"}]}, {"paragraph_info": {"end": 16245, "start": 16227, "text": "III.GIBBS SAMPLING", "rank": 57, "paragraph_comparative_number": 0, "entities": [], "id": "p_57"}, "sentences": [{"end": 16231, "text": "III.", "rank": 208, "start": 16227, "IsComparative": "0", "id": "st_208"}, {"end": 16245, "text": "GIBBS SAMPLING", "rank": 209, "start": 16231, "IsComparative": "0", "id": "st_209"}]}, {"paragraph_info": {"end": 17099, "start": 16245, "text": "In this paper, we use Gibbs sampling <13><18><21><20>, a Monte Carlo simulation algorithm, to estimate parameters of the LDA-dual model.Gibbs sampling simulates a multivariate probabilistic distribution by only considering univariate conditional distributions.The key idea is to sample one random variable when other random variables are assigned fixed values.And each random variable is sampled in this way alternately.Such univariate conditional distributions are far easier and faster to simulate than overall distribution.We extended the work in <7><12>.<7><12> used Gibbs Sampling for the LDA model.In their work, Dirichlet priors like  are single values, instead of vectors.Also, Dirichlet priors are fixed and excluded from sampling process.Furthermore, their sampling process involves only one kind of information  words <12> or author names <7>.", "rank": 58, "paragraph_comparative_number": 4, "entities": [], "id": "p_58"}, "sentences": [{"end": 16381, "text": "In this paper, we use Gibbs sampling <13><18><21><20>, a Monte Carlo simulation algorithm, to estimate parameters of the LDA-dual model.", "rank": 210, "start": 16245, "IsComparative": "0", "id": "st_210"}, {"end": 16505, "text": "Gibbs sampling simulates a multivariate probabilistic distribution by only considering univariate conditional distributions.", "rank": 211, "start": 16381, "IsComparative": "0", "id": "st_211"}, {"end": 16605, "text": "The key idea is to sample one random variable when other random variables are assigned fixed values.", "rank": 212, "start": 16505, "IsComparative": "1", "id": "st_212"}, {"end": 16665, "text": "And each random variable is sampled in this way alternately.", "rank": 213, "start": 16605, "IsComparative": "0", "id": "st_213"}, {"end": 16771, "text": "Such univariate conditional distributions are far easier and faster to simulate than overall distribution.", "rank": 214, "start": 16665, "IsComparative": "0", "id": "st_214"}, {"end": 16803, "text": "We extended the work in <7><12>.", "rank": 215, "start": 16771, "IsComparative": "1", "id": "st_215"}, {"end": 16849, "text": "<7><12> used Gibbs Sampling for the LDA model.", "rank": 216, "start": 16803, "IsComparative": "0", "id": "st_216"}, {"end": 16925, "text": "In their work, Dirichlet priors like  are single values, instead of vectors.", "rank": 217, "start": 16849, "IsComparative": "1", "id": "st_217"}, {"end": 16993, "text": "Also, Dirichlet priors are fixed and excluded from sampling process.", "rank": 218, "start": 16925, "IsComparative": "0", "id": "st_218"}, {"end": 17099, "text": "Furthermore, their sampling process involves only one kind of information  words <12> or author names <7>.", "rank": 219, "start": 16993, "IsComparative": "1", "id": "st_219"}]}, {"paragraph_info": {"end": 17425, "start": 17099, "text": "Instead, in our sampling process, two types of data, both words and author names, are considered in our algorithm.And Dirichlet priors ,  and  are vectors and they are included in the sampling process as well as samples of topic.The method of Metropolis-Hasting within Gibbs <17> is employed to sample Dirichlet prior vectors.", "rank": 59, "paragraph_comparative_number": 2, "entities": [], "id": "p_59"}, "sentences": [{"end": 17213, "text": "Instead, in our sampling process, two types of data, both words and author names, are considered in our algorithm.", "rank": 220, "start": 17099, "IsComparative": "1", "id": "st_220"}, {"end": 17328, "text": "And Dirichlet priors ,  and  are vectors and they are included in the sampling process as well as samples of topic.", "rank": 221, "start": 17213, "IsComparative": "0", "id": "st_221"}, {"end": 17425, "text": "The method of Metropolis-Hasting within Gibbs <17> is employed to sample Dirichlet prior vectors.", "rank": 222, "start": 17328, "IsComparative": "1", "id": "st_222"}]}, {"paragraph_info": {"end": 17449, "start": 17425, "text": "A.Posterior distribution", "rank": 60, "paragraph_comparative_number": 2, "entities": [], "id": "p_60"}, "sentences": [{"end": 17427, "text": "A.", "rank": 223, "start": 17425, "IsComparative": "1", "id": "st_223"}, {"end": 17449, "text": "Posterior distribution", "rank": 224, "start": 17427, "IsComparative": "1", "id": "st_224"}]}, {"paragraph_info": {"end": 17988, "start": 17449, "text": "In order to estimate model parameters, we simulate the posterior distribution of model parameters given a corpus.We do not need to include all model parameters in the distribution, some parameters can be eliminated.Specifically,  can be integrated out, because the Dirichlet distribution of  is conjugate prior of the multinomial distribution of Z.For the similar reason,  and  can be integrated out.Then we just need the posterior distribution of , ,  and topic assignment Z, given a corpus D.That is the critical part for Gibbs sampling.", "rank": 61, "paragraph_comparative_number": 1, "entities": [], "id": "p_61"}, "sentences": [{"end": 17562, "text": "In order to estimate model parameters, we simulate the posterior distribution of model parameters given a corpus.", "rank": 225, "start": 17449, "IsComparative": "1", "id": "st_225"}, {"end": 17664, "text": "We do not need to include all model parameters in the distribution, some parameters can be eliminated.", "rank": 226, "start": 17562, "IsComparative": "0", "id": "st_226"}, {"end": 17797, "text": "Specifically,  can be integrated out, because the Dirichlet distribution of  is conjugate prior of the multinomial distribution of Z.", "rank": 227, "start": 17664, "IsComparative": "0", "id": "st_227"}, {"end": 17849, "text": "For the similar reason,  and  can be integrated out.", "rank": 228, "start": 17797, "IsComparative": "0", "id": "st_228"}, {"end": 17943, "text": "Then we just need the posterior distribution of , ,  and topic assignment Z, given a corpus D.", "rank": 229, "start": 17849, "IsComparative": "0", "id": "st_229"}, {"end": 17988, "text": "That is the critical part for Gibbs sampling.", "rank": 230, "start": 17943, "IsComparative": "0", "id": "st_230"}]}, {"paragraph_info": {"end": 18526, "start": 17988, "text": "According to generative processes of the LDAdual model in Figure 3, considering the conditional independence assumption, we have the joint probability for a document: p(z, d, , , ) = p() p() p() p(z|) p(d(w)|z(w), ) p(d(a) |z(a), ).In a similar way, we get the joint probability for a corpus: p(Z,D, , , ) = p()p()p()p(Z|)p(D(w)|Z(w), )p(D(a)|Z(a), ).And then we obtain the posterior distribution for Gibbs Sampling, the joint probability of Z, ,  and  given a corpus: p(Z, , , |D) = p() p() p() p(Z|) p(D(w)|Z(w), ) p(D(a)|Z(a), )/ p(D).", "rank": 62, "paragraph_comparative_number": 0, "entities": [], "id": "p_62"}, "sentences": [{"end": 18220, "text": "According to generative processes of the LDAdual model in Figure 3, considering the conditional independence assumption, we have the joint probability for a document: p(z, d, , , ) = p() p() p() p(z|) p(d(w)|z(w), ) p(d(a) |z(a), ).", "rank": 231, "start": 17988, "IsComparative": "0", "id": "st_231"}, {"end": 18339, "text": "In a similar way, we get the joint probability for a corpus: p(Z,D, , , ) = p()p()p()p(Z|)p(D(w)|Z(w), )p(D(a)|Z(a), ).", "rank": 232, "start": 18220, "IsComparative": "0", "id": "st_232"}, {"end": 18526, "text": "And then we obtain the posterior distribution for Gibbs Sampling, the joint probability of Z, ,  and  given a corpus: p(Z, , , |D) = p() p() p() p(Z|) p(D(w)|Z(w), ) p(D(a)|Z(a), )/ p(D).", "rank": 233, "start": 18339, "IsComparative": "0", "id": "st_233"}]}, {"paragraph_info": {"end": 18665, "start": 18526, "text": "Here p(D) can be considered as a normalizing constant.In the following propositions, we determine p(Z|), p(D(w)|Z(w), ) and p(D(a)|Z(a), ).", "rank": 63, "paragraph_comparative_number": 0, "entities": [], "id": "p_63"}, "sentences": [{"end": 18580, "text": "Here p(D) can be considered as a normalizing constant.", "rank": 234, "start": 18526, "IsComparative": "0", "id": "st_234"}, {"end": 18665, "text": "In the following propositions, we determine p(Z|), p(D(w)|Z(w), ) and p(D(a)|Z(a), ).", "rank": 235, "start": 18580, "IsComparative": "0", "id": "st_235"}]}, {"paragraph_info": {"end": 18872, "start": 18665, "text": "For convenience, we use an order number to refer to a topic, a document, a word in the vocabulary, or an author name in the name list thereafter.For example, topic t is the tth topic in the set of topics T .", "rank": 64, "paragraph_comparative_number": 1, "entities": [], "id": "p_64"}, "sentences": [{"end": 18810, "text": "For convenience, we use an order number to refer to a topic, a document, a word in the vocabulary, or an author name in the name list thereafter.", "rank": 236, "start": 18665, "IsComparative": "0", "id": "st_236"}, {"end": 18872, "text": "For example, topic t is the tth topic in the set of topics T .", "rank": 237, "start": 18810, "IsComparative": "1", "id": "st_237"}]}, {"paragraph_info": {"end": 19051, "start": 18872, "text": "Proposition 1: Suppose D is a corpus of D documents, Z is a total topic assignment of D, and  is a Dirichlet prior vector in the LDA-dual model.Then the probability of Z given  is", "rank": 65, "paragraph_comparative_number": 1, "entities": [], "id": "p_65"}, "sentences": [{"end": 19016, "text": "Proposition 1: Suppose D is a corpus of D documents, Z is a total topic assignment of D, and  is a Dirichlet prior vector in the LDA-dual model.", "rank": 238, "start": 18872, "IsComparative": "1", "id": "st_238"}, {"end": 19051, "text": "Then the probability of Z given  is", "rank": 239, "start": 19016, "IsComparative": "0", "id": "st_239"}]}, {"paragraph_info": {"end": 19660, "start": 19051, "text": "where t is the tth component of vector , T is the number of topics, Nd is the number of words in document d, Md is the number of author names in document d, ndt is the number of times topic t is assigned to words in document d according to topic assignment Z, and mdt is the number of times topic t is assigned to author names in document d according to Z. Proposition 2: Suppose D is a corpus, D(w) is the collection of words in D, Z(w) is a partial topic assignment of D for words, and  is a Dirichlet prior vector in the LDA-dual model.Then the probability of D(w), the words part of D, given Z(w) and , is", "rank": 66, "paragraph_comparative_number": 1, "entities": [], "id": "p_66"}, "sentences": [{"end": 19590, "text": "where t is the tth component of vector , T is the number of topics, Nd is the number of words in document d, Md is the number of author names in document d, ndt is the number of times topic t is assigned to words in document d according to topic assignment Z, and mdt is the number of times topic t is assigned to author names in document d according to Z. Proposition 2: Suppose D is a corpus, D(w) is the collection of words in D, Z(w) is a partial topic assignment of D for words, and  is a Dirichlet prior vector in the LDA-dual model.", "rank": 240, "start": 19051, "IsComparative": "1", "id": "st_240"}, {"end": 19660, "text": "Then the probability of D(w), the words part of D, given Z(w) and , is", "rank": 241, "start": 19590, "IsComparative": "0", "id": "st_241"}]}, {"paragraph_info": {"end": 19953, "start": 19660, "text": "where w is the wth component of vector , T is the number of topics,W is the size of the vocabularyW, ntw is the number of times topic t is assigned to word w in the vocabulary according to the topic assignment Z(w), and nt is the number of times topic t is assigned to words according to Z(w).", "rank": 67, "paragraph_comparative_number": 0, "entities": [], "id": "p_67"}, "sentences": [{"end": 19953, "text": "where w is the wth component of vector , T is the number of topics,W is the size of the vocabularyW, ntw is the number of times topic t is assigned to word w in the vocabulary according to the topic assignment Z(w), and nt is the number of times topic t is assigned to words according to Z(w).", "rank": 242, "start": 19660, "IsComparative": "0", "id": "st_242"}]}, {"paragraph_info": {"end": 20225, "start": 19953, "text": "Proposition 3: Suppose D is a corpus, D(a) is the collection of author names in D, Z(a) is a partial topic assignment of D for author names, and  is a Dirichlet prior vector in the LDAdual model.Then the probability of D(a), the author names part of D, given Z(a) and , is", "rank": 68, "paragraph_comparative_number": 2, "entities": [], "id": "p_68"}, "sentences": [{"end": 20148, "text": "Proposition 3: Suppose D is a corpus, D(a) is the collection of author names in D, Z(a) is a partial topic assignment of D for author names, and  is a Dirichlet prior vector in the LDAdual model.", "rank": 243, "start": 19953, "IsComparative": "1", "id": "st_243"}, {"end": 20225, "text": "Then the probability of D(a), the author names part of D, given Z(a) and , is", "rank": 244, "start": 20148, "IsComparative": "1", "id": "st_244"}]}, {"paragraph_info": {"end": 20547, "start": 20225, "text": "where a is the ath component of vector , T is the number of topics, A is the size of the author name list A, mta is the number of times topic t is assigned to author name a in the author name list, according to the topic assignment Z(a), and mt is the number of times topic t is assigned to author names according to Z(a).", "rank": 69, "paragraph_comparative_number": 1, "entities": [], "id": "p_69"}, "sentences": [{"end": 20547, "text": "where a is the ath component of vector , T is the number of topics, A is the size of the author name list A, mta is the number of times topic t is assigned to author name a in the author name list, according to the topic assignment Z(a), and mt is the number of times topic t is assigned to author names according to Z(a).", "rank": 245, "start": 20225, "IsComparative": "1", "id": "st_245"}]}, {"paragraph_info": {"end": 20813, "start": 20547, "text": "The proof of Proposition 1 is in Appendix.We do not include proofs of Propositions 2 and 3 due to space limit.In Formulas (4), (5) and (6), D, T , W, A, Nd and Md are constants.ndt and mdt are counts in Z. ntw and nt are counts in Z(w).mta and mt are counts in Z(a).", "rank": 70, "paragraph_comparative_number": 0, "entities": [], "id": "p_70"}, "sentences": [{"end": 20589, "text": "The proof of Proposition 1 is in Appendix.", "rank": 246, "start": 20547, "IsComparative": "0", "id": "st_246"}, {"end": 20657, "text": "We do not include proofs of Propositions 2 and 3 due to space limit.", "rank": 247, "start": 20589, "IsComparative": "0", "id": "st_247"}, {"end": 20724, "text": "In Formulas (4), (5) and (6), D, T , W, A, Nd and Md are constants.", "rank": 248, "start": 20657, "IsComparative": "0", "id": "st_248"}, {"end": 20783, "text": "ndt and mdt are counts in Z. ntw and nt are counts in Z(w).", "rank": 249, "start": 20724, "IsComparative": "0", "id": "st_249"}, {"end": 20813, "text": "mta and mt are counts in Z(a).", "rank": 250, "start": 20783, "IsComparative": "0", "id": "st_250"}]}, {"paragraph_info": {"end": 20986, "start": 20813, "text": "After putting Formulas (4), (5) and (6) into Formula (3), Formula (3) can be used to derive univariate conditional distributions that can be directly used in Gibbs sampling.", "rank": 71, "paragraph_comparative_number": 1, "entities": [], "id": "p_71"}, "sentences": [{"end": 20986, "text": "After putting Formulas (4), (5) and (6) into Formula (3), Formula (3) can be used to derive univariate conditional distributions that can be directly used in Gibbs sampling.", "rank": 251, "start": 20813, "IsComparative": "1", "id": "st_251"}]}, {"paragraph_info": {"end": 21025, "start": 20986, "text": "B. Univariate conditional distributions", "rank": 72, "paragraph_comparative_number": 0, "entities": [], "id": "p_72"}, "sentences": [{"end": 21025, "text": "B. Univariate conditional distributions", "rank": 252, "start": 20986, "IsComparative": "0", "id": "st_252"}]}, {"paragraph_info": {"end": 21184, "start": 21025, "text": "1) Conditional distribution of a sample of topic: Now we find out the conditional distribution of a sample of topic, for a word or an author name, over topics.", "rank": 73, "paragraph_comparative_number": 1, "entities": [], "id": "p_73"}, "sentences": [{"end": 21184, "text": "1) Conditional distribution of a sample of topic: Now we find out the conditional distribution of a sample of topic, for a word or an author name, over topics.", "rank": 253, "start": 21025, "IsComparative": "1", "id": "st_253"}]}, {"paragraph_info": {"end": 21562, "start": 21184, "text": "Formula (7) agrees with our intuition.On its right side, the fraction means word is weight in topic t, and n(i) dt + mdt + t is proportional to the topic ts weight in document d. Similarly, based on Formulas (3), (4) and (6), for author name j in document d of corpus D, to draw a topic t in the set of topics T , we have the conditional distribution of the sample of topic z(a)", "rank": 74, "paragraph_comparative_number": 1, "entities": [], "id": "p_74"}, "sentences": [{"end": 21222, "text": "Formula (7) agrees with our intuition.", "rank": 254, "start": 21184, "IsComparative": "1", "id": "st_254"}, {"end": 21562, "text": "On its right side, the fraction means word is weight in topic t, and n(i) dt + mdt + t is proportional to the topic ts weight in document d. Similarly, based on Formulas (3), (4) and (6), for author name j in document d of corpus D, to draw a topic t in the set of topics T , we have the conditional distribution of the sample of topic z(a)", "rank": 255, "start": 21222, "IsComparative": "0", "id": "st_255"}]}, {"paragraph_info": {"end": 21720, "start": 21562, "text": "The sampling method for a sample of topic is straightforward because it is trivial to draw a topic from the conditional distributions in Formulas (7) and (8).", "rank": 75, "paragraph_comparative_number": 0, "entities": [], "id": "p_75"}, "sentences": [{"end": 21720, "text": "The sampling method for a sample of topic is straightforward because it is trivial to draw a topic from the conditional distributions in Formulas (7) and (8).", "rank": 256, "start": 21562, "IsComparative": "0", "id": "st_256"}]}, {"paragraph_info": {"end": 21979, "start": 21720, "text": "2) Conditional distribution of a component of Dirichlet prior vectors: We also include Dirichlet prior vectors ,  and  into our sampling process.Each time we sample one component of a Dirichlet prior vector, assuming other components and parameters are fixed.", "rank": 76, "paragraph_comparative_number": 2, "entities": [], "id": "p_76"}, "sentences": [{"end": 21865, "text": "2) Conditional distribution of a component of Dirichlet prior vectors: We also include Dirichlet prior vectors ,  and  into our sampling process.", "rank": 257, "start": 21720, "IsComparative": "1", "id": "st_257"}, {"end": 21979, "text": "Each time we sample one component of a Dirichlet prior vector, assuming other components and parameters are fixed.", "rank": 258, "start": 21865, "IsComparative": "1", "id": "st_258"}]}, {"paragraph_info": {"end": 22389, "start": 21979, "text": "a) For a component of : We consider the prior distribution of t, the tth component of .<22> claims that lognormal can be used when mean values are low, variances are large, and values cannot be negative.For this reason, the prior distribution p(t) is assumed to be a log-normal distribution over (0,+).Then ln t is normally distributed and we assume the mean as 0 and the variance as 2.Then we have p(t = x)  1", "rank": 77, "paragraph_comparative_number": 1, "entities": [], "id": "p_77"}, "sentences": [{"end": 22066, "text": "a) For a component of : We consider the prior distribution of t, the tth component of .", "rank": 259, "start": 21979, "IsComparative": "1", "id": "st_259"}, {"end": 22182, "text": "<22> claims that lognormal can be used when mean values are low, variances are large, and values cannot be negative.", "rank": 260, "start": 22066, "IsComparative": "0", "id": "st_260"}, {"end": 22281, "text": "For this reason, the prior distribution p(t) is assumed to be a log-normal distribution over (0,+).", "rank": 261, "start": 22182, "IsComparative": "0", "id": "st_261"}, {"end": 22365, "text": "Then ln t is normally distributed and we assume the mean as 0 and the variance as 2.", "rank": 262, "start": 22281, "IsComparative": "0", "id": "st_262"}, {"end": 22389, "text": "Then we have p(t = x)  1", "rank": 263, "start": 22365, "IsComparative": "0", "id": "st_263"}]}, {"paragraph_info": {"end": 22534, "start": 22389, "text": "where x > 0 is a real number, (t) is the remaining vector after removing the tth component t from , and (t) i is the ith component of vector (t).", "rank": 78, "paragraph_comparative_number": 1, "entities": [], "id": "p_78"}, "sentences": [{"end": 22534, "text": "where x > 0 is a real number, (t) is the remaining vector after removing the tth component t from , and (t) i is the ith component of vector (t).", "rank": 264, "start": 22389, "IsComparative": "1", "id": "st_264"}]}, {"paragraph_info": {"end": 22759, "start": 22534, "text": "b) For a component of : Similarly, for w, the wth component of , assuming the prior distribution p(w) is the same log-normal distribution as p(t), based on Formulas (3) and (5), we have the conditional probability of w, s wth", "rank": 79, "paragraph_comparative_number": 0, "entities": [], "id": "p_79"}, "sentences": [{"end": 22759, "text": "b) For a component of : Similarly, for w, the wth component of , assuming the prior distribution p(w) is the same log-normal distribution as p(t), based on Formulas (3) and (5), we have the conditional probability of w, s wth", "rank": 265, "start": 22534, "IsComparative": "0", "id": "st_265"}]}, {"paragraph_info": {"end": 23136, "start": 22759, "text": "From the formula above, we have interesting observations about the Dirichlet prior vector .Note that each component of , w, corresponds to a word w in the vocabulary W.We found that a word w appears more frequently and more evenly over topics, it has larger chance to be associated with a higher w.For example, in DBLP, the word algorithm has higher w than the word clustering.", "rank": 80, "paragraph_comparative_number": 0, "entities": [], "id": "p_80"}, "sentences": [{"end": 22850, "text": "From the formula above, we have interesting observations about the Dirichlet prior vector .", "rank": 266, "start": 22759, "IsComparative": "0", "id": "st_266"}, {"end": 22927, "text": "Note that each component of , w, corresponds to a word w in the vocabulary W.", "rank": 267, "start": 22850, "IsComparative": "0", "id": "st_267"}, {"end": 23057, "text": "We found that a word w appears more frequently and more evenly over topics, it has larger chance to be associated with a higher w.", "rank": 268, "start": 22927, "IsComparative": "0", "id": "st_268"}, {"end": 23136, "text": "For example, in DBLP, the word algorithm has higher w than the word clustering.", "rank": 269, "start": 23057, "IsComparative": "0", "id": "st_269"}]}, {"paragraph_info": {"end": 23279, "start": 23136, "text": "c) For a component of : For a, the ath component of , based on Formulas (3) and (6), we have the conditional probability of a, s ath component:", "rank": 81, "paragraph_comparative_number": 0, "entities": [], "id": "p_81"}, "sentences": [{"end": 23279, "text": "c) For a component of : For a, the ath component of , based on Formulas (3) and (6), we have the conditional probability of a, s ath component:", "rank": 270, "start": 23136, "IsComparative": "0", "id": "st_270"}]}, {"paragraph_info": {"end": 23546, "start": 23279, "text": "The formula above indicates that if an author name a appears more frequently and more evenly over topics, it has larger change to be associated with a higher a.In DBLP, if an author name has more publications and the publications cover more topics, it has a higher a.", "rank": 82, "paragraph_comparative_number": 1, "entities": [], "id": "p_82"}, "sentences": [{"end": 23439, "text": "The formula above indicates that if an author name a appears more frequently and more evenly over topics, it has larger change to be associated with a higher a.", "rank": 271, "start": 23279, "IsComparative": "1", "id": "st_271"}, {"end": 23546, "text": "In DBLP, if an author name has more publications and the publications cover more topics, it has a higher a.", "rank": 272, "start": 23439, "IsComparative": "0", "id": "st_272"}]}, {"paragraph_info": {"end": 23589, "start": 23546, "text": "C.The method to sample components of ,  and", "rank": 83, "paragraph_comparative_number": 0, "entities": [], "id": "p_83"}, "sentences": [{"end": 23548, "text": "C.", "rank": 273, "start": 23546, "IsComparative": "0", "id": "st_273"}, {"end": 23589, "text": "The method to sample components of ,  and", "rank": 274, "start": 23548, "IsComparative": "0", "id": "st_274"}]}, {"paragraph_info": {"end": 24175, "start": 23589, "text": "The conditional distributions in Formulas (9), (10) and (11) are continuous probability density functions.Therefore, we employ the method of Metropolis-Hastings within Gibbs <17>, <19>.We use log-normal distribution as the proposal density the Metropolis-Hastings algorithm, where P(x) is the right part of any one of Formula (9), (10) and (11).If a > 1, the tentative new value is accepted; otherwise, it is accepted by probability a.The proposal densitys parameter  is tuned to guarantee that the acceptance rate is around 0.5.This value is recommended for the random walk chain <17>.", "rank": 84, "paragraph_comparative_number": 2, "entities": [], "id": "p_84"}, "sentences": [{"end": 23695, "text": "The conditional distributions in Formulas (9), (10) and (11) are continuous probability density functions.", "rank": 275, "start": 23589, "IsComparative": "0", "id": "st_275"}, {"end": 23774, "text": "Therefore, we employ the method of Metropolis-Hastings within Gibbs <17>, <19>.", "rank": 276, "start": 23695, "IsComparative": "1", "id": "st_276"}, {"end": 23934, "text": "We use log-normal distribution as the proposal density the Metropolis-Hastings algorithm, where P(x) is the right part of any one of Formula (9), (10) and (11).", "rank": 277, "start": 23774, "IsComparative": "1", "id": "st_277"}, {"end": 24024, "text": "If a > 1, the tentative new value is accepted; otherwise, it is accepted by probability a.", "rank": 278, "start": 23934, "IsComparative": "0", "id": "st_278"}, {"end": 24118, "text": "The proposal densitys parameter  is tuned to guarantee that the acceptance rate is around 0.5.", "rank": 279, "start": 24024, "IsComparative": "0", "id": "st_279"}, {"end": 24175, "text": "This value is recommended for the random walk chain <17>.", "rank": 280, "start": 24118, "IsComparative": "0", "id": "st_280"}]}, {"paragraph_info": {"end": 24208, "start": 24175, "text": "D.Model parameters after sampling", "rank": 85, "paragraph_comparative_number": 1, "entities": [], "id": "p_85"}, "sentences": [{"end": 24177, "text": "D.", "rank": 281, "start": 24175, "IsComparative": "0", "id": "st_281"}, {"end": 24208, "text": "Model parameters after sampling", "rank": 282, "start": 24177, "IsComparative": "1", "id": "st_282"}]}, {"paragraph_info": {"end": 24315, "start": 24208, "text": "After Gibbs sampling is finished, we get the model parameters: , ,  and Z.And we can estimate , , and p(t).", "rank": 86, "paragraph_comparative_number": 0, "entities": [], "id": "p_86"}, "sentences": [{"end": 24282, "text": "After Gibbs sampling is finished, we get the model parameters: , ,  and Z.", "rank": 283, "start": 24208, "IsComparative": "0", "id": "st_283"}, {"end": 24315, "text": "And we can estimate , , and p(t).", "rank": 284, "start": 24282, "IsComparative": "0", "id": "st_284"}]}, {"paragraph_info": {"end": 24484, "start": 24315, "text": "Here ntw and nt come from Z. Formula (12) is an extension to the estimation of  in <12> that is for single-value .The tth row and ath column of  is ta = p(a|t) = mta + a", "rank": 87, "paragraph_comparative_number": 1, "entities": [], "id": "p_87"}, "sentences": [{"end": 24429, "text": "Here ntw and nt come from Z. Formula (12) is an extension to the estimation of  in <12> that is for single-value .", "rank": 285, "start": 24315, "IsComparative": "1", "id": "st_285"}, {"end": 24484, "text": "The tth row and ath column of  is ta = p(a|t) = mta + a", "rank": 286, "start": 24429, "IsComparative": "0", "id": "st_286"}]}, {"paragraph_info": {"end": 24696, "start": 24484, "text": "Here, N is the number of words andM is the number of author names in the corpus D, and other symbols are the same as in Propositions 1, 2 and 3.Then we can apply the derived model parameters to a test document d.", "rank": 88, "paragraph_comparative_number": 2, "entities": [], "id": "p_88"}, "sentences": [{"end": 24628, "text": "Here, N is the number of words andM is the number of author names in the corpus D, and other symbols are the same as in Propositions 1, 2 and 3.", "rank": 287, "start": 24484, "IsComparative": "1", "id": "st_287"}, {"end": 24696, "text": "Then we can apply the derived model parameters to a test document d.", "rank": 288, "start": 24628, "IsComparative": "1", "id": "st_288"}]}, {"paragraph_info": {"end": 24732, "start": 24696, "text": "E.The illustrative example revisited", "rank": 89, "paragraph_comparative_number": 0, "entities": [], "id": "p_89"}, "sentences": [{"end": 24698, "text": "E.", "rank": 289, "start": 24696, "IsComparative": "0", "id": "st_289"}, {"end": 24732, "text": "The illustrative example revisited", "rank": 290, "start": 24698, "IsComparative": "0", "id": "st_290"}]}, {"paragraph_info": {"end": 24869, "start": 24732, "text": "In the example in Section II-C, after learning the model by Gibbs sampling, model parameters could be as follows.Dirichlet prior vectors:", "rank": 90, "paragraph_comparative_number": 1, "entities": [], "id": "p_90"}, "sentences": [{"end": 24845, "text": "In the example in Section II-C, after learning the model by Gibbs sampling, model parameters could be as follows.", "rank": 291, "start": 24732, "IsComparative": "1", "id": "st_291"}, {"end": 24869, "text": "Dirichlet prior vectors:", "rank": 292, "start": 24845, "IsComparative": "0", "id": "st_292"}]}, {"paragraph_info": {"end": 25431, "start": 24869, "text": "Topic assignment for Document #1: 1.1 George Bush(2), D. Cheney(1): Iraq(1) war(2).1.2 George Bush(2), C. Powell(2): Gulf(2) war(1).1.3 George Bush(1): Gulf(2) report(2).Topic assignment for Document #2: 2.1 George W. Bush(1), D. Cheney(1): Iraq(1) report(1).Here superscripts (1) and (2) denote samples of topic for words and author names.For example, George Bush(2) means topic 2 is assigned to the author name George Bush.Based on the parameters given above, by Formula (12), we obtain the matrix , the topics distributions over words in W (i is for topic i):", "rank": 91, "paragraph_comparative_number": 0, "entities": [], "id": "p_91"}, "sentences": [{"end": 24952, "text": "Topic assignment for Document #1: 1.1 George Bush(2), D. Cheney(1): Iraq(1) war(2).", "rank": 293, "start": 24869, "IsComparative": "0", "id": "st_293"}, {"end": 25001, "text": "1.2 George Bush(2), C. Powell(2): Gulf(2) war(1).", "rank": 294, "start": 24952, "IsComparative": "0", "id": "st_294"}, {"end": 25039, "text": "1.3 George Bush(1): Gulf(2) report(2).", "rank": 295, "start": 25001, "IsComparative": "0", "id": "st_295"}, {"end": 25128, "text": "Topic assignment for Document #2: 2.1 George W. Bush(1), D. Cheney(1): Iraq(1) report(1).", "rank": 296, "start": 25039, "IsComparative": "0", "id": "st_296"}, {"end": 25209, "text": "Here superscripts (1) and (2) denote samples of topic for words and author names.", "rank": 297, "start": 25128, "IsComparative": "0", "id": "st_297"}, {"end": 25294, "text": "For example, George Bush(2) means topic 2 is assigned to the author name George Bush.", "rank": 298, "start": 25209, "IsComparative": "0", "id": "st_298"}, {"end": 25431, "text": "Based on the parameters given above, by Formula (12), we obtain the matrix , the topics distributions over words in W (i is for topic i):", "rank": 299, "start": 25294, "IsComparative": "0", "id": "st_299"}]}, {"paragraph_info": {"end": 25585, "start": 25431, "text": "By Formula (13), we obtain the matrix , the topics distributions over author names in A (i is for topic i): George Bush George W. Bush D. Cheney C. Powell", "rank": 92, "paragraph_comparative_number": 0, "entities": [], "id": "p_92"}, "sentences": [{"end": 25585, "text": "By Formula (13), we obtain the matrix , the topics distributions over author names in A (i is for topic i): George Bush George W. Bush D. Cheney C. Powell", "rank": 300, "start": 25431, "IsComparative": "0", "id": "st_300"}]}, {"paragraph_info": {"end": 25666, "start": 25585, "text": "By Formula (14), we obtain topics probabilities: p(t = 1) = 0.54, p(t = 2)= 0.46.", "rank": 93, "paragraph_comparative_number": 0, "entities": [], "id": "p_93"}, "sentences": [{"end": 25666, "text": "By Formula (14), we obtain topics probabilities: p(t = 1) = 0.54, p(t = 2)= 0.46.", "rank": 301, "start": 25585, "IsComparative": "0", "id": "st_301"}]}, {"paragraph_info": {"end": 25708, "start": 25666, "text": "F. Smoothing for new words or author names", "rank": 94, "paragraph_comparative_number": 1, "entities": [], "id": "p_94"}, "sentences": [{"end": 25708, "text": "F. Smoothing for new words or author names", "rank": 302, "start": 25666, "IsComparative": "1", "id": "st_302"}]}, {"paragraph_info": {"end": 26492, "start": 25708, "text": "If a test document is not in the corpus D, it is possible that it contains new words that are not in the vocabulary W. How to deal with the new words is an issue.When we try to represent a new document by a mixture of topics, using Formula (15), we need the value of tw for each word.But for a new word, we cannot compute tw by Formula (12) because of no corresponding w.Therefore, we use the following method for computing tw for new words in a test document.For each new word in test document d, we append it to the vocabulary W, and extend current W-dimensional  to a (W +1)-dimensional vector by adding a component with the value min<1, ..., W>, and then W is incremented by 1.We repeat this process until all new words have been added to W.For each new word, we let its ntw be 0.", "rank": 95, "paragraph_comparative_number": 4, "entities": [], "id": "p_95"}, "sentences": [{"end": 25870, "text": "If a test document is not in the corpus D, it is possible that it contains new words that are not in the vocabulary W. How to deal with the new words is an issue.", "rank": 303, "start": 25708, "IsComparative": "1", "id": "st_303"}, {"end": 25992, "text": "When we try to represent a new document by a mixture of topics, using Formula (15), we need the value of tw for each word.", "rank": 304, "start": 25870, "IsComparative": "1", "id": "st_304"}, {"end": 26079, "text": "But for a new word, we cannot compute tw by Formula (12) because of no corresponding w.", "rank": 305, "start": 25992, "IsComparative": "0", "id": "st_305"}, {"end": 26168, "text": "Therefore, we use the following method for computing tw for new words in a test document.", "rank": 306, "start": 26079, "IsComparative": "0", "id": "st_306"}, {"end": 26350, "text": "For each new word in test document d, we append it to the vocabulary W, and extend current W-dimensional  to a (W +1)-dimensional vector by adding a component with the value min<1, .", "rank": 307, "start": 26168, "IsComparative": "1", "id": "st_307"}, {"end": 26351, "text": ".", "rank": 308, "start": 26350, "IsComparative": "0", "id": "st_308"}, {"end": 26352, "text": ".", "rank": 309, "start": 26351, "IsComparative": "0", "id": "st_309"}, {"end": 26389, "text": ", W>, and then W is incremented by 1.", "rank": 310, "start": 26352, "IsComparative": "0", "id": "st_310"}, {"end": 26453, "text": "We repeat this process until all new words have been added to W.", "rank": 311, "start": 26389, "IsComparative": "0", "id": "st_311"}, {"end": 26492, "text": "For each new word, we let its ntw be 0.", "rank": 312, "start": 26453, "IsComparative": "1", "id": "st_312"}]}, {"paragraph_info": {"end": 26611, "start": 26492, "text": "On the other hand, there can be new author names in a test document.Similarly, we can update  and A as we do to  and W.", "rank": 96, "paragraph_comparative_number": 2, "entities": [], "id": "p_96"}, "sentences": [{"end": 26560, "text": "On the other hand, there can be new author names in a test document.", "rank": 313, "start": 26492, "IsComparative": "1", "id": "st_313"}, {"end": 26611, "text": "Similarly, we can update  and A as we do to  and W.", "rank": 314, "start": 26560, "IsComparative": "1", "id": "st_314"}]}, {"paragraph_info": {"end": 26842, "start": 26611, "text": "After new words and new author names are included in W and A,  and  can be re-computed by Formulas (12) and (13) and applied to the new document.By Formulas (15) and (16), the new document can be represented by a mixture of topics.", "rank": 97, "paragraph_comparative_number": 0, "entities": [], "id": "p_97"}, "sentences": [{"end": 26756, "text": "After new words and new author names are included in W and A,  and  can be re-computed by Formulas (12) and (13) and applied to the new document.", "rank": 315, "start": 26611, "IsComparative": "0", "id": "st_315"}, {"end": 26842, "text": "By Formulas (15) and (16), the new document can be represented by a mixture of topics.", "rank": 316, "start": 26756, "IsComparative": "0", "id": "st_316"}]}, {"paragraph_info": {"end": 26887, "start": 26842, "text": "G.Document representation by model parameters", "rank": 98, "paragraph_comparative_number": 0, "entities": [], "id": "p_98"}, "sentences": [{"end": 26844, "text": "G.", "rank": 317, "start": 26842, "IsComparative": "0", "id": "st_317"}, {"end": 26887, "text": "Document representation by model parameters", "rank": 318, "start": 26844, "IsComparative": "0", "id": "st_318"}]}, {"paragraph_info": {"end": 27316, "start": 26887, "text": "1) A document as a mixture of topics: Based on the derived model parameters, we can estimate a test documents mixture of topics.We define the test document ds weight for a topic where N d and M d are the numbers of words and author names in d, respectively; wi and aj as subscripts are the order numbers of ds ith word and jth author name in W and A, respectively.Other notations have been defined in Formulas (12), (13) or (14).", "rank": 99, "paragraph_comparative_number": 1, "entities": [], "id": "p_99"}, "sentences": [{"end": 27015, "text": "1) A document as a mixture of topics: Based on the derived model parameters, we can estimate a test documents mixture of topics.", "rank": 319, "start": 26887, "IsComparative": "1", "id": "st_319"}, {"end": 27251, "text": "We define the test document ds weight for a topic where N d and M d are the numbers of words and author names in d, respectively; wi and aj as subscripts are the order numbers of ds ith word and jth author name in W and A, respectively.", "rank": 320, "start": 27015, "IsComparative": "0", "id": "st_320"}, {"end": 27316, "text": "Other notations have been defined in Formulas (12), (13) or (14).", "rank": 321, "start": 27251, "IsComparative": "0", "id": "st_321"}]}, {"paragraph_info": {"end": 27432, "start": 27316, "text": "Therefore we can get the document ds distribution over topics, denoted by the vector   d = (  d1, ...,   dT ), where", "rank": 100, "paragraph_comparative_number": 0, "entities": [], "id": "p_100"}, "sentences": [{"end": 27415, "text": "Therefore we can get the document ds distribution over topics, denoted by the vector   d = (  d1, .", "rank": 322, "start": 27316, "IsComparative": "0", "id": "st_322"}, {"end": 27416, "text": ".", "rank": 323, "start": 27415, "IsComparative": "0", "id": "st_323"}, {"end": 27417, "text": ".", "rank": 324, "start": 27416, "IsComparative": "0", "id": "st_324"}, {"end": 27432, "text": ",   dT ), where", "rank": 325, "start": 27417, "IsComparative": "0", "id": "st_325"}]}, {"paragraph_info": {"end": 27658, "start": 27432, "text": "2) Topic similarity of two documents: The topic similarity of two documents should be proportional to the probability that the two documents d1 and d2 belong to the same topic.Therefore, based on Formula (16), it is defined as", "rank": 101, "paragraph_comparative_number": 1, "entities": [], "id": "p_101"}, "sentences": [{"end": 27608, "text": "2) Topic similarity of two documents: The topic similarity of two documents should be proportional to the probability that the two documents d1 and d2 belong to the same topic.", "rank": 326, "start": 27432, "IsComparative": "1", "id": "st_326"}, {"end": 27658, "text": "Therefore, based on Formula (16), it is defined as", "rank": 327, "start": 27608, "IsComparative": "0", "id": "st_327"}]}, {"paragraph_info": {"end": 27693, "start": 27658, "text": "This formula is used in Section IV.", "rank": 102, "paragraph_comparative_number": 0, "entities": [], "id": "p_102"}, "sentences": [{"end": 27693, "text": "This formula is used in Section IV.", "rank": 328, "start": 27658, "IsComparative": "0", "id": "st_328"}]}, {"paragraph_info": {"end": 27722, "start": 27693, "text": "IV.COMPLETE ENTITY RESOLUTION", "rank": 103, "paragraph_comparative_number": 1, "entities": [], "id": "p_103"}, "sentences": [{"end": 27696, "text": "IV.", "rank": 329, "start": 27693, "IsComparative": "0", "id": "st_329"}, {"end": 27722, "text": "COMPLETE ENTITY RESOLUTION", "rank": 330, "start": 27696, "IsComparative": "1", "id": "st_330"}]}, {"paragraph_info": {"end": 27854, "start": 27722, "text": "In this section, we present an application of the LDA-dual model  complete entity resolution for all author names in a given corpus.", "rank": 104, "paragraph_comparative_number": 0, "entities": [], "id": "p_104"}, "sentences": [{"end": 27854, "text": "In this section, we present an application of the LDA-dual model  complete entity resolution for all author names in a given corpus.", "rank": 331, "start": 27722, "IsComparative": "0", "id": "st_331"}]}, {"paragraph_info": {"end": 28387, "start": 27854, "text": "Complete entity resolution consists of four steps: (1) obtain topic information for each document or citation in the corpus through Gibbs sampling; (2) build a classifier based on pairwise feature of two citations; (3) solve the name sharing problem by spectral clustering after constructing graphs for each ambiguous name, with the classifiers support; (4) solve the name variant and name mixing problems with help of the classifier.The first step has been presented in Sections III and III-G.We now introduce the other three steps.", "rank": 105, "paragraph_comparative_number": 2, "entities": [], "id": "p_105"}, "sentences": [{"end": 28288, "text": "Complete entity resolution consists of four steps: (1) obtain topic information for each document or citation in the corpus through Gibbs sampling; (2) build a classifier based on pairwise feature of two citations; (3) solve the name sharing problem by spectral clustering after constructing graphs for each ambiguous name, with the classifiers support; (4) solve the name variant and name mixing problems with help of the classifier.", "rank": 332, "start": 27854, "IsComparative": "1", "id": "st_332"}, {"end": 28348, "text": "The first step has been presented in Sections III and III-G.", "rank": 333, "start": 28288, "IsComparative": "0", "id": "st_333"}, {"end": 28387, "text": "We now introduce the other three steps.", "rank": 334, "start": 28348, "IsComparative": "1", "id": "st_334"}]}, {"paragraph_info": {"end": 28761, "start": 28387, "text": "Based on model parameters, the topic similarity of two citations can be computed by Formula (17).Based on topic similarity and some other features, we build a classifier.Its features are a series of similarities or distances between two citations.Its class label has two values  merge when it decides that the two citations are from the same entity, and not merge otherwise.", "rank": 106, "paragraph_comparative_number": 3, "entities": [], "id": "p_106"}, "sentences": [{"end": 28484, "text": "Based on model parameters, the topic similarity of two citations can be computed by Formula (17).", "rank": 335, "start": 28387, "IsComparative": "1", "id": "st_335"}, {"end": 28557, "text": "Based on topic similarity and some other features, we build a classifier.", "rank": 336, "start": 28484, "IsComparative": "0", "id": "st_336"}, {"end": 28634, "text": "Its features are a series of similarities or distances between two citations.", "rank": 337, "start": 28557, "IsComparative": "1", "id": "st_337"}, {"end": 28761, "text": "Its class label has two values  merge when it decides that the two citations are from the same entity, and not merge otherwise.", "rank": 338, "start": 28634, "IsComparative": "1", "id": "st_338"}]}, {"paragraph_info": {"end": 29225, "start": 28761, "text": "To solve the name sharing problem, we use spectral clustering based on the classifier that has been learned.Given an ambiguous name shared by multiple entities, all citations that the name appears in can be obtained.For this name, we construct a graph in which citations are nodes.Edges of the graph are decided by the classifier.For a pair of nodes, an edge is assigned to them, only if their corresponding two citations are decided to be merge by the classifier.", "rank": 107, "paragraph_comparative_number": 1, "entities": [], "id": "p_107"}, "sentences": [{"end": 28869, "text": "To solve the name sharing problem, we use spectral clustering based on the classifier that has been learned.", "rank": 339, "start": 28761, "IsComparative": "0", "id": "st_339"}, {"end": 28977, "text": "Given an ambiguous name shared by multiple entities, all citations that the name appears in can be obtained.", "rank": 340, "start": 28869, "IsComparative": "0", "id": "st_340"}, {"end": 29042, "text": "For this name, we construct a graph in which citations are nodes.", "rank": 341, "start": 28977, "IsComparative": "0", "id": "st_341"}, {"end": 29091, "text": "Edges of the graph are decided by the classifier.", "rank": 342, "start": 29042, "IsComparative": "0", "id": "st_342"}, {"end": 29225, "text": "For a pair of nodes, an edge is assigned to them, only if their corresponding two citations are decided to be merge by the classifier.", "rank": 343, "start": 29091, "IsComparative": "1", "id": "st_343"}]}, {"paragraph_info": {"end": 29547, "start": 29225, "text": "If the classifier was perfect, i.e., free of errors, the graph would consist of some cliques and each clique would represent an entity.In this ideal case, it is trivial to find entities.In case the classifier has errors, K-way spectral clustering <23><24><25> is employed to retrieve entities after a graph is constructed.", "rank": 108, "paragraph_comparative_number": 1, "entities": [], "id": "p_108"}, "sentences": [{"end": 29360, "text": "If the classifier was perfect, i.e., free of errors, the graph would consist of some cliques and each clique would represent an entity.", "rank": 344, "start": 29225, "IsComparative": "0", "id": "st_344"}, {"end": 29411, "text": "In this ideal case, it is trivial to find entities.", "rank": 345, "start": 29360, "IsComparative": "1", "id": "st_345"}, {"end": 29547, "text": "In case the classifier has errors, K-way spectral clustering <23><24><25> is employed to retrieve entities after a graph is constructed.", "rank": 346, "start": 29411, "IsComparative": "0", "id": "st_346"}]}, {"paragraph_info": {"end": 29997, "start": 29547, "text": "After the name sharing problem is solved, we solve the name variant and name mixing problems based on the classifier previously learned.Given two names, we decide if they are from one entity.Two sets of citations are collected for the two names, respectively.Each pair of two citations from the two sets is decided by the classifier.If the ratio of merge surpasses a predefined threshold mthresh, the two names are considered as from the same entity.", "rank": 109, "paragraph_comparative_number": 3, "entities": [], "id": "p_109"}, "sentences": [{"end": 29683, "text": "After the name sharing problem is solved, we solve the name variant and name mixing problems based on the classifier previously learned.", "rank": 347, "start": 29547, "IsComparative": "0", "id": "st_347"}, {"end": 29738, "text": "Given two names, we decide if they are from one entity.", "rank": 348, "start": 29683, "IsComparative": "1", "id": "st_348"}, {"end": 29806, "text": "Two sets of citations are collected for the two names, respectively.", "rank": 349, "start": 29738, "IsComparative": "0", "id": "st_349"}, {"end": 29880, "text": "Each pair of two citations from the two sets is decided by the classifier.", "rank": 350, "start": 29806, "IsComparative": "1", "id": "st_350"}, {"end": 29997, "text": "If the ratio of merge surpasses a predefined threshold mthresh, the two names are considered as from the same entity.", "rank": 351, "start": 29880, "IsComparative": "1", "id": "st_351"}]}, {"paragraph_info": {"end": 30023, "start": 29997, "text": "A. Building the classifier", "rank": 110, "paragraph_comparative_number": 0, "entities": [], "id": "p_110"}, "sentences": [{"end": 30023, "text": "A. Building the classifier", "rank": 352, "start": 29997, "IsComparative": "0", "id": "st_352"}]}, {"paragraph_info": {"end": 30176, "start": 30023, "text": "The classifier is used to decide if two citations are from one entity.In our case, we tried the decision tree algorithm C4.5 and support vector machines.", "rank": 111, "paragraph_comparative_number": 2, "entities": [], "id": "p_111"}, "sentences": [{"end": 30093, "text": "The classifier is used to decide if two citations are from one entity.", "rank": 353, "start": 30023, "IsComparative": "1", "id": "st_353"}, {"end": 30176, "text": "In our case, we tried the decision tree algorithm C4.5 and support vector machines.", "rank": 354, "start": 30093, "IsComparative": "1", "id": "st_354"}]}, {"paragraph_info": {"end": 30707, "start": 30176, "text": "We use the following features: (1) coauthor names similarity, (2) title similarity, (3) topic similarity, (4) venue similarity, and (5) minimum name distance between coauthors.Their values are computed based on a pair of citations.The values of the class label is merge and not merge.If two citations are from the same entity, we label it merge; otherwise, not merge.Feature #3 topic similarity has been introduced in Section III-G by treating citations as test documents.We propose the notion name distance for features #1 and #5.", "rank": 112, "paragraph_comparative_number": 2, "entities": [], "id": "p_112"}, "sentences": [{"end": 30352, "text": "We use the following features: (1) coauthor names similarity, (2) title similarity, (3) topic similarity, (4) venue similarity, and (5) minimum name distance between coauthors.", "rank": 355, "start": 30176, "IsComparative": "0", "id": "st_355"}, {"end": 30407, "text": "Their values are computed based on a pair of citations.", "rank": 356, "start": 30352, "IsComparative": "1", "id": "st_356"}, {"end": 30460, "text": "The values of the class label is merge and not merge.", "rank": 357, "start": 30407, "IsComparative": "0", "id": "st_357"}, {"end": 30543, "text": "If two citations are from the same entity, we label it merge; otherwise, not merge.", "rank": 358, "start": 30460, "IsComparative": "1", "id": "st_358"}, {"end": 30648, "text": "Feature #3 topic similarity has been introduced in Section III-G by treating citations as test documents.", "rank": 359, "start": 30543, "IsComparative": "0", "id": "st_359"}, {"end": 30707, "text": "We propose the notion name distance for features #1 and #5.", "rank": 360, "start": 30648, "IsComparative": "0", "id": "st_360"}]}, {"paragraph_info": {"end": 30757, "start": 30707, "text": "1) Name distance: We denote the name distance by .", "rank": 113, "paragraph_comparative_number": 0, "entities": [], "id": "p_113"}, "sentences": [{"end": 30757, "text": "1) Name distance: We denote the name distance by .", "rank": 361, "start": 30707, "IsComparative": "0", "id": "st_361"}]}, {"paragraph_info": {"end": 31442, "start": 30757, "text": "Consider two different author names a1 and a2: (1) If a1 and a2 have the same first name and last name and one of them has no middle name, we define (a1, a2) = 0.5, e.g., Clement Yu and Clement T. Yu.(2) If a1 and a2 have the same first name and last name and one middle name is another middle names initial, we define (a1, a2) = 0.5, e.g., Chee W. Chin and Chee Wee Chin.(3) If a1 and a2 have the same last name and one first name is the other first names initial, we define (a1, a2) = 0.5, e.g., Yang Zhang and Y. Zhang.(4) If a1 and a2 have the same last name and the difference of two first names is only letter cases or -, we define (a1, a2) = 0.5, e.g., Guohui Li and Guo-Hui Li.", "rank": 114, "paragraph_comparative_number": 0, "entities": [], "id": "p_114"}, "sentences": [{"end": 30957, "text": "Consider two different author names a1 and a2: (1) If a1 and a2 have the same first name and last name and one of them has no middle name, we define (a1, a2) = 0.5, e.g., Clement Yu and Clement T. Yu.", "rank": 362, "start": 30757, "IsComparative": "0", "id": "st_362"}, {"end": 31129, "text": "(2) If a1 and a2 have the same first name and last name and one middle name is another middle names initial, we define (a1, a2) = 0.5, e.g., Chee W. Chin and Chee Wee Chin.", "rank": 363, "start": 30957, "IsComparative": "0", "id": "st_363"}, {"end": 31279, "text": "(3) If a1 and a2 have the same last name and one first name is the other first names initial, we define (a1, a2) = 0.5, e.g., Yang Zhang and Y. Zhang.", "rank": 364, "start": 31129, "IsComparative": "0", "id": "st_364"}, {"end": 31442, "text": "(4) If a1 and a2 have the same last name and the difference of two first names is only letter cases or -, we define (a1, a2) = 0.5, e.g., Guohui Li and Guo-Hui Li.", "rank": 365, "start": 31279, "IsComparative": "0", "id": "st_365"}]}, {"paragraph_info": {"end": 31777, "start": 31442, "text": "Except the scenarios above, the name distance of a1 and a2 is defined as their edit distance.The edit distance of two strings is defined as the minimum number of operations that transform one string to the other and the operations include inserting, deleting and replacing a character.Here, two author names are treated as two strings.", "rank": 115, "paragraph_comparative_number": 2, "entities": [], "id": "p_115"}, "sentences": [{"end": 31535, "text": "Except the scenarios above, the name distance of a1 and a2 is defined as their edit distance.", "rank": 366, "start": 31442, "IsComparative": "0", "id": "st_366"}, {"end": 31727, "text": "The edit distance of two strings is defined as the minimum number of operations that transform one string to the other and the operations include inserting, deleting and replacing a character.", "rank": 367, "start": 31535, "IsComparative": "1", "id": "st_367"}, {"end": 31777, "text": "Here, two author names are treated as two strings.", "rank": 368, "start": 31727, "IsComparative": "1", "id": "st_368"}]}, {"paragraph_info": {"end": 32412, "start": 31777, "text": "2) Coauthor names similarity: We use Dices coefficient <26> to compute coauthor names similarity for two citations.Dices coefficient is defined as s = 2|XY | |X|+|Y | , where X and Y are two sets.In this paper, considering similarity of similar names, we made a small improvement when applying Dices coefficient.We add 0.5 to |XY | in case the name distance is 0.5.For example, two sets of coauthor names are X = <Weiyi Meng, Clement T. Yu> and Y = <Hongkun Zhao, Weiyi Meng, Clement Yu>.Considering similarity of Clement T. Yu and Clement Yu, we compute Dices coefficient as 21.5 2+3 = 0.6, while standard computation is 21 2+3 = 0.4.", "rank": 116, "paragraph_comparative_number": 4, "entities": [], "id": "p_116"}, "sentences": [{"end": 31892, "text": "2) Coauthor names similarity: We use Dices coefficient <26> to compute coauthor names similarity for two citations.", "rank": 369, "start": 31777, "IsComparative": "1", "id": "st_369"}, {"end": 31973, "text": "Dices coefficient is defined as s = 2|XY | |X|+|Y | , where X and Y are two sets.", "rank": 370, "start": 31892, "IsComparative": "1", "id": "st_370"}, {"end": 32089, "text": "In this paper, considering similarity of similar names, we made a small improvement when applying Dices coefficient.", "rank": 371, "start": 31973, "IsComparative": "1", "id": "st_371"}, {"end": 32142, "text": "We add 0.5 to |XY | in case the name distance is 0.5.", "rank": 372, "start": 32089, "IsComparative": "0", "id": "st_372"}, {"end": 32265, "text": "For example, two sets of coauthor names are X = <Weiyi Meng, Clement T. Yu> and Y = <Hongkun Zhao, Weiyi Meng, Clement Yu>.", "rank": 373, "start": 32142, "IsComparative": "1", "id": "st_373"}, {"end": 32412, "text": "Considering similarity of Clement T. Yu and Clement Yu, we compute Dices coefficient as 21.5 2+3 = 0.6, while standard computation is 21 2+3 = 0.4.", "rank": 374, "start": 32265, "IsComparative": "0", "id": "st_374"}]}, {"paragraph_info": {"end": 32614, "start": 32412, "text": "Feature #5 is the minimum name distance of two sets of coauthor names.For the example above, it is zero.Obviously, if the value of feature #5 is too large, the two citations are from different entities.", "rank": 117, "paragraph_comparative_number": 2, "entities": [], "id": "p_117"}, "sentences": [{"end": 32482, "text": "Feature #5 is the minimum name distance of two sets of coauthor names.", "rank": 375, "start": 32412, "IsComparative": "1", "id": "st_375"}, {"end": 32516, "text": "For the example above, it is zero.", "rank": 376, "start": 32482, "IsComparative": "0", "id": "st_376"}, {"end": 32614, "text": "Obviously, if the value of feature #5 is too large, the two citations are from different entities.", "rank": 377, "start": 32516, "IsComparative": "1", "id": "st_377"}]}, {"paragraph_info": {"end": 33009, "start": 32614, "text": "3) Title similarity: For two citations, the title similarity is computed as cosine similarity <26> based on tf-idf weights of words in the two titles.Each title is represented by a vector.Each component of the vector is computed based on term frequency (tf ) and inverse document frequency (idf) of a word.In addition, cosine similarity is also used to compute venue similarity of two citations.", "rank": 118, "paragraph_comparative_number": 1, "entities": [], "id": "p_118"}, "sentences": [{"end": 32764, "text": "3) Title similarity: For two citations, the title similarity is computed as cosine similarity <26> based on tf-idf weights of words in the two titles.", "rank": 378, "start": 32614, "IsComparative": "0", "id": "st_378"}, {"end": 32802, "text": "Each title is represented by a vector.", "rank": 379, "start": 32764, "IsComparative": "0", "id": "st_379"}, {"end": 32920, "text": "Each component of the vector is computed based on term frequency (tf ) and inverse document frequency (idf) of a word.", "rank": 380, "start": 32802, "IsComparative": "0", "id": "st_380"}, {"end": 33009, "text": "In addition, cosine similarity is also used to compute venue similarity of two citations.", "rank": 381, "start": 32920, "IsComparative": "1", "id": "st_381"}]}, {"paragraph_info": {"end": 33276, "start": 33009, "text": "4) Manual effort on labeling: We did not directly use unsupervised learning for citations under an author name to solve the name sharing problem.The reason is that it is difficult to determine the weights for all kinds of similarities.Instead, we employ a classifier.", "rank": 119, "paragraph_comparative_number": 0, "entities": [], "id": "p_119"}, "sentences": [{"end": 33154, "text": "4) Manual effort on labeling: We did not directly use unsupervised learning for citations under an author name to solve the name sharing problem.", "rank": 382, "start": 33009, "IsComparative": "0", "id": "st_382"}, {"end": 33244, "text": "The reason is that it is difficult to determine the weights for all kinds of similarities.", "rank": 383, "start": 33154, "IsComparative": "0", "id": "st_383"}, {"end": 33276, "text": "Instead, we employ a classifier.", "rank": 384, "start": 33244, "IsComparative": "0", "id": "st_384"}]}, {"paragraph_info": {"end": 33750, "start": 33276, "text": "To build the training set of the classifier, manual effort is needed to label each pair of citations as merge or not merge.In some cases, manual effort is little.For example, if we know there is only one entity under a name, a pair is labeled as merge easily if two citations in the pair are from this name.On the other hand, for two very different names, a pair can be labeled as not merge easily if one citation is from one name and the other citation from the other name.", "rank": 120, "paragraph_comparative_number": 0, "entities": [], "id": "p_120"}, "sentences": [{"end": 33399, "text": "To build the training set of the classifier, manual effort is needed to label each pair of citations as merge or not merge.", "rank": 385, "start": 33276, "IsComparative": "0", "id": "st_385"}, {"end": 33438, "text": "In some cases, manual effort is little.", "rank": 386, "start": 33399, "IsComparative": "0", "id": "st_386"}, {"end": 33583, "text": "For example, if we know there is only one entity under a name, a pair is labeled as merge easily if two citations in the pair are from this name.", "rank": 387, "start": 33438, "IsComparative": "0", "id": "st_387"}, {"end": 33750, "text": "On the other hand, for two very different names, a pair can be labeled as not merge easily if one citation is from one name and the other citation from the other name.", "rank": 388, "start": 33583, "IsComparative": "0", "id": "st_388"}]}, {"paragraph_info": {"end": 33785, "start": 33750, "text": "B. Solving the name sharing problem", "rank": 121, "paragraph_comparative_number": 0, "entities": [], "id": "p_121"}, "sentences": [{"end": 33785, "text": "B. Solving the name sharing problem", "rank": 389, "start": 33750, "IsComparative": "0", "id": "st_389"}]}, {"paragraph_info": {"end": 34095, "start": 33785, "text": "To solve the name sharing problem based on the classifier, we first construct a graph for each ambiguous name shared by K entities, and then employ K-way spectral clustering <23><24><25> to retrieve entities from this graph, as in Algorithm 1.K, the number of entities under an author name, is prior knowledge.", "rank": 122, "paragraph_comparative_number": 1, "entities": [], "id": "p_122"}, "sentences": [{"end": 34028, "text": "To solve the name sharing problem based on the classifier, we first construct a graph for each ambiguous name shared by K entities, and then employ K-way spectral clustering <23><24><25> to retrieve entities from this graph, as in Algorithm 1.", "rank": 390, "start": 33785, "IsComparative": "1", "id": "st_390"}, {"end": 34095, "text": "K, the number of entities under an author name, is prior knowledge.", "rank": 391, "start": 34028, "IsComparative": "0", "id": "st_391"}]}, {"paragraph_info": {"end": 34565, "start": 34095, "text": "1) Constructing graphs: For a given ambiguous name, we first obtain a collection of all citations of the ambiguous name, and then construct a graph.Each node of the graph corresponds to a citation in the collection.The edges are determined by the classifier.If the classifier decides to merge the two citations, we draw an edge connecting two nodes corresponding to the two citations.Otherwise, no edge is drawn between them.Each edge has an equivalent weight that is 1.", "rank": 123, "paragraph_comparative_number": 1, "entities": [], "id": "p_123"}, "sentences": [{"end": 34243, "text": "1) Constructing graphs: For a given ambiguous name, we first obtain a collection of all citations of the ambiguous name, and then construct a graph.", "rank": 392, "start": 34095, "IsComparative": "0", "id": "st_392"}, {"end": 34310, "text": "Each node of the graph corresponds to a citation in the collection.", "rank": 393, "start": 34243, "IsComparative": "0", "id": "st_393"}, {"end": 34353, "text": "The edges are determined by the classifier.", "rank": 394, "start": 34310, "IsComparative": "0", "id": "st_394"}, {"end": 34479, "text": "If the classifier decides to merge the two citations, we draw an edge connecting two nodes corresponding to the two citations.", "rank": 395, "start": 34353, "IsComparative": "1", "id": "st_395"}, {"end": 34520, "text": "Otherwise, no edge is drawn between them.", "rank": 396, "start": 34479, "IsComparative": "0", "id": "st_396"}, {"end": 34565, "text": "Each edge has an equivalent weight that is 1.", "rank": 397, "start": 34520, "IsComparative": "0", "id": "st_397"}]}, {"paragraph_info": {"end": 34846, "start": 34565, "text": "2) Retrieving clusters: For K-way spectral clustering, there are three methods of spectral relaxation to apply  ratio cut <23>, normalized cut <25> and min-max cut <24>.We applied the three methods to the application in this paper and found that ratio cut has the best performance.", "rank": 124, "paragraph_comparative_number": 2, "entities": [], "id": "p_124"}, "sentences": [{"end": 34734, "text": "2) Retrieving clusters: For K-way spectral clustering, there are three methods of spectral relaxation to apply  ratio cut <23>, normalized cut <25> and min-max cut <24>.", "rank": 398, "start": 34565, "IsComparative": "1", "id": "st_398"}, {"end": 34846, "text": "We applied the three methods to the application in this paper and found that ratio cut has the best performance.", "rank": 399, "start": 34734, "IsComparative": "1", "id": "st_399"}]}, {"paragraph_info": {"end": 35276, "start": 34846, "text": "According to Ky Fans theorem <27>, we can retrieve clusters from the subspace of k eigenvectors corresponding to the k smallest eigenvalues of the Laplacian matrix L of the graph, using another algorithm like k-means <25>.Assume we have obtained k eigenvectors of L: u1, ..., uk.Let U = <u1, ..., uk>.Each row of matrix U corresponds to a node in the graph.We cluster rows of U by k-means and then we obtain the clusters of nodes.", "rank": 125, "paragraph_comparative_number": 2, "entities": [], "id": "p_125"}, "sentences": [{"end": 35068, "text": "According to Ky Fans theorem <27>, we can retrieve clusters from the subspace of k eigenvectors corresponding to the k smallest eigenvalues of the Laplacian matrix L of the graph, using another algorithm like k-means <25>.", "rank": 400, "start": 34846, "IsComparative": "1", "id": "st_400"}, {"end": 35118, "text": "Assume we have obtained k eigenvectors of L: u1, .", "rank": 401, "start": 35068, "IsComparative": "0", "id": "st_401"}, {"end": 35119, "text": ".", "rank": 402, "start": 35118, "IsComparative": "0", "id": "st_402"}, {"end": 35120, "text": ".", "rank": 403, "start": 35119, "IsComparative": "0", "id": "st_403"}, {"end": 35125, "text": ", uk.", "rank": 404, "start": 35120, "IsComparative": "0", "id": "st_404"}, {"end": 35139, "text": "Let U = <u1, .", "rank": 405, "start": 35125, "IsComparative": "0", "id": "st_405"}, {"end": 35140, "text": ".", "rank": 406, "start": 35139, "IsComparative": "0", "id": "st_406"}, {"end": 35141, "text": ".", "rank": 407, "start": 35140, "IsComparative": "0", "id": "st_407"}, {"end": 35147, "text": ", uk>.", "rank": 408, "start": 35141, "IsComparative": "0", "id": "st_408"}, {"end": 35203, "text": "Each row of matrix U corresponds to a node in the graph.", "rank": 409, "start": 35147, "IsComparative": "1", "id": "st_409"}, {"end": 35276, "text": "We cluster rows of U by k-means and then we obtain the clusters of nodes.", "rank": 410, "start": 35203, "IsComparative": "0", "id": "st_410"}]}, {"paragraph_info": {"end": 35311, "start": 35276, "text": "C. Solving the name variant problem", "rank": 126, "paragraph_comparative_number": 0, "entities": [], "id": "p_126"}, "sentences": [{"end": 35311, "text": "C. Solving the name variant problem", "rank": 411, "start": 35276, "IsComparative": "0", "id": "st_411"}]}, {"paragraph_info": {"end": 35402, "start": 35311, "text": "After the name sharing problem is solved, we solve the name variant problem by Algorithm 2.", "rank": 127, "paragraph_comparative_number": 0, "entities": [], "id": "p_127"}, "sentences": [{"end": 35402, "text": "After the name sharing problem is solved, we solve the name variant problem by Algorithm 2.", "rank": 412, "start": 35311, "IsComparative": "0", "id": "st_412"}]}, {"paragraph_info": {"end": 36111, "start": 35402, "text": "Given two names a1 and a2, if the name distance (a1, a2) is larger than a predefined threshold dthresh, say 3, we think they are from different entities.Otherwise we need to use the classifier to determine if they are from the same entity.Two sets of citations, C1 and C2, are collected for a1 and a2, respectively.Any citation c1  C1 will be compared to any citation c2  C2.All pairs (c1, c2) will be decided to merge or not merge by the classifier.Let d be the count of merge.If the ratio of merge d mn is greater than a threshold mthresh, say, 0.3, we consider the two names a1 and a2 are from the same entity; otherwise they are from different entities.We will discuss selection of mthresh in Section V-F.", "rank": 128, "paragraph_comparative_number": 2, "entities": [], "id": "p_128"}, "sentences": [{"end": 35555, "text": "Given two names a1 and a2, if the name distance (a1, a2) is larger than a predefined threshold dthresh, say 3, we think they are from different entities.", "rank": 413, "start": 35402, "IsComparative": "1", "id": "st_413"}, {"end": 35641, "text": "Otherwise we need to use the classifier to determine if they are from the same entity.", "rank": 414, "start": 35555, "IsComparative": "0", "id": "st_414"}, {"end": 35717, "text": "Two sets of citations, C1 and C2, are collected for a1 and a2, respectively.", "rank": 415, "start": 35641, "IsComparative": "0", "id": "st_415"}, {"end": 35777, "text": "Any citation c1  C1 will be compared to any citation c2  C2.", "rank": 416, "start": 35717, "IsComparative": "0", "id": "st_416"}, {"end": 35852, "text": "All pairs (c1, c2) will be decided to merge or not merge by the classifier.", "rank": 417, "start": 35777, "IsComparative": "0", "id": "st_417"}, {"end": 35880, "text": "Let d be the count of merge.", "rank": 418, "start": 35852, "IsComparative": "0", "id": "st_418"}, {"end": 36059, "text": "If the ratio of merge d mn is greater than a threshold mthresh, say, 0.3, we consider the two names a1 and a2 are from the same entity; otherwise they are from different entities.", "rank": 419, "start": 35880, "IsComparative": "1", "id": "st_419"}, {"end": 36111, "text": "We will discuss selection of mthresh in Section V-F.", "rank": 420, "start": 36059, "IsComparative": "0", "id": "st_420"}]}, {"paragraph_info": {"end": 36277, "start": 36111, "text": "After the name sharing problem and the name variant problem are solved, the name mixing problem is also solved because it is a combination of the former two problems.", "rank": 129, "paragraph_comparative_number": 1, "entities": [], "id": "p_129"}, "sentences": [{"end": 36277, "text": "After the name sharing problem and the name variant problem are solved, the name mixing problem is also solved because it is a combination of the former two problems.", "rank": 421, "start": 36111, "IsComparative": "1", "id": "st_421"}]}, {"paragraph_info": {"end": 36289, "start": 36277, "text": "A. Data sets", "rank": 130, "paragraph_comparative_number": 0, "entities": [], "id": "p_130"}, "sentences": [{"end": 36289, "text": "A. Data sets", "rank": 422, "start": 36277, "IsComparative": "0", "id": "st_422"}]}, {"paragraph_info": {"end": 36674, "start": 36289, "text": "We choose the DBLP bibliography <1> as the test bed for our experimentation.Within the DBLP website, we can obtain a web page for an author name as shown in Figure 1.The web page lists all citations for which the author name appears as one of the coauthor.Each citation includes coauthors names and links to their web pages, paper titles, venues of publication, publication years, etc.", "rank": 131, "paragraph_comparative_number": 1, "entities": [], "id": "p_131"}, "sentences": [{"end": 36455, "text": "We choose the DBLP bibliography <1> as the test bed for our experimentation.Within the DBLP website, we can obtain a web page for an author name as shown in Figure 1.", "rank": 423, "start": 36289, "IsComparative": "0", "id": "st_423"}, {"end": 36545, "text": "The web page lists all citations for which the author name appears as one of the coauthor.", "rank": 424, "start": 36455, "IsComparative": "0", "id": "st_424"}, {"end": 36674, "text": "Each citation includes coauthors names and links to their web pages, paper titles, venues of publication, publication years, etc.", "rank": 425, "start": 36545, "IsComparative": "1", "id": "st_425"}]}, {"paragraph_info": {"end": 37002, "start": 36674, "text": "A perfect corpus for experiments is the whole DBLP bibliography.For this case, Gibbs sampling process needs prohibitory hardware support like a main frame, or even a supercomputer that work in <12> was done on.Due to hardware limits, in our experiments, we select a medium-size corpus that is a subset of the whole bibliography.", "rank": 132, "paragraph_comparative_number": 3, "entities": [], "id": "p_132"}, "sentences": [{"end": 36738, "text": "A perfect corpus for experiments is the whole DBLP bibliography.", "rank": 426, "start": 36674, "IsComparative": "1", "id": "st_426"}, {"end": 36884, "text": "For this case, Gibbs sampling process needs prohibitory hardware support like a main frame, or even a supercomputer that work in <12> was done on.", "rank": 427, "start": 36738, "IsComparative": "1", "id": "st_427"}, {"end": 37002, "text": "Due to hardware limits, in our experiments, we select a medium-size corpus that is a subset of the whole bibliography.", "rank": 428, "start": 36884, "IsComparative": "1", "id": "st_428"}]}, {"paragraph_info": {"end": 37595, "start": 37002, "text": "To collect data for the corpus, we start from several author names DBLP web pages and crawl for a few levels following the links on the web pages.Please note that there is no special criterion for the selection of the initial author names.The corpus includes 82721 words and 28678 author names, and the size of the vocabulary is 7736 and the size of author name list (the number of distinct author names) is 7470.Our objective is complete entity resolution in the corpus, assuming a list of ambiguous author names is given and the number of entities behind each ambiguous author name is known.", "rank": 133, "paragraph_comparative_number": 4, "entities": [], "id": "p_133"}, "sentences": [{"end": 37148, "text": "To collect data for the corpus, we start from several author names DBLP web pages and crawl for a few levels following the links on the web pages.", "rank": 429, "start": 37002, "IsComparative": "1", "id": "st_429"}, {"end": 37241, "text": "Please note that there is no special criterion for the selection of the initial author names.", "rank": 430, "start": 37148, "IsComparative": "1", "id": "st_430"}, {"end": 37415, "text": "The corpus includes 82721 words and 28678 author names, and the size of the vocabulary is 7736 and the size of author name list (the number of distinct author names) is 7470.", "rank": 431, "start": 37241, "IsComparative": "1", "id": "st_431"}, {"end": 37595, "text": "Our objective is complete entity resolution in the corpus, assuming a list of ambiguous author names is given and the number of entities behind each ambiguous author name is known.", "rank": 432, "start": 37415, "IsComparative": "1", "id": "st_432"}]}, {"paragraph_info": {"end": 37620, "start": 37595, "text": "B. Gibbs sampling process", "rank": 134, "paragraph_comparative_number": 0, "entities": [], "id": "p_134"}, "sentences": [{"end": 37620, "text": "B. Gibbs sampling process", "rank": 433, "start": 37595, "IsComparative": "0", "id": "st_433"}]}, {"paragraph_info": {"end": 38003, "start": 37620, "text": "Because we include ,  and  in the sampling process, our performance is not very sensitive to the selection of topics T .Generally, the larger the corpus is, the bigger T is.In our case, we select T to be 50.Furthermore, our approach is more adaptive or less sensitive to the selection of T , because the sampling will tune the values of ,  and  in response to different T selections.", "rank": 135, "paragraph_comparative_number": 3, "entities": [], "id": "p_135"}, "sentences": [{"end": 37740, "text": "Because we include ,  and  in the sampling process, our performance is not very sensitive to the selection of topics T .", "rank": 434, "start": 37620, "IsComparative": "1", "id": "st_434"}, {"end": 37793, "text": "Generally, the larger the corpus is, the bigger T is.", "rank": 435, "start": 37740, "IsComparative": "0", "id": "st_435"}, {"end": 37827, "text": "In our case, we select T to be 50.", "rank": 436, "start": 37793, "IsComparative": "1", "id": "st_436"}, {"end": 38003, "text": "Furthermore, our approach is more adaptive or less sensitive to the selection of T , because the sampling will tune the values of ,  and  in response to different T selections.", "rank": 437, "start": 37827, "IsComparative": "1", "id": "st_437"}]}, {"paragraph_info": {"end": 38131, "start": 38003, "text": "Another parameter is  of log-normal distributions of each component of ,  and .We find when 1    2, the performance is the best.", "rank": 136, "paragraph_comparative_number": 0, "entities": [], "id": "p_136"}, "sentences": [{"end": 38082, "text": "Another parameter is  of log-normal distributions of each component of ,  and .", "rank": 438, "start": 38003, "IsComparative": "0", "id": "st_438"}, {"end": 38131, "text": "We find when 1    2, the performance is the best.", "rank": 439, "start": 38082, "IsComparative": "0", "id": "st_439"}]}, {"paragraph_info": {"end": 38322, "start": 38131, "text": "One iteration of the Gibbs sampling process includes sampling for every word and author name in corpus D according to Formulas (7) and (8) and sampling for every component of vectors ,  and .", "rank": 137, "paragraph_comparative_number": 1, "entities": [], "id": "p_137"}, "sentences": [{"end": 38322, "text": "One iteration of the Gibbs sampling process includes sampling for every word and author name in corpus D according to Formulas (7) and (8) and sampling for every component of vectors ,  and .", "rank": 440, "start": 38131, "IsComparative": "1", "id": "st_440"}]}, {"paragraph_info": {"end": 38526, "start": 38322, "text": "In our method, sampling of vectors ,  and  has the same complexity as sampling of words and author names.So the time complexity of sampling was not increased due to adding vectors to the sampling process.", "rank": 138, "paragraph_comparative_number": 2, "entities": [], "id": "p_138"}, "sentences": [{"end": 38427, "text": "In our method, sampling of vectors ,  and  has the same complexity as sampling of words and author names.", "rank": 441, "start": 38322, "IsComparative": "1", "id": "st_441"}, {"end": 38526, "text": "So the time complexity of sampling was not increased due to adding vectors to the sampling process.", "rank": 442, "start": 38427, "IsComparative": "1", "id": "st_442"}]}, {"paragraph_info": {"end": 38916, "start": 38526, "text": "The sampling process is finished when the perplexity is stable.The perplexity is the reciprocal of geometric mean of the probabilities of words and names, similar as in <8>.The smaller it is, the better.Generally after 150 iterations, less than one hour, it becomes stable.Figure 4 shows that as the number iterations increases, the perplexity decreases (left) and ,  and  converge (right).", "rank": 139, "paragraph_comparative_number": 3, "entities": [], "id": "p_139"}, "sentences": [{"end": 38589, "text": "The sampling process is finished when the perplexity is stable.", "rank": 443, "start": 38526, "IsComparative": "0", "id": "st_443"}, {"end": 38699, "text": "The perplexity is the reciprocal of geometric mean of the probabilities of words and names, similar as in <8>.", "rank": 444, "start": 38589, "IsComparative": "1", "id": "st_444"}, {"end": 38729, "text": "The smaller it is, the better.", "rank": 445, "start": 38699, "IsComparative": "1", "id": "st_445"}, {"end": 38799, "text": "Generally after 150 iterations, less than one hour, it becomes stable.", "rank": 446, "start": 38729, "IsComparative": "1", "id": "st_446"}, {"end": 38916, "text": "Figure 4 shows that as the number iterations increases, the perplexity decreases (left) and ,  and  converge (right).", "rank": 447, "start": 38799, "IsComparative": "0", "id": "st_447"}]}, {"paragraph_info": {"end": 39036, "start": 38916, "text": "In addition, once sampling is finished, the topic similarity of any two citations can be computed as in Section III-G.2.", "rank": 140, "paragraph_comparative_number": 0, "entities": [], "id": "p_140"}, "sentences": [{"end": 39036, "text": "In addition, once sampling is finished, the topic similarity of any two citations can be computed as in Section III-G.2.", "rank": 448, "start": 38916, "IsComparative": "0", "id": "st_448"}]}, {"paragraph_info": {"end": 39059, "start": 39036, "text": "C. Precision and recall", "rank": 141, "paragraph_comparative_number": 0, "entities": [], "id": "p_141"}, "sentences": [{"end": 39059, "text": "C. Precision and recall", "rank": 449, "start": 39036, "IsComparative": "0", "id": "st_449"}]}, {"paragraph_info": {"end": 39355, "start": 39059, "text": "we adopt precision and recall as our measurement of performance.First we define two sets: Sa = <(i, j)| citations i and j are merged by algorithm a, and i \t= j>, and Sr = <(i, j)| citations i and j are merged in reality, and i \t= j>.Then we define precision and recall for algorithm a as follows:", "rank": 142, "paragraph_comparative_number": 2, "entities": [], "id": "p_142"}, "sentences": [{"end": 39123, "text": "we adopt precision and recall as our measurement of performance.", "rank": 450, "start": 39059, "IsComparative": "1", "id": "st_450"}, {"end": 39292, "text": "First we define two sets: Sa = <(i, j)| citations i and j are merged by algorithm a, and i \t= j>, and Sr = <(i, j)| citations i and j are merged in reality, and i \t= j>.", "rank": 451, "start": 39123, "IsComparative": "1", "id": "st_451"}, {"end": 39355, "text": "Then we define precision and recall for algorithm a as follows:", "rank": 452, "start": 39292, "IsComparative": "0", "id": "st_452"}]}, {"paragraph_info": {"end": 39642, "start": 39355, "text": "F-measure is defined as the harmonic mean of precision and recall.This measure is directly applied to the classifier in Section IV-A and Algorithm 1.For Algorithm 2, we can redefine Sa and Sr by replacing citations with author names, and precision and recall can be calculated similarly.", "rank": 143, "paragraph_comparative_number": 2, "entities": [], "id": "p_143"}, "sentences": [{"end": 39421, "text": "F-measure is defined as the harmonic mean of precision and recall.", "rank": 453, "start": 39355, "IsComparative": "0", "id": "st_453"}, {"end": 39504, "text": "This measure is directly applied to the classifier in Section IV-A and Algorithm 1.", "rank": 454, "start": 39421, "IsComparative": "1", "id": "st_454"}, {"end": 39642, "text": "For Algorithm 2, we can redefine Sa and Sr by replacing citations with author names, and precision and recall can be calculated similarly.", "rank": 455, "start": 39504, "IsComparative": "1", "id": "st_455"}]}, {"paragraph_info": {"end": 39668, "start": 39642, "text": "D. Training the classifier", "rank": 144, "paragraph_comparative_number": 0, "entities": [], "id": "p_144"}, "sentences": [{"end": 39668, "text": "D. Training the classifier", "rank": 456, "start": 39642, "IsComparative": "0", "id": "st_456"}]}, {"paragraph_info": {"end": 39958, "start": 39668, "text": "The classifier is used to determine if two citations are from the same entity.Its performance is critical because it is the basis of Algorithms 1 and 2.We compare two classifiers  the decision tree algorithm C4.5 and support vector machines (SVMs) in the Weka machine learning package <28>.", "rank": 145, "paragraph_comparative_number": 3, "entities": [], "id": "p_145"}, "sentences": [{"end": 39746, "text": "The classifier is used to determine if two citations are from the same entity.", "rank": 457, "start": 39668, "IsComparative": "1", "id": "st_457"}, {"end": 39820, "text": "Its performance is critical because it is the basis of Algorithms 1 and 2.", "rank": 458, "start": 39746, "IsComparative": "1", "id": "st_458"}, {"end": 39958, "text": "We compare two classifiers  the decision tree algorithm C4.5 and support vector machines (SVMs) in the Weka machine learning package <28>.", "rank": 459, "start": 39820, "IsComparative": "1", "id": "st_459"}]}, {"paragraph_info": {"end": 40289, "start": 39958, "text": "To train the classifier, we use training data that is from about 2200 pairs of citations.The two citations in a pair are either from the citations of the same author name, or from similar author names.We eliminate the pairs of citations that share no similar coauthor names, because they are not useful when the classifier is used.", "rank": 146, "paragraph_comparative_number": 2, "entities": [], "id": "p_146"}, "sentences": [{"end": 40047, "text": "To train the classifier, we use training data that is from about 2200 pairs of citations.", "rank": 460, "start": 39958, "IsComparative": "1", "id": "st_460"}, {"end": 40159, "text": "The two citations in a pair are either from the citations of the same author name, or from similar author names.", "rank": 461, "start": 40047, "IsComparative": "1", "id": "st_461"}, {"end": 40289, "text": "We eliminate the pairs of citations that share no similar coauthor names, because they are not useful when the classifier is used.", "rank": 462, "start": 40159, "IsComparative": "0", "id": "st_462"}]}, {"paragraph_info": {"end": 40751, "start": 40289, "text": "For each pair of citations, we compute values of five features: (1) coauthor name similarity, (2) title similarity, (3) topic similarity, (4) venue similarity, (5) minimum name distance between coauthors.Then the five values construct one instance.This instances class label is prior knowledge, either merge (positive) or not merge (negative).For n pairs of citations, we have n instances with class label values.This is our training data set for the classifier.", "rank": 147, "paragraph_comparative_number": 3, "entities": [], "id": "p_147"}, "sentences": [{"end": 40493, "text": "For each pair of citations, we compute values of five features: (1) coauthor name similarity, (2) title similarity, (3) topic similarity, (4) venue similarity, (5) minimum name distance between coauthors.", "rank": 463, "start": 40289, "IsComparative": "1", "id": "st_463"}, {"end": 40537, "text": "Then the five values construct one instance.", "rank": 464, "start": 40493, "IsComparative": "1", "id": "st_464"}, {"end": 40632, "text": "This instances class label is prior knowledge, either merge (positive) or not merge (negative).", "rank": 465, "start": 40537, "IsComparative": "0", "id": "st_465"}, {"end": 40702, "text": "For n pairs of citations, we have n instances with class label values.", "rank": 466, "start": 40632, "IsComparative": "0", "id": "st_466"}, {"end": 40751, "text": "This is our training data set for the classifier.", "rank": 467, "start": 40702, "IsComparative": "1", "id": "st_467"}]}, {"paragraph_info": {"end": 41113, "start": 40751, "text": "Among the five features, feature #3 topic similarity is computed based on global information provided by the LDAdual model described in Section II.This is an important improvement in this paper.To find out how useful this feature is, we perform comparison experiments on three different training data sets, each of which is based on one of the models as follows.", "rank": 148, "paragraph_comparative_number": 1, "entities": [], "id": "p_148"}, "sentences": [{"end": 40898, "text": "Among the five features, feature #3 topic similarity is computed based on global information provided by the LDAdual model described in Section II.", "rank": 468, "start": 40751, "IsComparative": "0", "id": "st_468"}, {"end": 40945, "text": "This is an important improvement in this paper.", "rank": 469, "start": 40898, "IsComparative": "1", "id": "st_469"}, {"end": 41113, "text": "To find out how useful this feature is, we perform comparison experiments on three different training data sets, each of which is based on one of the models as follows.", "rank": 470, "start": 40945, "IsComparative": "0", "id": "st_470"}]}, {"paragraph_info": {"end": 41512, "start": 41113, "text": "LDA-dual model: feature #3 is computed based on the LDA-dual model and all five features are used in the data set.LDA model: feature #3 is computed based on the LDA model and all five features are used in the data set.No topic model: feature #3 is filtered out and only four features are used in the data set.All training data sets have the same class label feature and the same number of instances.", "rank": 149, "paragraph_comparative_number": 0, "entities": [], "id": "p_149"}, "sentences": [{"end": 41227, "text": "LDA-dual model: feature #3 is computed based on the LDA-dual model and all five features are used in the data set.", "rank": 471, "start": 41113, "IsComparative": "0", "id": "st_471"}, {"end": 41331, "text": "LDA model: feature #3 is computed based on the LDA model and all five features are used in the data set.", "rank": 472, "start": 41227, "IsComparative": "0", "id": "st_472"}, {"end": 41422, "text": "No topic model: feature #3 is filtered out and only four features are used in the data set.", "rank": 473, "start": 41331, "IsComparative": "0", "id": "st_473"}, {"end": 41512, "text": "All training data sets have the same class label feature and the same number of instances.", "rank": 474, "start": 41422, "IsComparative": "0", "id": "st_474"}]}, {"paragraph_info": {"end": 41888, "start": 41512, "text": "We test classifiers by 10-fold cross validation and get average precision, recall and F-measure.The comparison results are in Figure 5.The classifiers have the better performance on topic models than no topic model.And among the topic models, the LDA-dual model is better than the LDA model.From this comparison, we can also see C4.5 and SVMs have almost the same performance.", "rank": 150, "paragraph_comparative_number": 0, "entities": [], "id": "p_150"}, "sentences": [{"end": 41608, "text": "We test classifiers by 10-fold cross validation and get average precision, recall and F-measure.", "rank": 475, "start": 41512, "IsComparative": "0", "id": "st_475"}, {"end": 41647, "text": "The comparison results are in Figure 5.", "rank": 476, "start": 41608, "IsComparative": "0", "id": "st_476"}, {"end": 41727, "text": "The classifiers have the better performance on topic models than no topic model.", "rank": 477, "start": 41647, "IsComparative": "0", "id": "st_477"}, {"end": 41803, "text": "And among the topic models, the LDA-dual model is better than the LDA model.", "rank": 478, "start": 41727, "IsComparative": "0", "id": "st_478"}, {"end": 41888, "text": "From this comparison, we can also see C4.5 and SVMs have almost the same performance.", "rank": 479, "start": 41803, "IsComparative": "0", "id": "st_479"}]}, {"paragraph_info": {"end": 41923, "start": 41888, "text": "E. Solving the name sharing problem", "rank": 151, "paragraph_comparative_number": 0, "entities": [], "id": "p_151"}, "sentences": [{"end": 41923, "text": "E. Solving the name sharing problem", "rank": 480, "start": 41888, "IsComparative": "0", "id": "st_480"}]}, {"paragraph_info": {"end": 42502, "start": 41923, "text": "For an author name that is shared by multiple entities, we treat each citation under this name as a document.Based on the classifier, we construct a graph and do spectral clustering with three methods for spectral relaxations  ratio cut, normalized cut, and min-max cut.The ratio cut makes the number of vertices balanced in clusters, while the normalized cut makes the number of edges balanced.The min-max cut has no preference for balance.We compared three cuts on our data when we run Algorithm 1 and found that ratio cut has the best performance, as shown in Figure 6 (left).", "rank": 152, "paragraph_comparative_number": 2, "entities": [], "id": "p_152"}, "sentences": [{"end": 42032, "text": "For an author name that is shared by multiple entities, we treat each citation under this name as a document.", "rank": 481, "start": 41923, "IsComparative": "0", "id": "st_481"}, {"end": 42193, "text": "Based on the classifier, we construct a graph and do spectral clustering with three methods for spectral relaxations  ratio cut, normalized cut, and min-max cut.", "rank": 482, "start": 42032, "IsComparative": "1", "id": "st_482"}, {"end": 42318, "text": "The ratio cut makes the number of vertices balanced in clusters, while the normalized cut makes the number of edges balanced.", "rank": 483, "start": 42193, "IsComparative": "0", "id": "st_483"}, {"end": 42364, "text": "The min-max cut has no preference for balance.", "rank": 484, "start": 42318, "IsComparative": "0", "id": "st_484"}, {"end": 42502, "text": "We compared three cuts on our data when we run Algorithm 1 and found that ratio cut has the best performance, as shown in Figure 6 (left).", "rank": 485, "start": 42364, "IsComparative": "1", "id": "st_485"}]}, {"paragraph_info": {"end": 42768, "start": 42502, "text": "The experimental result for some cases are listed in Table II.We have precision and recall over 0.9 for most tested cases.And in the cases of Guohui Li and Lei Yu, there are entities who moved from one place to another and our algorithm successfully identified them.", "rank": 153, "paragraph_comparative_number": 2, "entities": [], "id": "p_153"}, "sentences": [{"end": 42564, "text": "The experimental result for some cases are listed in Table II.", "rank": 486, "start": 42502, "IsComparative": "0", "id": "st_486"}, {"end": 42624, "text": "We have precision and recall over 0.9 for most tested cases.", "rank": 487, "start": 42564, "IsComparative": "1", "id": "st_487"}, {"end": 42768, "text": "And in the cases of Guohui Li and Lei Yu, there are entities who moved from one place to another and our algorithm successfully identified them.", "rank": 488, "start": 42624, "IsComparative": "1", "id": "st_488"}]}, {"paragraph_info": {"end": 43081, "start": 42768, "text": "To minimize bias during learning, before solving the name sharing problem for an ambiguous author name, citations related to the author name are removed from the training data and the classifier is re-trained.And if the author name does not appear in the training data, the classifier is used without re-training.", "rank": 154, "paragraph_comparative_number": 0, "entities": [], "id": "p_154"}, "sentences": [{"end": 42977, "text": "To minimize bias during learning, before solving the name sharing problem for an ambiguous author name, citations related to the author name are removed from the training data and the classifier is re-trained.", "rank": 489, "start": 42768, "IsComparative": "0", "id": "st_489"}, {"end": 43081, "text": "And if the author name does not appear in the training data, the classifier is used without re-training.", "rank": 490, "start": 42977, "IsComparative": "0", "id": "st_490"}]}, {"paragraph_info": {"end": 43116, "start": 43081, "text": "F. Solving the name variant problem", "rank": 155, "paragraph_comparative_number": 0, "entities": [], "id": "p_155"}, "sentences": [{"end": 43116, "text": "F. Solving the name variant problem", "rank": 491, "start": 43081, "IsComparative": "0", "id": "st_491"}]}, {"paragraph_info": {"end": 44615, "start": 43116, "text": "We solve the name variant problem by Algorithm 2.There are two thresholds to be determined in advance: dthresh and mthresh.dthresh is the admission threshold of name distance.If the name distance of two author names is greater than this value, they are considered from different entities and are dismissed.This threshold determines efficiency of the algorithm.If dthresh is too large, the algorithm will be time consuming.In our experiment, we let dthresh be between 1 and 3.The other threshold mthresh is a threshold for name merging, and 0  mthresh  1.For a pair of author names, if their merging rate of citation pair surpasses mthresh, they are considered from the same entity.Figure 6 (right) gives the relationship of mthresh and precision, recall and F-measure of this algorithm.As mthresh increases, precision increases and recall decreases.When 0.1  mthresh  0.35, the algorithm has the highest F-measure.Our algorithm has a high precision 0.99 and recall 0.917.This is because the classifier that has been learned earlier has high performance, after including topic information of the corpus.Previous work in <7> achieved precision 0.997 and recall 0.988 on the Citeseer data set.The performance difference could result from different data sets used.Another potential reason is that <7> considered only the name variant problem, while we consider the name sharing problem and the name mixing problem as well as the name variant problem.That makes our tasks and criteria a little different.", "rank": 156, "paragraph_comparative_number": 8, "entities": [], "id": "p_156"}, "sentences": [{"end": 43165, "text": "We solve the name variant problem by Algorithm 2.", "rank": 492, "start": 43116, "IsComparative": "0", "id": "st_492"}, {"end": 43239, "text": "There are two thresholds to be determined in advance: dthresh and mthresh.", "rank": 493, "start": 43165, "IsComparative": "1", "id": "st_493"}, {"end": 43291, "text": "dthresh is the admission threshold of name distance.", "rank": 494, "start": 43239, "IsComparative": "0", "id": "st_494"}, {"end": 43422, "text": "If the name distance of two author names is greater than this value, they are considered from different entities and are dismissed.", "rank": 495, "start": 43291, "IsComparative": "0", "id": "st_495"}, {"end": 43476, "text": "This threshold determines efficiency of the algorithm.", "rank": 496, "start": 43422, "IsComparative": "0", "id": "st_496"}, {"end": 43538, "text": "If dthresh is too large, the algorithm will be time consuming.", "rank": 497, "start": 43476, "IsComparative": "0", "id": "st_497"}, {"end": 43591, "text": "In our experiment, we let dthresh be between 1 and 3.", "rank": 498, "start": 43538, "IsComparative": "1", "id": "st_498"}, {"end": 43670, "text": "The other threshold mthresh is a threshold for name merging, and 0  mthresh  1.", "rank": 499, "start": 43591, "IsComparative": "0", "id": "st_499"}, {"end": 43797, "text": "For a pair of author names, if their merging rate of citation pair surpasses mthresh, they are considered from the same entity.", "rank": 500, "start": 43670, "IsComparative": "1", "id": "st_500"}, {"end": 43902, "text": "Figure 6 (right) gives the relationship of mthresh and precision, recall and F-measure of this algorithm.", "rank": 501, "start": 43797, "IsComparative": "0", "id": "st_501"}, {"end": 43965, "text": "As mthresh increases, precision increases and recall decreases.", "rank": 502, "start": 43902, "IsComparative": "1", "id": "st_502"}, {"end": 44030, "text": "When 0.1  mthresh  0.35, the algorithm has the highest F-measure.", "rank": 503, "start": 43965, "IsComparative": "0", "id": "st_503"}, {"end": 44087, "text": "Our algorithm has a high precision 0.99 and recall 0.917.", "rank": 504, "start": 44030, "IsComparative": "1", "id": "st_504"}, {"end": 44218, "text": "This is because the classifier that has been learned earlier has high performance, after including topic information of the corpus.", "rank": 505, "start": 44087, "IsComparative": "1", "id": "st_505"}, {"end": 44306, "text": "Previous work in <7> achieved precision 0.997 and recall 0.988 on the Citeseer data set.", "rank": 506, "start": 44218, "IsComparative": "1", "id": "st_506"}, {"end": 44376, "text": "The performance difference could result from different data sets used.", "rank": 507, "start": 44306, "IsComparative": "0", "id": "st_507"}, {"end": 44562, "text": "Another potential reason is that <7> considered only the name variant problem, while we consider the name sharing problem and the name mixing problem as well as the name variant problem.", "rank": 508, "start": 44376, "IsComparative": "0", "id": "st_508"}, {"end": 44615, "text": "That makes our tasks and criteria a little different.", "rank": 509, "start": 44562, "IsComparative": "1", "id": "st_509"}]}, {"paragraph_info": {"end": 44630, "start": 44615, "text": "VI.RELATED WORK", "rank": 157, "paragraph_comparative_number": 1, "entities": [], "id": "p_157"}, "sentences": [{"end": 44618, "text": "VI.", "rank": 510, "start": 44615, "IsComparative": "0", "id": "st_510"}, {"end": 44630, "text": "RELATED WORK", "rank": 511, "start": 44618, "IsComparative": "1", "id": "st_511"}]}, {"paragraph_info": {"end": 44710, "start": 44630, "text": "The related work include two facets  probabilistic models and entity resolution.", "rank": 158, "paragraph_comparative_number": 1, "entities": [], "id": "p_158"}, "sentences": [{"end": 44710, "text": "The related work include two facets  probabilistic models and entity resolution.", "rank": 512, "start": 44630, "IsComparative": "1", "id": "st_512"}]}, {"paragraph_info": {"end": 44730, "start": 44710, "text": "Probabilistic models", "rank": 159, "paragraph_comparative_number": 0, "entities": [], "id": "p_159"}, "sentences": [{"end": 44730, "text": "Probabilistic models", "rank": 513, "start": 44710, "IsComparative": "0", "id": "st_513"}]}, {"paragraph_info": {"end": 45222, "start": 44730, "text": "Probabilistic models of latent variables have been proposed and applied in information retrieval for years.<29> introduced probabilistic Latent Semantic Indexing (pLSI), an approach for automated document indexing based on a statistical latent class model.<8> pointed out a limitation of the pLSI model  providing no probabilistic model at the level of document, and then proposed Latent Dirichlet Allocation (LDA), a generative probabilistic model, with the latent variable topic introduced.", "rank": 160, "paragraph_comparative_number": 1, "entities": [], "id": "p_160"}, "sentences": [{"end": 44837, "text": "Probabilistic models of latent variables have been proposed and applied in information retrieval for years.", "rank": 514, "start": 44730, "IsComparative": "0", "id": "st_514"}, {"end": 44986, "text": "<29> introduced probabilistic Latent Semantic Indexing (pLSI), an approach for automated document indexing based on a statistical latent class model.", "rank": 515, "start": 44837, "IsComparative": "0", "id": "st_515"}, {"end": 45222, "text": "<8> pointed out a limitation of the pLSI model  providing no probabilistic model at the level of document, and then proposed Latent Dirichlet Allocation (LDA), a generative probabilistic model, with the latent variable topic introduced.", "rank": 516, "start": 44986, "IsComparative": "1", "id": "st_516"}]}, {"paragraph_info": {"end": 45700, "start": 45222, "text": "Based on the LDA model, <12> employed Gibbs Sampling, a Monte Carlo method <16><19><20><18>, to discover topics in a corpus.And the number of topics is estimated by maximizing log likelihood.<30><31> extended LDA by introducing author into the model.In the model documents are generated by topicword and author-topic distributions that are learned from data.But it is not clear that the model can be used in name disambiguation.<7> extended and applied LDA to entity resolution.", "rank": 161, "paragraph_comparative_number": 1, "entities": [], "id": "p_161"}, "sentences": [{"end": 45346, "text": "Based on the LDA model, <12> employed Gibbs Sampling, a Monte Carlo method <16><19><20><18>, to discover topics in a corpus.", "rank": 517, "start": 45222, "IsComparative": "0", "id": "st_517"}, {"end": 45413, "text": "And the number of topics is estimated by maximizing log likelihood.", "rank": 518, "start": 45346, "IsComparative": "0", "id": "st_518"}, {"end": 45472, "text": "<30><31> extended LDA by introducing author into the model.", "rank": 519, "start": 45413, "IsComparative": "1", "id": "st_519"}, {"end": 45580, "text": "In the model documents are generated by topicword and author-topic distributions that are learned from data.", "rank": 520, "start": 45472, "IsComparative": "0", "id": "st_520"}, {"end": 45650, "text": "But it is not clear that the model can be used in name disambiguation.", "rank": 521, "start": 45580, "IsComparative": "0", "id": "st_521"}, {"end": 45700, "text": "<7> extended and applied LDA to entity resolution.", "rank": 522, "start": 45650, "IsComparative": "0", "id": "st_522"}]}, {"paragraph_info": {"end": 45989, "start": 45700, "text": "The document, topic and word previously in LDA correspond to the citation, group label and author reference, respectively, in <7>.The group label is a latent variable already.And they added another latent variable  author label (unambiguous author name) and a noise model of name variants.", "rank": 162, "paragraph_comparative_number": 2, "entities": [], "id": "p_162"}, "sentences": [{"end": 45830, "text": "The document, topic and word previously in LDA correspond to the citation, group label and author reference, respectively, in <7>.", "rank": 523, "start": 45700, "IsComparative": "1", "id": "st_523"}, {"end": 45875, "text": "The group label is a latent variable already.", "rank": 524, "start": 45830, "IsComparative": "0", "id": "st_524"}, {"end": 45989, "text": "And they added another latent variable  author label (unambiguous author name) and a noise model of name variants.", "rank": 525, "start": 45875, "IsComparative": "1", "id": "st_525"}]}, {"paragraph_info": {"end": 46006, "start": 45989, "text": "Entity resolution", "rank": 163, "paragraph_comparative_number": 0, "entities": [], "id": "p_163"}, "sentences": [{"end": 46006, "text": "Entity resolution", "rank": 526, "start": 45989, "IsComparative": "0", "id": "st_526"}]}, {"paragraph_info": {"end": 46482, "start": 46006, "text": "There have been quite a few papers on entity resolution or name disambiguation.Some focus on name sharing problem <2><5><3><6><4>.<3> aimed to solve the name sharing problem by constructing and analyzing a social network.<6> tried to solve the name sharing problem by analyzing results returned from search engines.<4> proposed DISTINCT method.Some other researchers aimed at solving the name variant problem, like <7><32><33><34>.The problem is also called entity resolution.", "rank": 164, "paragraph_comparative_number": 3, "entities": [], "id": "p_164"}, "sentences": [{"end": 46085, "text": "There have been quite a few papers on entity resolution or name disambiguation.", "rank": 527, "start": 46006, "IsComparative": "0", "id": "st_527"}, {"end": 46136, "text": "Some focus on name sharing problem <2><5><3><6><4>.", "rank": 528, "start": 46085, "IsComparative": "0", "id": "st_528"}, {"end": 46227, "text": "<3> aimed to solve the name sharing problem by constructing and analyzing a social network.", "rank": 529, "start": 46136, "IsComparative": "1", "id": "st_529"}, {"end": 46321, "text": "<6> tried to solve the name sharing problem by analyzing results returned from search engines.", "rank": 530, "start": 46227, "IsComparative": "1", "id": "st_530"}, {"end": 46350, "text": "<4> proposed DISTINCT method.", "rank": 531, "start": 46321, "IsComparative": "1", "id": "st_531"}, {"end": 46437, "text": "Some other researchers aimed at solving the name variant problem, like <7><32><33><34>.", "rank": 532, "start": 46350, "IsComparative": "0", "id": "st_532"}, {"end": 46482, "text": "The problem is also called entity resolution.", "rank": 533, "start": 46437, "IsComparative": "0", "id": "st_533"}]}, {"paragraph_info": {"end": 46497, "start": 46482, "text": "VII.CONCLUSIONS", "rank": 165, "paragraph_comparative_number": 1, "entities": [], "id": "p_165"}, "sentences": [{"end": 46486, "text": "VII.", "rank": 534, "start": 46482, "IsComparative": "0", "id": "st_534"}, {"end": 46497, "text": "CONCLUSIONS", "rank": 535, "start": 46486, "IsComparative": "1", "id": "st_535"}]}, {"paragraph_info": {"end": 46584, "start": 46497, "text": "In this paper, we proposed a new solution to the problem of complete entity resolution.", "rank": 166, "paragraph_comparative_number": 1, "entities": [], "id": "p_166"}, "sentences": [{"end": 46584, "text": "In this paper, we proposed a new solution to the problem of complete entity resolution.", "rank": 536, "start": 46497, "IsComparative": "1", "id": "st_536"}]}, {"paragraph_info": {"end": 46870, "start": 46584, "text": "The LDA-dual model is a graphical model proposed as an extension to the LDA model by considering two types of information in documents, while the LDA model considers only one type of information.From the LDA-dual model we derived a corpuss posterior distribution and three propositions.", "rank": 167, "paragraph_comparative_number": 2, "entities": [], "id": "p_167"}, "sentences": [{"end": 46779, "text": "The LDA-dual model is a graphical model proposed as an extension to the LDA model by considering two types of information in documents, while the LDA model considers only one type of information.", "rank": 537, "start": 46584, "IsComparative": "1", "id": "st_537"}, {"end": 46870, "text": "From the LDA-dual model we derived a corpuss posterior distribution and three propositions.", "rank": 538, "start": 46779, "IsComparative": "1", "id": "st_538"}]}, {"paragraph_info": {"end": 47088, "start": 46870, "text": "We then proposed an improved process to learn the model from a corpus by Gibbs sampling, including Dirichlet priors in the sampling.The model is then applied to help solve two subproblems of complete entity resolution.", "rank": 168, "paragraph_comparative_number": 2, "entities": [], "id": "p_168"}, "sentences": [{"end": 47002, "text": "We then proposed an improved process to learn the model from a corpus by Gibbs sampling, including Dirichlet priors in the sampling.", "rank": 539, "start": 46870, "IsComparative": "1", "id": "st_539"}, {"end": 47088, "text": "The model is then applied to help solve two subproblems of complete entity resolution.", "rank": 540, "start": 47002, "IsComparative": "1", "id": "st_540"}]}, {"paragraph_info": {"end": 47266, "start": 47088, "text": "One main difference between our approach and other techniques is that we emphasize the use of the global information of a corpus like topics based on learning the LDA-dual model.", "rank": 169, "paragraph_comparative_number": 1, "entities": [], "id": "p_169"}, "sentences": [{"end": 47266, "text": "One main difference between our approach and other techniques is that we emphasize the use of the global information of a corpus like topics based on learning the LDA-dual model.", "rank": 541, "start": 47088, "IsComparative": "1", "id": "st_541"}]}]}